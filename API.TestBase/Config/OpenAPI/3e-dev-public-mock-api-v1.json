{
    "openapi": "3.0.1",
    "info": {
        "title": "DEV - 3E Public Mock API",
        "description": "DEV - 3E Public Mock API",
        "version": "v1"
    },
    "servers": [
        {
            "url": "https://api.us.nonprod.elite.com/dev/3e/mock/v1"
        },
        {
            "url": "https://api.uk.nonprod.elite.com/dev/3e/mock/v1"
        },
        {
            "url": "https://api.nonprod.elite.com/dev/3e/mock/v1"
        }
    ],
    "paths": {
        "/integration/proforma/generate": {
            "post": {
                "tags": [
                    "IntegrationProforma"
                ],
                "summary": "IntegrationProforma_StartProformaGeneration",
                "description": "IntegrationProforma_StartProformaGeneration",
                "operationId": "IntegrationProforma_StartProformaGeneration",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaGenerationRequest"
                            },
                            "example": {
                                "profGenRunId": "string"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaGenerationRequest"
                            },
                            "example": {
                                "profGenRunId": "string"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaGenerationRequest"
                            },
                            "example": {
                                "profGenRunId": "string"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaGenerationRequest"
                            },
                            "example": "<E3E.API.Proforma.Models.ProformaGenerationRequest> <profGenRunId>string</profGenRunId> </E3E.API.Proforma.Models.ProformaGenerationRequest>"
                        },
                        "text/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaGenerationRequest"
                            },
                            "example": "<E3E.API.Proforma.Models.ProformaGenerationRequest> <profGenRunId>string</profGenRunId> </E3E.API.Proforma.Models.ProformaGenerationRequest>"
                        },
                        "application/*+xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaGenerationRequest"
                            },
                            "example": "<E3E.API.Proforma.Models.ProformaGenerationRequest> <profGenRunId>string</profGenRunId> </E3E.API.Proforma.Models.ProformaGenerationRequest>"
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.StartProformaGenerationResponse"
                                },
                                "example": {
                                    "success": true,
                                    "message": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.StartProformaGenerationResponse"
                                },
                                "example": {
                                    "success": true,
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.StartProformaGenerationResponse"
                                },
                                "example": {
                                    "success": true,
                                    "message": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.StartProformaGenerationResponse"
                                },
                                "example": {
                                    "success": true,
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.StartProformaGenerationResponse"
                                },
                                "example": {
                                    "success": true,
                                    "message": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.StartProformaGenerationResponse"
                                },
                                "example": {
                                    "success": true,
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/integration/proforma/lock-unlock": {
            "post": {
                "tags": [
                    "IntegrationProforma"
                ],
                "summary": "IntegrationProforma_LockProforma",
                "description": "IntegrationProforma_LockProforma",
                "operationId": "IntegrationProforma_LockProforma",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaLockRequest"
                            },
                            "example": {
                                "id": "string",
                                "isLock": true
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaLockRequest"
                            },
                            "example": {
                                "id": "string",
                                "isLock": true
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaLockRequest"
                            },
                            "example": {
                                "id": "string",
                                "isLock": true
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaLockRequest"
                            },
                            "example": "<E3E.API.Proforma.Models.ProformaLockRequest> <id>string</id> <isLock>true</isLock> </E3E.API.Proforma.Models.ProformaLockRequest>"
                        },
                        "text/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaLockRequest"
                            },
                            "example": "<E3E.API.Proforma.Models.ProformaLockRequest> <id>string</id> <isLock>true</isLock> </E3E.API.Proforma.Models.ProformaLockRequest>"
                        },
                        "application/*+xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaLockRequest"
                            },
                            "example": "<E3E.API.Proforma.Models.ProformaLockRequest> <id>string</id> <isLock>true</isLock> </E3E.API.Proforma.Models.ProformaLockRequest>"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaLockResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string",
                                    "isLocked": true
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaLockResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string",
                                    "isLocked": true
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaLockResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string",
                                    "isLocked": true
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaLockResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string",
                                    "isLocked": true
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaLockResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string",
                                    "isLocked": true
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaLockResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string",
                                    "isLocked": true
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/integration/proforma/update": {
            "patch": {
                "tags": [
                    "IntegrationProforma"
                ],
                "summary": "IntegrationProforma_UpdateProforma",
                "description": "IntegrationProforma_UpdateProforma",
                "operationId": "IntegrationProforma_UpdateProforma",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateRequest"
                            },
                            "example": {
                                "id": "string",
                                "authTimekeeper": 0,
                                "billingContact": 0,
                                "billTemplate": "string",
                                "billTkpr": 0,
                                "billingOffice": "string",
                                "chargeStart": "string",
                                "chargeEnd": "string",
                                "chrgReasonType": "string",
                                "collTkpr": 0,
                                "contactInfo": "string",
                                "costStart": "string",
                                "costEnd": "string",
                                "costReasonType": "string",
                                "coverLetterNarrative": "string",
                                "dueDays": 0,
                                "fromTaxArea": "string",
                                "internalComments": "string",
                                "invDate": "string",
                                "invNarrative": "string",
                                "language": 0,
                                "mattOverDescription": "string",
                                "origTaxInvNumber": "string",
                                "prevInvMaster": 0,
                                "profDate": "string",
                                "profStatus": "string",
                                "profStatusCap": "string",
                                "reasonType": "string",
                                "site": 0,
                                "spvTkpr": 0,
                                "taxDate": "string",
                                "taxReportID1": "string",
                                "taxReportID2": "string",
                                "toTaxArea": "string",
                                "timeStart": "string",
                                "timeEnd": "string",
                                "vatRegistration": "string",
                                "profDetailTime": [
                                    {
                                        "id": "string",
                                        "authTimekeeper": 0,
                                        "editAmt": 0,
                                        "internalComments": "string",
                                        "isAnticipated": true,
                                        "isNB": true,
                                        "isNoCharge": true,
                                        "office": "string",
                                        "reasonType": "string",
                                        "sortString": "string",
                                        "spvTimekeeper": 0,
                                        "timePracticeArea": "string",
                                        "toleranceAmt": 0,
                                        "tolerancePct": 0,
                                        "workActivity": "string",
                                        "workActivity2": "string",
                                        "workAmt": 0,
                                        "workCostEntryUnit": 0,
                                        "workCostEntryUnitType": "string",
                                        "workLanguage": 0,
                                        "workNarrative": "string",
                                        "workPhase": "string",
                                        "workPhase2": "string",
                                        "workStdAmt": 0,
                                        "workTask": "string",
                                        "workTask2": "string",
                                        "workTaxCode": "string",
                                        "workTaxJuris": "string",
                                        "workTimekeeper": 0,
                                        "workTimeType": "string",
                                        "refCurrency": "string",
                                        "refRate": 0,
                                        "stdCurrency": "string",
                                        "stdRate": 0
                                    }
                                ],
                                "profDetailCost": [
                                    {
                                        "id": "string",
                                        "authTimekeeper": 0,
                                        "editAmt": 0,
                                        "internalComments": "string",
                                        "isAnticipated": true,
                                        "isNB": true,
                                        "isNoCharge": true,
                                        "office": "string",
                                        "reasonType": "string",
                                        "sortString": "string",
                                        "spvTimekeeper": 0,
                                        "timePracticeArea": "string",
                                        "toleranceAmt": 0,
                                        "tolerancePct": 0,
                                        "workActivity": "string",
                                        "workActivity2": "string",
                                        "workAmt": 0,
                                        "workCostEntryUnit": 0,
                                        "workCostEntryUnitType": "string",
                                        "workLanguage": 0,
                                        "workNarrative": "string",
                                        "workPhase": "string",
                                        "workPhase2": "string",
                                        "workStdAmt": 0,
                                        "workTask": "string",
                                        "workTask2": "string",
                                        "workTaxCode": "string",
                                        "workTaxJuris": "string",
                                        "workTimekeeper": 0,
                                        "workTimeType": "string",
                                        "refAmt": 0,
                                        "refCurrency": "string",
                                        "refRate": 0,
                                        "stdAmt": 0,
                                        "stdCurrency": "string",
                                        "stdRate": 0
                                    }
                                ],
                                "profDetailChrg": [
                                    {
                                        "id": "string",
                                        "authTimekeeper": 0,
                                        "editAmt": 0,
                                        "internalComments": "string",
                                        "isAnticipated": true,
                                        "isNB": true,
                                        "isNoCharge": true,
                                        "office": "string",
                                        "reasonType": "string",
                                        "sortString": "string",
                                        "spvTimekeeper": 0,
                                        "timePracticeArea": "string",
                                        "toleranceAmt": 0,
                                        "tolerancePct": 0,
                                        "workActivity": "string",
                                        "workActivity2": "string",
                                        "workAmt": 0,
                                        "workCostEntryUnit": 0,
                                        "workCostEntryUnitType": "string",
                                        "workLanguage": 0,
                                        "workNarrative": "string",
                                        "workPhase": "string",
                                        "workPhase2": "string",
                                        "workStdAmt": 0,
                                        "workTask": "string",
                                        "workTask2": "string",
                                        "workTaxCode": "string",
                                        "workTaxJuris": "string",
                                        "workTimekeeper": 0,
                                        "workTimeType": "string"
                                    }
                                ],
                                "profAdjust": [
                                    {
                                        "id": "string",
                                        "amount": 0,
                                        "adjMethodList": "string",
                                        "startDate": "string",
                                        "endDate": "string",
                                        "timekeeper": 0,
                                        "percentage": 0,
                                        "matter": 0,
                                        "description": "string",
                                        "profAdjustType": "string",
                                        "billAmount": 0,
                                        "taxCode": "string",
                                        "isAdjustWithFilters": true,
                                        "isIncludeOtherAdjustments": true,
                                        "isIncludeFlatFeeCharges": true,
                                        "ordinal": 0,
                                        "timeCardFilter": "string",
                                        "costCardFilter": "string",
                                        "chrgCardFilter": "string"
                                    }
                                ],
                                "profPresParagraph": [
                                    {
                                        "id": "string",
                                        "presDate": "string",
                                        "currency": "string",
                                        "presAmount": 0,
                                        "presHours": 0,
                                        "narrative": "string",
                                        "sortString": "string"
                                    }
                                ]
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateRequest"
                            },
                            "example": {
                                "id": "string",
                                "authTimekeeper": 0,
                                "billingContact": 0,
                                "billTemplate": "string",
                                "billTkpr": 0,
                                "billingOffice": "string",
                                "chargeStart": "string",
                                "chargeEnd": "string",
                                "chrgReasonType": "string",
                                "collTkpr": 0,
                                "contactInfo": "string",
                                "costStart": "string",
                                "costEnd": "string",
                                "costReasonType": "string",
                                "coverLetterNarrative": "string",
                                "dueDays": 0,
                                "fromTaxArea": "string",
                                "internalComments": "string",
                                "invDate": "string",
                                "invNarrative": "string",
                                "language": 0,
                                "mattOverDescription": "string",
                                "origTaxInvNumber": "string",
                                "prevInvMaster": 0,
                                "profDate": "string",
                                "profStatus": "string",
                                "profStatusCap": "string",
                                "reasonType": "string",
                                "site": 0,
                                "spvTkpr": 0,
                                "taxDate": "string",
                                "taxReportID1": "string",
                                "taxReportID2": "string",
                                "toTaxArea": "string",
                                "timeStart": "string",
                                "timeEnd": "string",
                                "vatRegistration": "string",
                                "profDetailTime": [
                                    {
                                        "id": "string",
                                        "authTimekeeper": 0,
                                        "editAmt": 0,
                                        "internalComments": "string",
                                        "isAnticipated": true,
                                        "isNB": true,
                                        "isNoCharge": true,
                                        "office": "string",
                                        "reasonType": "string",
                                        "sortString": "string",
                                        "spvTimekeeper": 0,
                                        "timePracticeArea": "string",
                                        "toleranceAmt": 0,
                                        "tolerancePct": 0,
                                        "workActivity": "string",
                                        "workActivity2": "string",
                                        "workAmt": 0,
                                        "workCostEntryUnit": 0,
                                        "workCostEntryUnitType": "string",
                                        "workLanguage": 0,
                                        "workNarrative": "string",
                                        "workPhase": "string",
                                        "workPhase2": "string",
                                        "workStdAmt": 0,
                                        "workTask": "string",
                                        "workTask2": "string",
                                        "workTaxCode": "string",
                                        "workTaxJuris": "string",
                                        "workTimekeeper": 0,
                                        "workTimeType": "string",
                                        "refCurrency": "string",
                                        "refRate": 0,
                                        "stdCurrency": "string",
                                        "stdRate": 0
                                    }
                                ],
                                "profDetailCost": [
                                    {
                                        "id": "string",
                                        "authTimekeeper": 0,
                                        "editAmt": 0,
                                        "internalComments": "string",
                                        "isAnticipated": true,
                                        "isNB": true,
                                        "isNoCharge": true,
                                        "office": "string",
                                        "reasonType": "string",
                                        "sortString": "string",
                                        "spvTimekeeper": 0,
                                        "timePracticeArea": "string",
                                        "toleranceAmt": 0,
                                        "tolerancePct": 0,
                                        "workActivity": "string",
                                        "workActivity2": "string",
                                        "workAmt": 0,
                                        "workCostEntryUnit": 0,
                                        "workCostEntryUnitType": "string",
                                        "workLanguage": 0,
                                        "workNarrative": "string",
                                        "workPhase": "string",
                                        "workPhase2": "string",
                                        "workStdAmt": 0,
                                        "workTask": "string",
                                        "workTask2": "string",
                                        "workTaxCode": "string",
                                        "workTaxJuris": "string",
                                        "workTimekeeper": 0,
                                        "workTimeType": "string",
                                        "refAmt": 0,
                                        "refCurrency": "string",
                                        "refRate": 0,
                                        "stdAmt": 0,
                                        "stdCurrency": "string",
                                        "stdRate": 0
                                    }
                                ],
                                "profDetailChrg": [
                                    {
                                        "id": "string",
                                        "authTimekeeper": 0,
                                        "editAmt": 0,
                                        "internalComments": "string",
                                        "isAnticipated": true,
                                        "isNB": true,
                                        "isNoCharge": true,
                                        "office": "string",
                                        "reasonType": "string",
                                        "sortString": "string",
                                        "spvTimekeeper": 0,
                                        "timePracticeArea": "string",
                                        "toleranceAmt": 0,
                                        "tolerancePct": 0,
                                        "workActivity": "string",
                                        "workActivity2": "string",
                                        "workAmt": 0,
                                        "workCostEntryUnit": 0,
                                        "workCostEntryUnitType": "string",
                                        "workLanguage": 0,
                                        "workNarrative": "string",
                                        "workPhase": "string",
                                        "workPhase2": "string",
                                        "workStdAmt": 0,
                                        "workTask": "string",
                                        "workTask2": "string",
                                        "workTaxCode": "string",
                                        "workTaxJuris": "string",
                                        "workTimekeeper": 0,
                                        "workTimeType": "string"
                                    }
                                ],
                                "profAdjust": [
                                    {
                                        "id": "string",
                                        "amount": 0,
                                        "adjMethodList": "string",
                                        "startDate": "string",
                                        "endDate": "string",
                                        "timekeeper": 0,
                                        "percentage": 0,
                                        "matter": 0,
                                        "description": "string",
                                        "profAdjustType": "string",
                                        "billAmount": 0,
                                        "taxCode": "string",
                                        "isAdjustWithFilters": true,
                                        "isIncludeOtherAdjustments": true,
                                        "isIncludeFlatFeeCharges": true,
                                        "ordinal": 0,
                                        "timeCardFilter": "string",
                                        "costCardFilter": "string",
                                        "chrgCardFilter": "string"
                                    }
                                ],
                                "profPresParagraph": [
                                    {
                                        "id": "string",
                                        "presDate": "string",
                                        "currency": "string",
                                        "presAmount": 0,
                                        "presHours": 0,
                                        "narrative": "string",
                                        "sortString": "string"
                                    }
                                ]
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateRequest"
                            },
                            "example": {
                                "id": "string",
                                "authTimekeeper": 0,
                                "billingContact": 0,
                                "billTemplate": "string",
                                "billTkpr": 0,
                                "billingOffice": "string",
                                "chargeStart": "string",
                                "chargeEnd": "string",
                                "chrgReasonType": "string",
                                "collTkpr": 0,
                                "contactInfo": "string",
                                "costStart": "string",
                                "costEnd": "string",
                                "costReasonType": "string",
                                "coverLetterNarrative": "string",
                                "dueDays": 0,
                                "fromTaxArea": "string",
                                "internalComments": "string",
                                "invDate": "string",
                                "invNarrative": "string",
                                "language": 0,
                                "mattOverDescription": "string",
                                "origTaxInvNumber": "string",
                                "prevInvMaster": 0,
                                "profDate": "string",
                                "profStatus": "string",
                                "profStatusCap": "string",
                                "reasonType": "string",
                                "site": 0,
                                "spvTkpr": 0,
                                "taxDate": "string",
                                "taxReportID1": "string",
                                "taxReportID2": "string",
                                "toTaxArea": "string",
                                "timeStart": "string",
                                "timeEnd": "string",
                                "vatRegistration": "string",
                                "profDetailTime": [
                                    {
                                        "id": "string",
                                        "authTimekeeper": 0,
                                        "editAmt": 0,
                                        "internalComments": "string",
                                        "isAnticipated": true,
                                        "isNB": true,
                                        "isNoCharge": true,
                                        "office": "string",
                                        "reasonType": "string",
                                        "sortString": "string",
                                        "spvTimekeeper": 0,
                                        "timePracticeArea": "string",
                                        "toleranceAmt": 0,
                                        "tolerancePct": 0,
                                        "workActivity": "string",
                                        "workActivity2": "string",
                                        "workAmt": 0,
                                        "workCostEntryUnit": 0,
                                        "workCostEntryUnitType": "string",
                                        "workLanguage": 0,
                                        "workNarrative": "string",
                                        "workPhase": "string",
                                        "workPhase2": "string",
                                        "workStdAmt": 0,
                                        "workTask": "string",
                                        "workTask2": "string",
                                        "workTaxCode": "string",
                                        "workTaxJuris": "string",
                                        "workTimekeeper": 0,
                                        "workTimeType": "string",
                                        "refCurrency": "string",
                                        "refRate": 0,
                                        "stdCurrency": "string",
                                        "stdRate": 0
                                    }
                                ],
                                "profDetailCost": [
                                    {
                                        "id": "string",
                                        "authTimekeeper": 0,
                                        "editAmt": 0,
                                        "internalComments": "string",
                                        "isAnticipated": true,
                                        "isNB": true,
                                        "isNoCharge": true,
                                        "office": "string",
                                        "reasonType": "string",
                                        "sortString": "string",
                                        "spvTimekeeper": 0,
                                        "timePracticeArea": "string",
                                        "toleranceAmt": 0,
                                        "tolerancePct": 0,
                                        "workActivity": "string",
                                        "workActivity2": "string",
                                        "workAmt": 0,
                                        "workCostEntryUnit": 0,
                                        "workCostEntryUnitType": "string",
                                        "workLanguage": 0,
                                        "workNarrative": "string",
                                        "workPhase": "string",
                                        "workPhase2": "string",
                                        "workStdAmt": 0,
                                        "workTask": "string",
                                        "workTask2": "string",
                                        "workTaxCode": "string",
                                        "workTaxJuris": "string",
                                        "workTimekeeper": 0,
                                        "workTimeType": "string",
                                        "refAmt": 0,
                                        "refCurrency": "string",
                                        "refRate": 0,
                                        "stdAmt": 0,
                                        "stdCurrency": "string",
                                        "stdRate": 0
                                    }
                                ],
                                "profDetailChrg": [
                                    {
                                        "id": "string",
                                        "authTimekeeper": 0,
                                        "editAmt": 0,
                                        "internalComments": "string",
                                        "isAnticipated": true,
                                        "isNB": true,
                                        "isNoCharge": true,
                                        "office": "string",
                                        "reasonType": "string",
                                        "sortString": "string",
                                        "spvTimekeeper": 0,
                                        "timePracticeArea": "string",
                                        "toleranceAmt": 0,
                                        "tolerancePct": 0,
                                        "workActivity": "string",
                                        "workActivity2": "string",
                                        "workAmt": 0,
                                        "workCostEntryUnit": 0,
                                        "workCostEntryUnitType": "string",
                                        "workLanguage": 0,
                                        "workNarrative": "string",
                                        "workPhase": "string",
                                        "workPhase2": "string",
                                        "workStdAmt": 0,
                                        "workTask": "string",
                                        "workTask2": "string",
                                        "workTaxCode": "string",
                                        "workTaxJuris": "string",
                                        "workTimekeeper": 0,
                                        "workTimeType": "string"
                                    }
                                ],
                                "profAdjust": [
                                    {
                                        "id": "string",
                                        "amount": 0,
                                        "adjMethodList": "string",
                                        "startDate": "string",
                                        "endDate": "string",
                                        "timekeeper": 0,
                                        "percentage": 0,
                                        "matter": 0,
                                        "description": "string",
                                        "profAdjustType": "string",
                                        "billAmount": 0,
                                        "taxCode": "string",
                                        "isAdjustWithFilters": true,
                                        "isIncludeOtherAdjustments": true,
                                        "isIncludeFlatFeeCharges": true,
                                        "ordinal": 0,
                                        "timeCardFilter": "string",
                                        "costCardFilter": "string",
                                        "chrgCardFilter": "string"
                                    }
                                ],
                                "profPresParagraph": [
                                    {
                                        "id": "string",
                                        "presDate": "string",
                                        "currency": "string",
                                        "presAmount": 0,
                                        "presHours": 0,
                                        "narrative": "string",
                                        "sortString": "string"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/integration/proforma/transfer": {
            "post": {
                "tags": [
                    "IntegrationProforma"
                ],
                "summary": "IntegrationProforma_TransferCards",
                "description": "IntegrationProforma_TransferCards",
                "operationId": "IntegrationProforma_TransferCards",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaCardTransferRequest"
                            },
                            "example": {
                                "timecards": [
                                    "string"
                                ],
                                "costcards": [
                                    "string"
                                ],
                                "chargecards": [
                                    "string"
                                ],
                                "proformaId": "string",
                                "reasonType": "string",
                                "authTimekeeper": 0,
                                "targetMatter": 0,
                                "targetProforma": 0,
                                "isRecalculateRate": false
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaCardTransferRequest"
                            },
                            "example": {
                                "timecards": [
                                    "string"
                                ],
                                "costcards": [
                                    "string"
                                ],
                                "chargecards": [
                                    "string"
                                ],
                                "proformaId": "string",
                                "reasonType": "string",
                                "authTimekeeper": 0,
                                "targetMatter": 0,
                                "targetProforma": 0,
                                "isRecalculateRate": false
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaCardTransferRequest"
                            },
                            "example": {
                                "timecards": [
                                    "string"
                                ],
                                "costcards": [
                                    "string"
                                ],
                                "chargecards": [
                                    "string"
                                ],
                                "proformaId": "string",
                                "reasonType": "string",
                                "authTimekeeper": 0,
                                "targetMatter": 0,
                                "targetProforma": 0,
                                "isRecalculateRate": false
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaCardTransferRequest"
                            },
                            "example": "<E3E.API.Proforma.Models.ProformaCardTransferRequest> <timecards>string</timecards> <costcards>string</costcards> <chargecards>string</chargecards> <proformaId>string</proformaId> <reasonType>string</reasonType> <authTimekeeper>0</authTimekeeper> <targetMatter>0</targetMatter> <targetProforma>0</targetProforma> <isRecalculateRate>False</isRecalculateRate> </E3E.API.Proforma.Models.ProformaCardTransferRequest>"
                        },
                        "text/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaCardTransferRequest"
                            },
                            "example": "<E3E.API.Proforma.Models.ProformaCardTransferRequest> <timecards>string</timecards> <costcards>string</costcards> <chargecards>string</chargecards> <proformaId>string</proformaId> <reasonType>string</reasonType> <authTimekeeper>0</authTimekeeper> <targetMatter>0</targetMatter> <targetProforma>0</targetProforma> <isRecalculateRate>False</isRecalculateRate> </E3E.API.Proforma.Models.ProformaCardTransferRequest>"
                        },
                        "application/*+xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaCardTransferRequest"
                            },
                            "example": "<E3E.API.Proforma.Models.ProformaCardTransferRequest> <timecards>string</timecards> <costcards>string</costcards> <chargecards>string</chargecards> <proformaId>string</proformaId> <reasonType>string</reasonType> <authTimekeeper>0</authTimekeeper> <targetMatter>0</targetMatter> <targetProforma>0</targetProforma> <isRecalculateRate>False</isRecalculateRate> </E3E.API.Proforma.Models.ProformaCardTransferRequest>"
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/integration/proforma/get": {
            "get": {
                "tags": [
                    "IntegrationProforma"
                ],
                "summary": "IntegrationProforma_GetProforma",
                "description": "IntegrationProforma_GetProforma",
                "operationId": "IntegrationProforma_GetProforma",
                "parameters": [
                    {
                        "name": "ProformaId",
                        "in": "query",
                        "description": "Format - uuid.",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaGetResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaGetResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/integration/proforma/exclude": {
            "post": {
                "tags": [
                    "IntegrationProforma"
                ],
                "summary": "IntegrationProforma_ExcludeProformaCard",
                "description": "IntegrationProforma_ExcludeProformaCard",
                "operationId": "IntegrationProforma_ExcludeProformaCard",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaExcludeCardRequest"
                            },
                            "example": {
                                "timecards": [
                                    "string"
                                ],
                                "costcards": [
                                    "string"
                                ],
                                "chargecards": [
                                    "string"
                                ],
                                "proformaId": "string",
                                "reasonType": "string",
                                "authTimekeeper": 0
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaExcludeCardRequest"
                            },
                            "example": {
                                "timecards": [
                                    "string"
                                ],
                                "costcards": [
                                    "string"
                                ],
                                "chargecards": [
                                    "string"
                                ],
                                "proformaId": "string",
                                "reasonType": "string",
                                "authTimekeeper": 0
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaExcludeCardRequest"
                            },
                            "example": {
                                "timecards": [
                                    "string"
                                ],
                                "costcards": [
                                    "string"
                                ],
                                "chargecards": [
                                    "string"
                                ],
                                "proformaId": "string",
                                "reasonType": "string",
                                "authTimekeeper": 0
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaExcludeCardRequest"
                            },
                            "example": "<E3E.API.Proforma.Models.ProformaExcludeCardRequest> <timecards>string</timecards> <costcards>string</costcards> <chargecards>string</chargecards> <proformaId>string</proformaId> <reasonType>string</reasonType> <authTimekeeper>0</authTimekeeper> </E3E.API.Proforma.Models.ProformaExcludeCardRequest>"
                        },
                        "text/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaExcludeCardRequest"
                            },
                            "example": "<E3E.API.Proforma.Models.ProformaExcludeCardRequest> <timecards>string</timecards> <costcards>string</costcards> <chargecards>string</chargecards> <proformaId>string</proformaId> <reasonType>string</reasonType> <authTimekeeper>0</authTimekeeper> </E3E.API.Proforma.Models.ProformaExcludeCardRequest>"
                        },
                        "application/*+xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaExcludeCardRequest"
                            },
                            "example": "<E3E.API.Proforma.Models.ProformaExcludeCardRequest> <timecards>string</timecards> <costcards>string</costcards> <chargecards>string</chargecards> <proformaId>string</proformaId> <reasonType>string</reasonType> <authTimekeeper>0</authTimekeeper> </E3E.API.Proforma.Models.ProformaExcludeCardRequest>"
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/integration/proforma/include": {
            "post": {
                "tags": [
                    "IntegrationProforma"
                ],
                "summary": "IntegrationProforma_IncludeCards",
                "description": "IntegrationProforma_IncludeCards",
                "operationId": "IntegrationProforma_IncludeCards",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaIncludeCardsRequest"
                            },
                            "example": {
                                "proformaId": "string",
                                "timecards": [
                                    0
                                ],
                                "costcards": [
                                    0
                                ],
                                "chargecards": [
                                    0
                                ]
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaIncludeCardsRequest"
                            },
                            "example": {
                                "proformaId": "string",
                                "timecards": [
                                    0
                                ],
                                "costcards": [
                                    0
                                ],
                                "chargecards": [
                                    0
                                ]
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaIncludeCardsRequest"
                            },
                            "example": {
                                "proformaId": "string",
                                "timecards": [
                                    0
                                ],
                                "costcards": [
                                    0
                                ],
                                "chargecards": [
                                    0
                                ]
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaIncludeCardsRequest"
                            },
                            "example": "<E3E.API.Proforma.Models.ProformaIncludeCardsRequest> <proformaId>string</proformaId> <timecards>0</timecards> <costcards>0</costcards> <chargecards>0</chargecards> </E3E.API.Proforma.Models.ProformaIncludeCardsRequest>"
                        },
                        "text/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaIncludeCardsRequest"
                            },
                            "example": "<E3E.API.Proforma.Models.ProformaIncludeCardsRequest> <proformaId>string</proformaId> <timecards>0</timecards> <costcards>0</costcards> <chargecards>0</chargecards> </E3E.API.Proforma.Models.ProformaIncludeCardsRequest>"
                        },
                        "application/*+xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaIncludeCardsRequest"
                            },
                            "example": "<E3E.API.Proforma.Models.ProformaIncludeCardsRequest> <proformaId>string</proformaId> <timecards>0</timecards> <costcards>0</costcards> <chargecards>0</chargecards> </E3E.API.Proforma.Models.ProformaIncludeCardsRequest>"
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/integration/proforma/combine": {
            "post": {
                "tags": [
                    "IntegrationProforma"
                ],
                "summary": "IntegrationProforma_CombineCards",
                "description": "IntegrationProforma_CombineCards",
                "operationId": "IntegrationProforma_CombineCards",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaCombineCardsRequest"
                            },
                            "example": {
                                "timecards": [
                                    "string"
                                ],
                                "costcards": [
                                    "string"
                                ],
                                "chargecards": [
                                    "string"
                                ],
                                "proformaId": "string",
                                "presDate": "string",
                                "timekeeper": 0,
                                "matter": 0,
                                "timeType": "string",
                                "costType": "string",
                                "chrgType": "string",
                                "taxCode": "string",
                                "taxJurisdiction": "string",
                                "presQty": 0,
                                "presRate": 0,
                                "combineType": "string",
                                "narrative": "string"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaCombineCardsRequest"
                            },
                            "example": {
                                "timecards": [
                                    "string"
                                ],
                                "costcards": [
                                    "string"
                                ],
                                "chargecards": [
                                    "string"
                                ],
                                "proformaId": "string",
                                "presDate": "string",
                                "timekeeper": 0,
                                "matter": 0,
                                "timeType": "string",
                                "costType": "string",
                                "chrgType": "string",
                                "taxCode": "string",
                                "taxJurisdiction": "string",
                                "presQty": 0,
                                "presRate": 0,
                                "combineType": "string",
                                "narrative": "string"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaCombineCardsRequest"
                            },
                            "example": {
                                "timecards": [
                                    "string"
                                ],
                                "costcards": [
                                    "string"
                                ],
                                "chargecards": [
                                    "string"
                                ],
                                "proformaId": "string",
                                "presDate": "string",
                                "timekeeper": 0,
                                "matter": 0,
                                "timeType": "string",
                                "costType": "string",
                                "chrgType": "string",
                                "taxCode": "string",
                                "taxJurisdiction": "string",
                                "presQty": 0,
                                "presRate": 0,
                                "combineType": "string",
                                "narrative": "string"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaCombineCardsRequest"
                            },
                            "example": "<E3E.API.Proforma.Models.ProformaCombineCardsRequest> <timecards>string</timecards> <costcards>string</costcards> <chargecards>string</chargecards> <proformaId>string</proformaId> <presDate>string</presDate> <timekeeper>0</timekeeper> <matter>0</matter> <timeType>string</timeType> <costType>string</costType> <chrgType>string</chrgType> <taxCode>string</taxCode> <taxJurisdiction>string</taxJurisdiction> <presQty>0</presQty> <presRate>0</presRate> <combineType>string</combineType> <narrative>string</narrative> </E3E.API.Proforma.Models.ProformaCombineCardsRequest>"
                        },
                        "text/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaCombineCardsRequest"
                            },
                            "example": "<E3E.API.Proforma.Models.ProformaCombineCardsRequest> <timecards>string</timecards> <costcards>string</costcards> <chargecards>string</chargecards> <proformaId>string</proformaId> <presDate>string</presDate> <timekeeper>0</timekeeper> <matter>0</matter> <timeType>string</timeType> <costType>string</costType> <chrgType>string</chrgType> <taxCode>string</taxCode> <taxJurisdiction>string</taxJurisdiction> <presQty>0</presQty> <presRate>0</presRate> <combineType>string</combineType> <narrative>string</narrative> </E3E.API.Proforma.Models.ProformaCombineCardsRequest>"
                        },
                        "application/*+xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaCombineCardsRequest"
                            },
                            "example": "<E3E.API.Proforma.Models.ProformaCombineCardsRequest> <timecards>string</timecards> <costcards>string</costcards> <chargecards>string</chargecards> <proformaId>string</proformaId> <presDate>string</presDate> <timekeeper>0</timekeeper> <matter>0</matter> <timeType>string</timeType> <costType>string</costType> <chrgType>string</chrgType> <taxCode>string</taxCode> <taxJurisdiction>string</taxJurisdiction> <presQty>0</presQty> <presRate>0</presRate> <combineType>string</combineType> <narrative>string</narrative> </E3E.API.Proforma.Models.ProformaCombineCardsRequest>"
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/integration/proforma/divide": {
            "post": {
                "tags": [
                    "IntegrationProforma"
                ],
                "summary": "IntegrationProforma_DivideCard",
                "description": "IntegrationProforma_DivideCard",
                "operationId": "IntegrationProforma_DivideCard",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaDivideCardRequest"
                            },
                            "example": {
                                "proformaId": "string",
                                "timeCardId": "string",
                                "costCardId": "string",
                                "chargeCardId": "string",
                                "isAdjustRate": true,
                                "isPurge": true,
                                "purgeType": "string",
                                "isSameClient": true,
                                "narrative": "string",
                                "authTimekeeper": 0,
                                "reasonType": "string",
                                "divideInfoList": [
                                    {
                                        "isNB": true,
                                        "isNoCharge": true,
                                        "isInclude": true,
                                        "transferProforma": 0,
                                        "narrative": "string",
                                        "workHrs": 0,
                                        "billHrs": 0,
                                        "workQty": 0,
                                        "billQty": 0,
                                        "workAmt": 0,
                                        "billAmt": 0
                                    }
                                ]
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaDivideCardRequest"
                            },
                            "example": {
                                "proformaId": "string",
                                "timeCardId": "string",
                                "costCardId": "string",
                                "chargeCardId": "string",
                                "isAdjustRate": true,
                                "isPurge": true,
                                "purgeType": "string",
                                "isSameClient": true,
                                "narrative": "string",
                                "authTimekeeper": 0,
                                "reasonType": "string",
                                "divideInfoList": [
                                    {
                                        "isNB": true,
                                        "isNoCharge": true,
                                        "isInclude": true,
                                        "transferProforma": 0,
                                        "narrative": "string",
                                        "workHrs": 0,
                                        "billHrs": 0,
                                        "workQty": 0,
                                        "billQty": 0,
                                        "workAmt": 0,
                                        "billAmt": 0
                                    }
                                ]
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaDivideCardRequest"
                            },
                            "example": {
                                "proformaId": "string",
                                "timeCardId": "string",
                                "costCardId": "string",
                                "chargeCardId": "string",
                                "isAdjustRate": true,
                                "isPurge": true,
                                "purgeType": "string",
                                "isSameClient": true,
                                "narrative": "string",
                                "authTimekeeper": 0,
                                "reasonType": "string",
                                "divideInfoList": [
                                    {
                                        "isNB": true,
                                        "isNoCharge": true,
                                        "isInclude": true,
                                        "transferProforma": 0,
                                        "narrative": "string",
                                        "workHrs": 0,
                                        "billHrs": 0,
                                        "workQty": 0,
                                        "billQty": 0,
                                        "workAmt": 0,
                                        "billAmt": 0
                                    }
                                ]
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaDivideCardRequest"
                            },
                            "example": "<E3E.API.Proforma.Models.ProformaDivideCardRequest> <proformaId>string</proformaId> <timeCardId>string</timeCardId> <costCardId>string</costCardId> <chargeCardId>string</chargeCardId> <isAdjustRate>true</isAdjustRate> <isPurge>true</isPurge> <purgeType>string</purgeType> <isSameClient>true</isSameClient> <narrative>string</narrative> <authTimekeeper>0</authTimekeeper> <reasonType>string</reasonType> <divideInfoList> <isNB>true</isNB> <isNoCharge>true</isNoCharge> <isInclude>true</isInclude> <transferProforma>0</transferProforma> <narrative>string</narrative> <workHrs>0</workHrs> <billHrs>0</billHrs> <workQty>0</workQty> <billQty>0</billQty> <workAmt>0</workAmt> <billAmt>0</billAmt> </divideInfoList> </E3E.API.Proforma.Models.ProformaDivideCardRequest>"
                        },
                        "text/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaDivideCardRequest"
                            },
                            "example": "<E3E.API.Proforma.Models.ProformaDivideCardRequest> <proformaId>string</proformaId> <timeCardId>string</timeCardId> <costCardId>string</costCardId> <chargeCardId>string</chargeCardId> <isAdjustRate>true</isAdjustRate> <isPurge>true</isPurge> <purgeType>string</purgeType> <isSameClient>true</isSameClient> <narrative>string</narrative> <authTimekeeper>0</authTimekeeper> <reasonType>string</reasonType> <divideInfoList> <isNB>true</isNB> <isNoCharge>true</isNoCharge> <isInclude>true</isInclude> <transferProforma>0</transferProforma> <narrative>string</narrative> <workHrs>0</workHrs> <billHrs>0</billHrs> <workQty>0</workQty> <billQty>0</billQty> <workAmt>0</workAmt> <billAmt>0</billAmt> </divideInfoList> </E3E.API.Proforma.Models.ProformaDivideCardRequest>"
                        },
                        "application/*+xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaDivideCardRequest"
                            },
                            "example": "<E3E.API.Proforma.Models.ProformaDivideCardRequest> <proformaId>string</proformaId> <timeCardId>string</timeCardId> <costCardId>string</costCardId> <chargeCardId>string</chargeCardId> <isAdjustRate>true</isAdjustRate> <isPurge>true</isPurge> <purgeType>string</purgeType> <isSameClient>true</isSameClient> <narrative>string</narrative> <authTimekeeper>0</authTimekeeper> <reasonType>string</reasonType> <divideInfoList> <isNB>true</isNB> <isNoCharge>true</isNoCharge> <isInclude>true</isInclude> <transferProforma>0</transferProforma> <narrative>string</narrative> <workHrs>0</workHrs> <billHrs>0</billHrs> <workQty>0</workQty> <billQty>0</billQty> <workAmt>0</workAmt> <billAmt>0</billAmt> </divideInfoList> </E3E.API.Proforma.Models.ProformaDivideCardRequest>"
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaUpdateResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/integration/proforma/bill-preview": {
            "post": {
                "tags": [
                    "IntegrationProforma"
                ],
                "summary": "IntegrationProforma_BillPreview",
                "operationId": "IntegrationProforma_BillPreview",
                "parameters": [
                    {
                        "name": "proformaId",
                        "in": "query",
                        "description": "Format - uuid.",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaBillPreviewResponse"
                                },
                                "example": {
                                    "printJobId": "string",
                                    "proformaId": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaBillPreviewResponse"
                                },
                                "example": {
                                    "printJobId": "string",
                                    "proformaId": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaBillPreviewResponse"
                                },
                                "example": {
                                    "printJobId": "string",
                                    "proformaId": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaBillPreviewResponse"
                                },
                                "example": {
                                    "printJobId": "string",
                                    "proformaId": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaBillPreviewResponse"
                                },
                                "example": {
                                    "printJobId": "string",
                                    "proformaId": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaBillPreviewResponse"
                                },
                                "example": {
                                    "printJobId": "string",
                                    "proformaId": "string",
                                    "success": true,
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/integration/proforma/download-bill-preview": {
            "get": {
                "tags": [
                    "IntegrationProforma"
                ],
                "summary": "IntegrationProforma_DownloadBillPreview",
                "operationId": "IntegrationProforma_DownloadBillPreview",
                "parameters": [
                    {
                        "name": "printJobId",
                        "in": "query",
                        "description": "Format - uuid.",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                },
                                "example": "string"
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                },
                                "example": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "E3E.API.Data.DataError": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "nullable": true
                    },
                    "severity": {
                        "$ref": "#/components/schemas/E3E.API.Data.DataErrorSeverity"
                    }
                },
                "additionalProperties": false
            },
            "E3E.API.Data.DataErrorSeverity": {
                "enum": [
                    0,
                    1,
                    2
                ],
                "type": "integer",
                "format": "int32"
            },
            "E3E.API.Data.Models.ErrorInfo": {
                "type": "object",
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/E3E.API.Data.DataError"
                    },
                    "rowId": {
                        "type": "string",
                        "nullable": true
                    },
                    "index": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "attributeId": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "E3E.API.Proforma.Models.AttributeLite": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "nullable": true
                    },
                    "aliasValue": {
                        "type": "string",
                        "nullable": true
                    },
                    "error": {
                        "$ref": "#/components/schemas/E3E.API.Data.DataError"
                    }
                },
                "additionalProperties": false
            },
            "E3E.API.Proforma.Models.AttributeSchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "dataType": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "E3E.API.Proforma.Models.ChildSchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Proforma.Models.AttributeSchema"
                        },
                        "nullable": true
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Proforma.Models.ChildSchema"
                        },
                        "nullable": true
                    },
                    "relationshipId": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "E3E.API.Proforma.Models.DivideInfo": {
                "type": "object",
                "properties": {
                    "isNB": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "isNoCharge": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "isInclude": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "transferProforma": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "narrative": {
                        "type": "string",
                        "nullable": true
                    },
                    "workHrs": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "billHrs": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "workQty": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "billQty": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "workAmt": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "billAmt": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "E3E.API.Proforma.Models.IntegrationDataObject": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/E3E.API.Proforma.Models.AttributeLite"
                        },
                        "nullable": true
                    },
                    "childObjects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Proforma.Models.IntegrationDataObjectCollection"
                        },
                        "nullable": true
                    },
                    "error": {
                        "$ref": "#/components/schemas/E3E.API.Data.DataError"
                    }
                },
                "additionalProperties": false
            },
            "E3E.API.Proforma.Models.IntegrationDataObjectCollection": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "objectId": {
                        "type": "string",
                        "nullable": true
                    },
                    "error": {
                        "$ref": "#/components/schemas/E3E.API.Data.DataError"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Data.Models.ErrorInfo"
                        },
                        "nullable": true
                    },
                    "rows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Proforma.Models.IntegrationDataObject"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "E3E.API.Proforma.Models.IntegrationDataObjectSchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Proforma.Models.AttributeSchema"
                        },
                        "nullable": true
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Proforma.Models.ChildSchema"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "E3E.API.Proforma.Models.ProfAdjustModel": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "amount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "adjMethodList": {
                        "type": "string",
                        "nullable": true
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "timekeeper": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "percentage": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "matter": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "profAdjustType": {
                        "type": "string",
                        "nullable": true
                    },
                    "billAmount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "taxCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "isAdjustWithFilters": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "isIncludeOtherAdjustments": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "isIncludeFlatFeeCharges": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "ordinal": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "timeCardFilter": {
                        "type": "string",
                        "nullable": true
                    },
                    "costCardFilter": {
                        "type": "string",
                        "nullable": true
                    },
                    "chrgCardFilter": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "E3E.API.Proforma.Models.ProfDetailChrgModel": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "authTimekeeper": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "editAmt": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "internalComments": {
                        "type": "string",
                        "nullable": true
                    },
                    "isAnticipated": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "isNB": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "isNoCharge": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "office": {
                        "type": "string",
                        "nullable": true
                    },
                    "reasonType": {
                        "type": "string",
                        "nullable": true
                    },
                    "sortString": {
                        "type": "string",
                        "nullable": true
                    },
                    "spvTimekeeper": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "timePracticeArea": {
                        "type": "string",
                        "nullable": true
                    },
                    "toleranceAmt": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "tolerancePct": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "workActivity": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "workActivity2": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "workAmt": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "workCostEntryUnit": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "workCostEntryUnitType": {
                        "type": "string",
                        "nullable": true
                    },
                    "workLanguage": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "workNarrative": {
                        "type": "string",
                        "nullable": true
                    },
                    "workPhase": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "workPhase2": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "workStdAmt": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "workTask": {
                        "type": "string",
                        "nullable": true
                    },
                    "workTask2": {
                        "type": "string",
                        "nullable": true
                    },
                    "workTaxCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "workTaxJuris": {
                        "type": "string",
                        "nullable": true
                    },
                    "workTimekeeper": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "workTimeType": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "E3E.API.Proforma.Models.ProfDetailCostModel": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "authTimekeeper": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "editAmt": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "internalComments": {
                        "type": "string",
                        "nullable": true
                    },
                    "isAnticipated": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "isNB": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "isNoCharge": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "office": {
                        "type": "string",
                        "nullable": true
                    },
                    "reasonType": {
                        "type": "string",
                        "nullable": true
                    },
                    "sortString": {
                        "type": "string",
                        "nullable": true
                    },
                    "spvTimekeeper": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "timePracticeArea": {
                        "type": "string",
                        "nullable": true
                    },
                    "toleranceAmt": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "tolerancePct": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "workActivity": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "workActivity2": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "workAmt": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "workCostEntryUnit": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "workCostEntryUnitType": {
                        "type": "string",
                        "nullable": true
                    },
                    "workLanguage": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "workNarrative": {
                        "type": "string",
                        "nullable": true
                    },
                    "workPhase": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "workPhase2": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "workStdAmt": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "workTask": {
                        "type": "string",
                        "nullable": true
                    },
                    "workTask2": {
                        "type": "string",
                        "nullable": true
                    },
                    "workTaxCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "workTaxJuris": {
                        "type": "string",
                        "nullable": true
                    },
                    "workTimekeeper": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "workTimeType": {
                        "type": "string",
                        "nullable": true
                    },
                    "refAmt": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "refCurrency": {
                        "type": "string",
                        "nullable": true
                    },
                    "refRate": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "stdAmt": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "stdCurrency": {
                        "type": "string",
                        "nullable": true
                    },
                    "stdRate": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "E3E.API.Proforma.Models.ProfDetailTimeModel": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "authTimekeeper": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "editAmt": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "internalComments": {
                        "type": "string",
                        "nullable": true
                    },
                    "isAnticipated": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "isNB": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "isNoCharge": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "office": {
                        "type": "string",
                        "nullable": true
                    },
                    "reasonType": {
                        "type": "string",
                        "nullable": true
                    },
                    "sortString": {
                        "type": "string",
                        "nullable": true
                    },
                    "spvTimekeeper": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "timePracticeArea": {
                        "type": "string",
                        "nullable": true
                    },
                    "toleranceAmt": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "tolerancePct": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "workActivity": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "workActivity2": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "workAmt": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "workCostEntryUnit": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "workCostEntryUnitType": {
                        "type": "string",
                        "nullable": true
                    },
                    "workLanguage": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "workNarrative": {
                        "type": "string",
                        "nullable": true
                    },
                    "workPhase": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "workPhase2": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "workStdAmt": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "workTask": {
                        "type": "string",
                        "nullable": true
                    },
                    "workTask2": {
                        "type": "string",
                        "nullable": true
                    },
                    "workTaxCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "workTaxJuris": {
                        "type": "string",
                        "nullable": true
                    },
                    "workTimekeeper": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "workTimeType": {
                        "type": "string",
                        "nullable": true
                    },
                    "refCurrency": {
                        "type": "string",
                        "nullable": true
                    },
                    "refRate": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "stdCurrency": {
                        "type": "string",
                        "nullable": true
                    },
                    "stdRate": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "E3E.API.Proforma.Models.ProfPresParagraphModel": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "presDate": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "currency": {
                        "type": "string",
                        "nullable": true
                    },
                    "presAmount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "presHours": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "narrative": {
                        "type": "string",
                        "nullable": true
                    },
                    "sortString": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "E3E.API.Proforma.Models.ProformaBillPreviewResponse": {
                "type": "object",
                "properties": {
                    "printJobId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "proformaId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "E3E.API.Proforma.Models.ProformaCardTransferRequest": {
                "required": [
                    "proformaId",
                    "targetMatter"
                ],
                "type": "object",
                "properties": {
                    "timecards": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "nullable": true
                    },
                    "costcards": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "nullable": true
                    },
                    "chargecards": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "nullable": true
                    },
                    "proformaId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "reasonType": {
                        "type": "string",
                        "nullable": true
                    },
                    "authTimekeeper": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "targetMatter": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "targetProforma": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "isRecalculateRate": {
                        "type": "boolean",
                        "default": false
                    }
                },
                "additionalProperties": false
            },
            "E3E.API.Proforma.Models.ProformaCombineCardsRequest": {
                "required": [
                    "proformaId"
                ],
                "type": "object",
                "properties": {
                    "timecards": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "nullable": true
                    },
                    "costcards": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "nullable": true
                    },
                    "chargecards": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "nullable": true
                    },
                    "proformaId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "presDate": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "timekeeper": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "matter": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "timeType": {
                        "type": "string",
                        "nullable": true
                    },
                    "costType": {
                        "type": "string",
                        "nullable": true
                    },
                    "chrgType": {
                        "type": "string",
                        "nullable": true
                    },
                    "taxCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "taxJurisdiction": {
                        "type": "string",
                        "nullable": true
                    },
                    "presQty": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "presRate": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "combineType": {
                        "type": "string",
                        "nullable": true
                    },
                    "narrative": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "E3E.API.Proforma.Models.ProformaDivideCardRequest": {
                "required": [
                    "proformaId"
                ],
                "type": "object",
                "properties": {
                    "proformaId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "timeCardId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "costCardId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "chargeCardId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "isAdjustRate": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "isPurge": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "purgeType": {
                        "type": "string",
                        "nullable": true
                    },
                    "isSameClient": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "narrative": {
                        "type": "string",
                        "nullable": true
                    },
                    "authTimekeeper": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "reasonType": {
                        "type": "string",
                        "nullable": true
                    },
                    "divideInfoList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Proforma.Models.DivideInfo"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "E3E.API.Proforma.Models.ProformaExcludeCardRequest": {
                "required": [
                    "proformaId"
                ],
                "type": "object",
                "properties": {
                    "timecards": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "nullable": true
                    },
                    "costcards": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "nullable": true
                    },
                    "chargecards": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "nullable": true
                    },
                    "proformaId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "reasonType": {
                        "type": "string",
                        "nullable": true
                    },
                    "authTimekeeper": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "E3E.API.Proforma.Models.ProformaGenerationRequest": {
                "required": [
                    "profGenRunId"
                ],
                "type": "object",
                "properties": {
                    "profGenRunId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false
            },
            "E3E.API.Proforma.Models.ProformaGetResponse": {
                "type": "object",
                "properties": {
                    "proforma": {
                        "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProformaObject"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "E3E.API.Proforma.Models.ProformaGetSchemaResponse": {
                "type": "object",
                "properties": {
                    "schema": {
                        "$ref": "#/components/schemas/E3E.API.Proforma.Models.IntegrationDataObjectSchema"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "E3E.API.Proforma.Models.ProformaIncludeCardsRequest": {
                "required": [
                    "proformaId"
                ],
                "type": "object",
                "properties": {
                    "proformaId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "timecards": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nullable": true
                    },
                    "costcards": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nullable": true
                    },
                    "chargecards": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "E3E.API.Proforma.Models.ProformaLockRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "isLock": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "E3E.API.Proforma.Models.ProformaLockResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    },
                    "isLocked": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "E3E.API.Proforma.Models.ProformaObject": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/E3E.API.Proforma.Models.AttributeLite"
                        },
                        "nullable": true
                    },
                    "childObjects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Proforma.Models.IntegrationDataObjectCollection"
                        },
                        "nullable": true
                    },
                    "error": {
                        "$ref": "#/components/schemas/E3E.API.Data.DataError"
                    }
                },
                "additionalProperties": false
            },
            "E3E.API.Proforma.Models.ProformaUpdateRequest": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "authTimekeeper": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "billingContact": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "billTemplate": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "billTkpr": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "billingOffice": {
                        "type": "string",
                        "nullable": true
                    },
                    "chargeStart": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "chargeEnd": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "chrgReasonType": {
                        "type": "string",
                        "nullable": true
                    },
                    "collTkpr": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "contactInfo": {
                        "type": "string",
                        "nullable": true
                    },
                    "costStart": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "costEnd": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "costReasonType": {
                        "type": "string",
                        "nullable": true
                    },
                    "coverLetterNarrative": {
                        "type": "string",
                        "nullable": true
                    },
                    "dueDays": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "fromTaxArea": {
                        "type": "string",
                        "nullable": true
                    },
                    "internalComments": {
                        "type": "string",
                        "nullable": true
                    },
                    "invDate": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "invNarrative": {
                        "type": "string",
                        "nullable": true
                    },
                    "language": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "mattOverDescription": {
                        "type": "string",
                        "nullable": true
                    },
                    "origTaxInvNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "prevInvMaster": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "profDate": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "profStatus": {
                        "type": "string",
                        "nullable": true
                    },
                    "profStatusCap": {
                        "type": "string",
                        "nullable": true
                    },
                    "reasonType": {
                        "type": "string",
                        "nullable": true
                    },
                    "site": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "spvTkpr": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "taxDate": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "taxReportID1": {
                        "type": "string",
                        "nullable": true
                    },
                    "taxReportID2": {
                        "type": "string",
                        "nullable": true
                    },
                    "toTaxArea": {
                        "type": "string",
                        "nullable": true
                    },
                    "timeStart": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "timeEnd": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "vatRegistration": {
                        "type": "string",
                        "nullable": true
                    },
                    "profDetailTime": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProfDetailTimeModel"
                        },
                        "nullable": true
                    },
                    "profDetailCost": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProfDetailCostModel"
                        },
                        "nullable": true
                    },
                    "profDetailChrg": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProfDetailChrgModel"
                        },
                        "nullable": true
                    },
                    "profAdjust": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProfAdjustModel"
                        },
                        "nullable": true
                    },
                    "profPresParagraph": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Proforma.Models.ProfPresParagraphModel"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "E3E.API.Proforma.Models.ProformaUpdateResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "E3E.API.Proforma.Models.StartProformaGenerationResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Microsoft.AspNetCore.Mvc.ProblemDetails": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "detail": {
                        "type": "string",
                        "nullable": true
                    },
                    "instance": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": {}
            }
        }
    }
}