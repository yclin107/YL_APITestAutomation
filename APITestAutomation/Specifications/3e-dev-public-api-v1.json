{
    "openapi": "3.0.1",
    "info": {
        "title": "DEV - 3E API",
        "description": "The 3E API provides low level access to the 3E Financial System application logic layer for the decoupled 3E User Interface...<a href=\"/doc/3e-rest-api/authentication\" target=\"_blank\">Read More</a>",
        "version": "v1"
    },
    "servers": [
        {
            "url": "https://api.us.nonprod.elite.com/dev/3e/v1"
        },
        {
            "url": "https://api.uk.nonprod.elite.com/dev/3e/v1"
        },
        {
            "url": "https://api.nonprod.elite.com/dev/3e/v1"
        }
    ],
    "paths": {
        "/attachment/v2": {
            "get": {
                "tags": [
                    "Attachment"
                ],
                "summary": "Gets Attachments and returns a AttachmentGetResponse.",
                "description": "Gets Attachments and returns a AttachmentGetResponse.",
                "operationId": "Attachment_GetAttachments",
                "parameters": [
                    {
                        "name": "ParentItemIds",
                        "in": "query",
                        "description": "Gets or sets Ids of parent data objects.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Archetype",
                        "in": "query",
                        "description": "Gets or sets an archetype. Required for IC.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Attachment.Models.AttachmentGetResponse"
                                },
                                "example": {
                                    "attachments": {},
                                    "success": true,
                                    "message": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Attachment.Models.AttachmentGetResponse"
                                },
                                "example": {
                                    "attachments": {},
                                    "success": true,
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Attachment"
                ],
                "summary": "Delete the attachments",
                "description": "Delete the attachments",
                "operationId": "Attachment_DeleteAttachments",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Attachment.Models.AttachmentDeleteRequest"
                            },
                            "example": {
                                "attachmentIds": [
                                    "string"
                                ]
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Attachment.Models.AttachmentDeleteRequest"
                            },
                            "example": {
                                "attachmentIds": [
                                    "string"
                                ]
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Attachment.Models.AttachmentDeleteRequest"
                            },
                            "example": {
                                "attachmentIds": [
                                    "string"
                                ]
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Attachment.Models.AttachmentDeleteRequest"
                            },
                            "example": "<E3E.API.Attachment.Models.AttachmentDeleteRequest> <attachmentIds>string</attachmentIds> </E3E.API.Attachment.Models.AttachmentDeleteRequest>"
                        },
                        "text/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Attachment.Models.AttachmentDeleteRequest"
                            },
                            "example": "<E3E.API.Attachment.Models.AttachmentDeleteRequest> <attachmentIds>string</attachmentIds> </E3E.API.Attachment.Models.AttachmentDeleteRequest>"
                        },
                        "application/*+xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Attachment.Models.AttachmentDeleteRequest"
                            },
                            "example": "<E3E.API.Attachment.Models.AttachmentDeleteRequest> <attachmentIds>string</attachmentIds> </E3E.API.Attachment.Models.AttachmentDeleteRequest>"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Attachment.Models.AttachmentDeleteResponse"
                                },
                                "example": {
                                    "success": true,
                                    "message": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Attachment.Models.AttachmentDeleteResponse"
                                },
                                "example": {
                                    "success": true,
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "patch": {
                "tags": [
                    "Attachment"
                ],
                "summary": "Updates multiple attachments.",
                "description": "Updates multiple attachments.",
                "operationId": "Attachment_PatchAttachment",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Attachment.Models.PatchAttachmentsRequest"
                            },
                            "example": {
                                "items": [
                                    {
                                        "id": "string",
                                        "description": "string",
                                        "reportPrint": true,
                                        "fileName": "string"
                                    }
                                ]
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Attachment.Models.PatchAttachmentsRequest"
                            },
                            "example": {
                                "items": [
                                    {
                                        "id": "string",
                                        "description": "string",
                                        "reportPrint": true,
                                        "fileName": "string"
                                    }
                                ]
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Attachment.Models.PatchAttachmentsRequest"
                            },
                            "example": {
                                "items": [
                                    {
                                        "id": "string",
                                        "description": "string",
                                        "reportPrint": true,
                                        "fileName": "string"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/attachment/file": {
            "get": {
                "tags": [
                    "Attachment"
                ],
                "summary": "Downloads a File attachment.",
                "description": "Downloads a File attachment.",
                "operationId": "Attachment_DownloadFileAttachment",
                "parameters": [
                    {
                        "name": "AttachmentId",
                        "in": "query",
                        "description": "Gets or sets the attachment Id.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Attachment.Models.AttachmentDownloadRequest"
                                },
                                "example": {
                                    "attachmentId": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Attachment.Models.AttachmentDownloadRequest"
                                },
                                "example": {
                                    "attachmentId": "string"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Attachment"
                ],
                "summary": "Uploads File Attachment.",
                "description": "Uploads File Attachment.",
                "operationId": "Attachment_UploadFileAttachment",
                "parameters": [
                    {
                        "name": "ParentItemId",
                        "in": "query",
                        "description": "Gets or sets a parent item id.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "Archetype",
                        "in": "query",
                        "description": "Gets or sets an archetype.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SubFolder",
                        "in": "query",
                        "description": "Gets or sets a subfolder.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Description",
                        "in": "query",
                        "description": "Gets or sets a description.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ReportPrint",
                        "in": "query",
                        "description": "Gets or sets a value indicating whether this attachment should be printed in reports.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "Process",
                        "in": "query",
                        "description": "Gets or sets a Process.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Attachment.Models.AttachmentCreateResponse"
                                },
                                "example": {
                                    "attachment": {
                                        "attachmentID": "string",
                                        "attachmentType": "string",
                                        "dmsDocumentID": "string",
                                        "dmsDraft": "string",
                                        "fileName": "string",
                                        "description": "string",
                                        "syncID": "string",
                                        "reportPrint": true,
                                        "extendedAttributes": "string",
                                        "subFolder": "string"
                                    },
                                    "success": true,
                                    "message": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Attachment.Models.AttachmentCreateResponse"
                                },
                                "example": {
                                    "attachment": {
                                        "attachmentID": "string",
                                        "attachmentType": "string",
                                        "dmsDocumentID": "string",
                                        "dmsDraft": "string",
                                        "fileName": "string",
                                        "description": "string",
                                        "syncID": "string",
                                        "reportPrint": true,
                                        "extendedAttributes": "string",
                                        "subFolder": "string"
                                    },
                                    "success": true,
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/attachment/dms": {
            "get": {
                "tags": [
                    "Attachment"
                ],
                "summary": "Downloads a DMS attachment.",
                "description": "Downloads a DMS attachment.",
                "operationId": "Attachment_DownloadDMSAttachment",
                "parameters": [
                    {
                        "name": "AttachmentId",
                        "in": "query",
                        "description": "Gets or sets the attachment Id.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Attachment.Models.AttachmentDownloadRequest"
                                },
                                "example": {
                                    "attachmentId": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Attachment.Models.AttachmentDownloadRequest"
                                },
                                "example": {
                                    "attachmentId": "string"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Attachment"
                ],
                "summary": "Uploads DMS Attachment.",
                "description": "Uploads DMS Attachment.",
                "operationId": "Attachment_UploadDMSAttachment",
                "parameters": [
                    {
                        "name": "Library",
                        "in": "query",
                        "description": "Gets or sets DMS library.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "DocumentClass",
                        "in": "query",
                        "description": "Gets or sets DMS document class.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "DocumentType",
                        "in": "query",
                        "description": "Gets or sets DMS document type.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "DMSFolder",
                        "in": "query",
                        "description": "Gets or sets a folder.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ParentItemId",
                        "in": "query",
                        "description": "Gets or sets a parent item id.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "Archetype",
                        "in": "query",
                        "description": "Gets or sets an archetype.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SyncMapID",
                        "in": "query",
                        "description": "Gets or sets DMS SyncMapID.",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "SubFolder",
                        "in": "query",
                        "description": "Gets or sets a subfolder.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Description",
                        "in": "query",
                        "description": "Gets or sets a description.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ReportPrint",
                        "in": "query",
                        "description": "Gets or sets a value indicating whether this attachment should be printed in reports.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "Process",
                        "in": "query",
                        "description": "Gets or sets a Process.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Attachment.Models.AttachmentCreateResponse"
                                },
                                "example": {
                                    "attachment": {
                                        "attachmentID": "string",
                                        "attachmentType": "string",
                                        "dmsDocumentID": "string",
                                        "dmsDraft": "string",
                                        "fileName": "string",
                                        "description": "string",
                                        "syncID": "string",
                                        "reportPrint": true,
                                        "extendedAttributes": "string",
                                        "subFolder": "string"
                                    },
                                    "success": true,
                                    "message": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Attachment.Models.AttachmentCreateResponse"
                                },
                                "example": {
                                    "attachment": {
                                        "attachmentID": "string",
                                        "attachmentType": "string",
                                        "dmsDocumentID": "string",
                                        "dmsDraft": "string",
                                        "fileName": "string",
                                        "description": "string",
                                        "syncID": "string",
                                        "reportPrint": true,
                                        "extendedAttributes": "string",
                                        "subFolder": "string"
                                    },
                                    "success": true,
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/attachment/dms/parameters": {
            "get": {
                "tags": [
                    "Attachment"
                ],
                "summary": "Collects DMS parameters and returns DMSParametersGetResponse.",
                "description": "Collects DMS parameters and returns DMSParametersGetResponse.",
                "operationId": "Attachment_GetDMSParameters",
                "parameters": [
                    {
                        "name": "Archetype",
                        "in": "query",
                        "description": "Gets or sets the data object archetype.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Attachment.Models.DMSParametersGetResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Attachment.Models.DMSParametersGetResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/client": {
            "get": {
                "tags": [
                    "Client"
                ],
                "summary": "Gets Clients and returns a ClientGetResponse.",
                "description": "Gets Clients and returns a ClientGetResponse.",
                "operationId": "Client_GetClients",
                "parameters": [
                    {
                        "name": "ClientId",
                        "in": "query",
                        "description": "Gets or sets the ClientIds.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "ClientIndex",
                        "in": "query",
                        "description": "Gets or sets the ClientIndex.",
                        "schema": {
                            "maximum": 2147483647,
                            "minimum": 0,
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Number",
                        "in": "query",
                        "description": "Gets or sets the Number (Client Alias).",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "AdvancedFilter.ChildObjectsToInclude",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.AttributesToInclude",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.FilterXOQL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Predicates",
                        "in": "query",
                        "description": "Gets or Sets predicates.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicate"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Operator",
                        "in": "query",
                        "description": "Gets or Sets the logical operator between the group of E3E.API.Query.SJQL.SJPredicateGroup.Predicates and the E3E.API.Query.SJQL.SJPredicateGroup.Groups.",
                        "schema": {
                            "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJLogicalOperator"
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Groups",
                        "in": "query",
                        "description": "Gets or Sets group of predicates based on a logical operator.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicateGroup"
                            }
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Client.Models.ClientGetResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Client.Models.ClientGetResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Client"
                ],
                "summary": "Creates a new Client.",
                "description": "Creates a new Client.",
                "operationId": "Client_CreateClient",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Client.Models.ClientCreateRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Client.Models.ClientCreateRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Client.Models.ClientCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Client.Models.ClientCreateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Client.Models.ClientCreateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "patch": {
                "tags": [
                    "Client"
                ],
                "summary": "Updates a Client.",
                "description": "Updates a Client.",
                "operationId": "Client_UpdateClient",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Client.Models.ClientUpdateRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Client.Models.ClientUpdateRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Client.Models.ClientUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Client.Models.ClientUpdateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Client.Models.ClientUpdateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound - The Client to be updated does not exist."
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/client/schema": {
            "get": {
                "tags": [
                    "Client"
                ],
                "summary": "Gets the schema for Client.",
                "description": "Gets the schema for Client.",
                "operationId": "Client_GetClientSchema",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Client.Models.ClientGetSchemaResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Client.Models.ClientGetSchemaResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/client/template": {
            "get": {
                "tags": [
                    "Client"
                ],
                "summary": "Gets a new Client with default values.",
                "description": "This method does not launch a process or add any data in 3E.\r\nIt is intended to be used with CreateClient.\r\ne.g. call this method, then set whichever attributes need to be changed and then call CreateClient with the modified data.",
                "operationId": "Client_GetNewClient",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Client.Models.ClientTemplateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Client.Models.ClientTemplateResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/client/modelfrom": {
            "get": {
                "tags": [
                    "Client"
                ],
                "summary": "Gets cloned Clients and returns a ClientGetResponse.",
                "description": "Gets cloned Clients and returns a ClientGetResponse.",
                "operationId": "Client_ModelFromClients",
                "parameters": [
                    {
                        "name": "ItemId",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Client.Models.ClientGetResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Client.Models.ClientGetResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/client/validate": {
            "post": {
                "tags": [
                    "Client"
                ],
                "summary": "Validates one or more existing Clients.",
                "description": "Validates one or more existing Clients.",
                "operationId": "Client_ValidateClients",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The Client.ClientIndex values of the Clients to be validated.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Client.Models.ClientValidateRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Client.Models.ClientValidateRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Client.Models.ClientValidateRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Client.Models.ClientValidateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Client.Models.ClientValidateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound - The Client to be validated does not exist."
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/cost/posted": {
            "get": {
                "tags": [
                    "Cost"
                ],
                "summary": "Gets CostCards and returns a CostCardGetResponse.",
                "description": "Gets CostCards and returns a CostCardGetResponse.",
                "operationId": "Cost_GetPostedCostCards",
                "parameters": [
                    {
                        "name": "StartDate",
                        "in": "query",
                        "description": "Gets or sets the StartDate (WorkDate).",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "EndDate",
                        "in": "query",
                        "description": "Gets or sets the EndDate (WorkDate).",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "CostcardID",
                        "in": "query",
                        "description": "Gets or sets the CostcardIDs.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "CostIndex",
                        "in": "query",
                        "description": "Gets or sets the CostIndex.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "CostType",
                        "in": "query",
                        "description": "Gets or sets the CostType.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "TimekeeperIndex",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "TimekeeperNumber",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "TimekeeperID",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "MatterIndex",
                        "in": "query",
                        "description": "Gets or sets MatterIndex.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "MatterNumber",
                        "in": "query",
                        "description": "Gets or sets MatterNumber.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "AdvancedFilter.AttributesToInclude",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.FilterXOQL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Predicates",
                        "in": "query",
                        "description": "Gets or Sets predicates.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicate"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Operator",
                        "in": "query",
                        "description": "Gets or Sets the logical operator between the group of E3E.API.Query.SJQL.SJPredicateGroup.Predicates and the E3E.API.Query.SJQL.SJPredicateGroup.Groups.",
                        "schema": {
                            "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJLogicalOperator"
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Groups",
                        "in": "query",
                        "description": "Gets or Sets group of predicates based on a logical operator.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicateGroup"
                            }
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardGetResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardGetResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Cost"
                ],
                "summary": "Creates a new CostCard.",
                "description": "Creates a new CostCard.",
                "operationId": "Cost_CreatePostedCostCard",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardCreateRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardCreateRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardCreateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardCreateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "patch": {
                "tags": [
                    "Cost"
                ],
                "summary": "Updates a CostCard.",
                "description": "Updates a CostCard.",
                "operationId": "Cost_UpdatePostedCostCard",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardUpdateRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardUpdateRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardUpdateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardUpdateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound - The CostCard to be updated does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/cost/pending": {
            "get": {
                "tags": [
                    "Cost"
                ],
                "summary": "Gets PendingCostCards and returns a CostCardGetResponse.",
                "description": "Gets PendingCostCards and returns a CostCardGetResponse.",
                "operationId": "Cost_GetPendingCostCards",
                "parameters": [
                    {
                        "name": "StartDate",
                        "in": "query",
                        "description": "Gets or sets the StartDate (WorkDate).",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "EndDate",
                        "in": "query",
                        "description": "Gets or sets the EndDate (WorkDate).",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "CostcardID",
                        "in": "query",
                        "description": "Gets or sets the CostcardIDs.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "CostPeindIndex",
                        "in": "query",
                        "description": "Gets or sets the CostPeindIndex.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "CostType",
                        "in": "query",
                        "description": "Gets or sets the CostType.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "TimekeeperIndex",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "TimekeeperNumber",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "TimekeeperID",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "MatterIndex",
                        "in": "query",
                        "description": "Gets or sets MatterIndex.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "MatterNumber",
                        "in": "query",
                        "description": "Gets or sets MatterNumber.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "AdvancedFilter.AttributesToInclude",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.FilterXOQL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Predicates",
                        "in": "query",
                        "description": "Gets or Sets predicates.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicate"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Operator",
                        "in": "query",
                        "description": "Gets or Sets the logical operator between the group of E3E.API.Query.SJQL.SJPredicateGroup.Predicates and the E3E.API.Query.SJQL.SJPredicateGroup.Groups.",
                        "schema": {
                            "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJLogicalOperator"
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Groups",
                        "in": "query",
                        "description": "Gets or Sets group of predicates based on a logical operator.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicateGroup"
                            }
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardGetResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardGetResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Cost"
                ],
                "summary": "Creates a new PendingCostCard.",
                "description": "Creates a new PendingCostCard.",
                "operationId": "Cost_CreatePendingCostCard",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardCreateRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardCreateRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardCreateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardCreateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "patch": {
                "tags": [
                    "Cost"
                ],
                "summary": "Updates a PendingCostCard.",
                "description": "Updates a PendingCostCard.",
                "operationId": "Cost_UpdatePendingCostCard",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardUpdateRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardUpdateRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardUpdateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardUpdateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound - The CostCard to be updated does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/cost/posted/validate": {
            "post": {
                "tags": [
                    "Cost"
                ],
                "summary": "Validates one or more existing CostCards.",
                "description": "Validates one or more existing CostCards.",
                "operationId": "Cost_ValidatePostedCostCards",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The CostCard.CostIndex values of the CostCards to be validated.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardValidateRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardValidateRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardValidateRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardValidateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardValidateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound - The CostCard to be validated does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/cost/pending/validate": {
            "post": {
                "tags": [
                    "Cost"
                ],
                "summary": "Validates one or more existing PendingCostCards.",
                "description": "Validates one or more existing PendingCostCards.",
                "operationId": "Cost_ValidatePendingCostCards",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The PendingCostCard.CostIndex values of the CostCards to be validated.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardValidateRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardValidateRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardValidateRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardValidateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardValidateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound - The CostCard to be validated does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/cost/posted/schema": {
            "get": {
                "tags": [
                    "Cost"
                ],
                "summary": "Gets the schema for CostCard.",
                "description": "Gets the schema for CostCard.",
                "operationId": "Cost_GetPostedCostCardSchema",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardGetSchemaResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardGetSchemaResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/cost/pending/schema": {
            "get": {
                "tags": [
                    "Cost"
                ],
                "summary": "Gets the schema for PendingCostCard.",
                "description": "Gets the schema for PendingCostCard.",
                "operationId": "Cost_GetPendingCostCardSchema",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardGetSchemaResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardGetSchemaResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/cost/posted/template": {
            "get": {
                "tags": [
                    "Cost"
                ],
                "summary": "Gets a new CostCard with default values.",
                "description": "This method does not launch a process or add any data in 3E.\r\nIt is intended to be used with CreateCostCard.\r\ne.g. call this method, then set whichever attributes need to be changed and then call CreateCostCard with the modified data.",
                "operationId": "Cost_GetNewPostedCostCard",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardTemplateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardTemplateResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/cost/pending/template": {
            "get": {
                "tags": [
                    "Cost"
                ],
                "summary": "Gets a new PendingCostCard with default values.",
                "description": "This method does not launch a process or add any data in 3E.\r\nIt is intended to be used with CreateCostCard.\r\ne.g. call this method, then set whichever attributes need to be changed and then call CreateCostCard with the modified data.",
                "operationId": "Cost_GetNewPendingCostCard",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardTemplateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardTemplateResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/cost/posted/modelfrom": {
            "get": {
                "tags": [
                    "Cost"
                ],
                "summary": "Gets cloned CostCards and returns a CostCardGetResponse.",
                "description": "Gets cloned CostCards and returns a CostCardGetResponse.",
                "operationId": "Cost_ModelFromPostedCostCards",
                "parameters": [
                    {
                        "name": "ItemId",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardGetResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardGetResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/cost/pending/modelfrom": {
            "get": {
                "tags": [
                    "Cost"
                ],
                "summary": "Gets cloned PendingCostCards and returns a CostCardGetResponse.",
                "description": "Gets cloned PendingCostCards and returns a CostCardGetResponse.",
                "operationId": "Cost_ModelFromPendingCostCards",
                "parameters": [
                    {
                        "name": "ItemId",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardGetResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardGetResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/cost/pending/post": {
            "post": {
                "tags": [
                    "Cost"
                ],
                "summary": "Posts a PendingCostCard.",
                "description": "Posts a PendingCostCard.",
                "operationId": "Cost_PostPendingCostCard",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardPostRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardPostRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardPostRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardPostResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCardPostResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/entity/person": {
            "get": {
                "tags": [
                    "Entity"
                ],
                "summary": "Gets EntityPersons and returns a EntityGetResponse.",
                "description": "Gets EntityPersons and returns a EntityGetResponse.",
                "operationId": "Entity_GetPersons",
                "parameters": [
                    {
                        "name": "EntityId",
                        "in": "query",
                        "description": "Gets or sets the EntityIds.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "EntityIndex",
                        "in": "query",
                        "description": "Gets or sets the EntityIndex.",
                        "schema": {
                            "maximum": 2147483647,
                            "minimum": 0,
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "DisplayName",
                        "in": "query",
                        "description": "Gets or sets the DisplayName (Entity Alias).",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "AdvancedFilter.ChildObjectsToInclude",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.AttributesToInclude",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.FilterXOQL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Predicates",
                        "in": "query",
                        "description": "Gets or Sets predicates.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicate"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Operator",
                        "in": "query",
                        "description": "Gets or Sets the logical operator between the group of E3E.API.Query.SJQL.SJPredicateGroup.Predicates and the E3E.API.Query.SJQL.SJPredicateGroup.Groups.",
                        "schema": {
                            "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJLogicalOperator"
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Groups",
                        "in": "query",
                        "description": "Gets or Sets group of predicates based on a logical operator.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicateGroup"
                            }
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityGetRequest"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityGetRequest"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Entity"
                ],
                "summary": "Creates a new Entity Person.",
                "description": "Creates a new Entity Person.",
                "operationId": "Entity_CreatePerson",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityCreateRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityCreateRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityCreateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityCreateResponse"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/entity/organization": {
            "get": {
                "tags": [
                    "Entity"
                ],
                "summary": "Gets EntityOrganizations and returns a EntityGetResponse.",
                "description": "Gets EntityOrganizations and returns a EntityGetResponse.",
                "operationId": "Entity_GetOrganizations",
                "parameters": [
                    {
                        "name": "EntityId",
                        "in": "query",
                        "description": "Gets or sets the EntityIds.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "EntityIndex",
                        "in": "query",
                        "description": "Gets or sets the EntityIndex.",
                        "schema": {
                            "maximum": 2147483647,
                            "minimum": 0,
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "DisplayName",
                        "in": "query",
                        "description": "Gets or sets the DisplayName (Entity Alias).",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "AdvancedFilter.ChildObjectsToInclude",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.AttributesToInclude",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.FilterXOQL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Predicates",
                        "in": "query",
                        "description": "Gets or Sets predicates.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicate"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Operator",
                        "in": "query",
                        "description": "Gets or Sets the logical operator between the group of E3E.API.Query.SJQL.SJPredicateGroup.Predicates and the E3E.API.Query.SJQL.SJPredicateGroup.Groups.",
                        "schema": {
                            "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJLogicalOperator"
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Groups",
                        "in": "query",
                        "description": "Gets or Sets group of predicates based on a logical operator.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicateGroup"
                            }
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityGetRequest"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityGetRequest"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Entity"
                ],
                "summary": "Creates a new Entity Organization.",
                "description": "Creates a new Entity Organization.",
                "operationId": "Entity_CreateOrganization",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityCreateRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityCreateRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityCreateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityCreateResponse"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/entity/all": {
            "get": {
                "tags": [
                    "Entity"
                ],
                "summary": "Gets Entities and returns a EntityGetResponse.",
                "description": "Gets Entities and returns a EntityGetResponse.",
                "operationId": "Entity_GetAllEntities",
                "parameters": [
                    {
                        "name": "EntityId",
                        "in": "query",
                        "description": "Gets or sets the EntityIds.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "EntityIndex",
                        "in": "query",
                        "description": "Gets or sets the EntityIndex.",
                        "schema": {
                            "maximum": 2147483647,
                            "minimum": 0,
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "DisplayName",
                        "in": "query",
                        "description": "Gets or sets the DisplayName (Entity Alias).",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "AdvancedFilter.ChildObjectsToInclude",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.AttributesToInclude",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.FilterXOQL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Predicates",
                        "in": "query",
                        "description": "Gets or Sets predicates.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicate"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Operator",
                        "in": "query",
                        "description": "Gets or Sets the logical operator between the group of E3E.API.Query.SJQL.SJPredicateGroup.Predicates and the E3E.API.Query.SJQL.SJPredicateGroup.Groups.",
                        "schema": {
                            "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJLogicalOperator"
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Groups",
                        "in": "query",
                        "description": "Gets or Sets group of predicates based on a logical operator.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicateGroup"
                            }
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityGetRequest"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityGetRequest"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/entity/person/schema": {
            "get": {
                "tags": [
                    "Entity"
                ],
                "summary": "Gets the schema for EntityPerson.",
                "description": "Gets the schema for EntityPerson.",
                "operationId": "Entity_GetPersonSchema",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityGetSchemaResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityGetSchemaResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/entity/organization/schema": {
            "get": {
                "tags": [
                    "Entity"
                ],
                "summary": "Gets the schema for Matter.",
                "description": "Gets the schema for Matter.",
                "operationId": "Entity_GetOrganizationSchema",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityGetSchemaResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityGetSchemaResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/entity/person/template": {
            "get": {
                "tags": [
                    "Entity"
                ],
                "summary": "Gets a new EntityPerson with default values.",
                "description": "This method does not launch a process or add any data in 3E.\r\nIt is intended to be used with CreateMatter.\r\ne.g. call this method, then set whichever attributes need to be changed and then call CreateEntityPerson with the modified data.",
                "operationId": "Entity_GetNewPerson",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityTemplateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityTemplateResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/entity/organization/template": {
            "get": {
                "tags": [
                    "Entity"
                ],
                "summary": "Gets a new EntityOrg with default values.",
                "description": "This method does not launch a process or add any data in 3E.\r\nIt is intended to be used with CreateMatter.\r\ne.g. call this method, then set whichever attributes need to be changed and then call CreateEntityOrg with the modified data.",
                "operationId": "Entity_GetNewOrganization",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityTemplateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityTemplateResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/entity/clone": {
            "post": {
                "tags": [
                    "Entity"
                ],
                "summary": "Clones one or more Entities.",
                "description": "Clones one or more Entities.",
                "operationId": "Entity_CloneEntity",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityCloneRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityCloneRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityCloneRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityCloneResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityCloneResponse"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/entity": {
            "patch": {
                "tags": [
                    "Entity"
                ],
                "summary": "Updates an Entity.",
                "description": "Updates an Entity.",
                "operationId": "Entity_UpdateEntity",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityUpdateRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityUpdateRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityUpdateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityUpdateResponse"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Entity"
                ],
                "summary": "Deletes one or more existing Entity.",
                "description": "Deletes one or more existing Entity.",
                "operationId": "Entity_DeleteEntity",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityDeleteRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityDeleteRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityDeleteRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityDeleteResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityDeleteResponse"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/entity/modelfrom": {
            "get": {
                "tags": [
                    "Entity"
                ],
                "summary": "Gets cloned Entities and returns a EntityGetResponse.",
                "description": "Gets cloned Entities and returns a EntityGetResponse.",
                "operationId": "Entity_ModelFromEntities",
                "parameters": [
                    {
                        "name": "ItemId",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityGetResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Entity.Models.EntityGetResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/matter": {
            "get": {
                "tags": [
                    "Matter"
                ],
                "summary": "Gets Matters and returns a MatterGetResponse.",
                "description": "Gets Matters and returns a MatterGetResponse.",
                "operationId": "Matter_GetMatters",
                "parameters": [
                    {
                        "name": "MatterId",
                        "in": "query",
                        "description": "Gets or sets the MatterIds.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "MattIndex",
                        "in": "query",
                        "description": "Gets or sets the MattIndex.",
                        "schema": {
                            "maximum": 2147483647,
                            "minimum": 0,
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Number",
                        "in": "query",
                        "description": "Gets or sets the Number (Matter Alias).",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "AdvancedFilter.ChildObjectsToInclude",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.AttributesToInclude",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.FilterXOQL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Predicates",
                        "in": "query",
                        "description": "Gets or Sets predicates.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicate"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Operator",
                        "in": "query",
                        "description": "Gets or Sets the logical operator between the group of E3E.API.Query.SJQL.SJPredicateGroup.Predicates and the E3E.API.Query.SJQL.SJPredicateGroup.Groups.",
                        "schema": {
                            "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJLogicalOperator"
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Groups",
                        "in": "query",
                        "description": "Gets or Sets group of predicates based on a logical operator.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicateGroup"
                            }
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Matter.Models.MatterGetResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Matter.Models.MatterGetResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Matter"
                ],
                "summary": "Creates a new Matter.",
                "description": "Creates a new Matter.",
                "operationId": "Matter_CreateMatter",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Matter.Models.MatterCreateRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Matter.Models.MatterCreateRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Matter.Models.MatterCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Matter.Models.MatterCreateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Matter.Models.MatterCreateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "patch": {
                "tags": [
                    "Matter"
                ],
                "summary": "Updates a Matter.",
                "description": "Updates a Matter.",
                "operationId": "Matter_UpdateMatter",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Matter.Models.MatterUpdateRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Matter.Models.MatterUpdateRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Matter.Models.MatterUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Matter.Models.MatterUpdateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Matter.Models.MatterUpdateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/matter/temp": {
            "get": {
                "tags": [
                    "Matter"
                ],
                "summary": "Gets Temp Matters and returns a TempMatterGetResponse.",
                "description": "Gets Temp Matters and returns a TempMatterGetResponse.",
                "operationId": "Matter_GetTempMatters",
                "parameters": [
                    {
                        "name": "TempMatterID",
                        "in": "query",
                        "description": "Gets or sets the TempMatterIDs.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "TempMatterName",
                        "in": "query",
                        "description": "Gets or sets the TempMatterName.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "TimekeeperIndex",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "TimekeeperNumber",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "TimekeeperID",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "AdvancedFilter.AttributesToInclude",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.FilterXOQL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Predicates",
                        "in": "query",
                        "description": "Gets or Sets predicates.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicate"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Operator",
                        "in": "query",
                        "description": "Gets or Sets the logical operator between the group of E3E.API.Query.SJQL.SJPredicateGroup.Predicates and the E3E.API.Query.SJQL.SJPredicateGroup.Groups.",
                        "schema": {
                            "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJLogicalOperator"
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Groups",
                        "in": "query",
                        "description": "Gets or Sets group of predicates based on a logical operator.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicateGroup"
                            }
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Matter.Models.TempMatterGetResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Matter.Models.TempMatterGetResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Matter"
                ],
                "summary": "Creates a new Temp Matter.",
                "description": "Creates a new Temp Matter.",
                "operationId": "Matter_CreateTempMatter",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.TempMatter.Models.TempMatterCreateRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.TempMatter.Models.TempMatterCreateRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.TempMatter.Models.TempMatterCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.TempMatter.Models.TempMatterCreateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.TempMatter.Models.TempMatterCreateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Matter"
                ],
                "summary": "Deletes the specified Temp Matters.",
                "description": "Deletes the specified Temp Matters.",
                "operationId": "Matter_DeleteTempMatter",
                "parameters": [
                    {
                        "name": "ItemId",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.TempMatter.Models.TempMatterDeleteResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.TempMatter.Models.TempMatterDeleteResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/matter/temp/name": {
            "get": {
                "tags": [
                    "Matter"
                ],
                "summary": "Gets high level Temp Matter name list and returns a TempMatterGetResponse.",
                "description": "Gets high level Temp Matter name list and returns a TempMatterGetResponse.",
                "operationId": "Matter_GetTempMatterNameList",
                "parameters": [
                    {
                        "name": "TempMatterID",
                        "in": "query",
                        "description": "Gets or sets the TempMatterIDs.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "TempMatterName",
                        "in": "query",
                        "description": "Gets or sets the TempMatterName.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "TimekeeperIndex",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "TimekeeperNumber",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "TimekeeperID",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "AdvancedFilter.AttributesToInclude",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.FilterXOQL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Predicates",
                        "in": "query",
                        "description": "Gets or Sets predicates.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicate"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Operator",
                        "in": "query",
                        "description": "Gets or Sets the logical operator between the group of E3E.API.Query.SJQL.SJPredicateGroup.Predicates and the E3E.API.Query.SJQL.SJPredicateGroup.Groups.",
                        "schema": {
                            "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJLogicalOperator"
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Groups",
                        "in": "query",
                        "description": "Gets or Sets group of predicates based on a logical operator.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicateGroup"
                            }
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Matter.Models.TempMatterGetResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Matter.Models.TempMatterGetResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/matter/nickname": {
            "get": {
                "tags": [
                    "Matter"
                ],
                "summary": "Gets Matter Nicknames and returns a MatterNicknameGetResponse.",
                "description": "Gets Matter Nicknames and returns a MatterNicknameGetResponse.",
                "operationId": "Matter_GetMatterNicknames",
                "parameters": [
                    {
                        "name": "MatterNicknameId",
                        "in": "query",
                        "description": "Gets or sets the MatterNicknameIds.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "TimekeeperIndex",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "TimekeeperNumber",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "TimekeeperID",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "AdvancedFilter.AttributesToInclude",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.FilterXOQL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Predicates",
                        "in": "query",
                        "description": "Gets or Sets predicates.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicate"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Operator",
                        "in": "query",
                        "description": "Gets or Sets the logical operator between the group of E3E.API.Query.SJQL.SJPredicateGroup.Predicates and the E3E.API.Query.SJQL.SJPredicateGroup.Groups.",
                        "schema": {
                            "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJLogicalOperator"
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Groups",
                        "in": "query",
                        "description": "Gets or Sets group of predicates based on a logical operator.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicateGroup"
                            }
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Matter.Models.MatterNicknameGetResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Matter.Models.MatterNicknameGetResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Matter"
                ],
                "summary": "Creates a new Matter Nickname.",
                "description": "Creates a new Matter Nickname.",
                "operationId": "Matter_CreateMatterNickname",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.MatterNickname.Models.MatterNicknameCreateRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.MatterNickname.Models.MatterNicknameCreateRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.MatterNickname.Models.MatterNicknameCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.MatterNickname.Models.MatterNicknameCreateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.MatterNickname.Models.MatterNicknameCreateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "patch": {
                "tags": [
                    "Matter"
                ],
                "summary": "Updates a Matter Nickname.",
                "description": "Updates a Matter Nickname.",
                "operationId": "Matter_UpdateMatterNickname",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.MatterNickname.Models.MatterNicknameUpdateRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.MatterNickname.Models.MatterNicknameUpdateRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.MatterNickname.Models.MatterNicknameUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.MatterNickname.Models.MatterNicknameUpdateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.MatterNickname.Models.MatterNicknameUpdateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Matter"
                ],
                "summary": "Deletes one or more existing matter nicknames.",
                "description": "Deletes one or more existing matter nicknames.",
                "operationId": "Matter_DeleteMatterNickname",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The MatterNickname.MatterNicknameID values of the matter nicknames to be deleted.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.MatterNickname.Models.MatterNicknameDeleteRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.MatterNickname.Models.MatterNicknameDeleteRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.MatterNickname.Models.MatterNicknameDeleteRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.MatterNickname.Models.MatterNicknameDeleteResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.MatterNickname.Models.MatterNicknameDeleteResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/matter/schema": {
            "get": {
                "tags": [
                    "Matter"
                ],
                "summary": "Gets the schema for Matter.",
                "description": "Gets the schema for Matter.",
                "operationId": "Matter_GetMatterSchema",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Matter.Models.MatterGetSchemaResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Matter.Models.MatterGetSchemaResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/matter/template": {
            "get": {
                "tags": [
                    "Matter"
                ],
                "summary": "Gets a new Matter with default values.",
                "description": "This method does not launch a process or add any data in 3E.\r\nIt is intended to be used with CreateMatter.\r\ne.g. call this method, then set whichever attributes need to be changed and then call CreateMatter with the modified data.",
                "operationId": "Matter_GetNewMatter",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Matter.Models.MatterTemplateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Matter.Models.MatterTemplateResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/matter/temp/replace": {
            "post": {
                "tags": [
                    "Matter"
                ],
                "summary": "Replaces a Temp Matter with an actual matter.",
                "description": "Replaces a Temp Matter with an actual matter.",
                "operationId": "Matter_ReplaceTempMatter",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.TempMatter.Models.TempMatterReplaceRequest"
                            },
                            "example": {
                                "tempMatterId": "string",
                                "matterId": "string",
                                "matterIndex": 0,
                                "timecardIds": [
                                    "string"
                                ]
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.TempMatter.Models.TempMatterReplaceRequest"
                            },
                            "example": {
                                "tempMatterId": "string",
                                "matterId": "string",
                                "matterIndex": 0,
                                "timecardIds": [
                                    "string"
                                ]
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.TempMatter.Models.TempMatterReplaceRequest"
                            },
                            "example": {
                                "tempMatterId": "string",
                                "matterId": "string",
                                "matterIndex": 0,
                                "timecardIds": [
                                    "string"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.TempMatter.Models.TempMatterReplaceResponse"
                                },
                                "example": {
                                    "replacedTimecards": [
                                        "string"
                                    ],
                                    "success": true,
                                    "message": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.TempMatter.Models.TempMatterReplaceResponse"
                                },
                                "example": {
                                    "replacedTimecards": [
                                        "string"
                                    ],
                                    "success": true,
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/matter/modelfrom": {
            "get": {
                "tags": [
                    "Matter"
                ],
                "summary": "Gets cloned Matters and returns a MatterGetResponse.",
                "description": "Gets cloned Matters and returns a MatterGetResponse.",
                "operationId": "Matter_ModelFromMatters",
                "parameters": [
                    {
                        "name": "ItemId",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Matter.Models.MatterGetResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Matter.Models.MatterGetResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/matter/validate": {
            "post": {
                "tags": [
                    "Matter"
                ],
                "summary": "Validates one or more existing Matters.",
                "description": "Validates one or more existing Matters.",
                "operationId": "Matter_ValidateMatters",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The Matter.MattIndex values of the Matters to be validated.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Matter.Models.MatterValidateRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Matter.Models.MatterValidateRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Matter.Models.MatterValidateRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Matter.Models.MatterValidateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Matter.Models.MatterValidateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/NBI/template": {
            "get": {
                "tags": [
                    "NBI"
                ],
                "summary": "Gets a Conflicts New Business Intake - Legacy with default values.",
                "description": "This method does not launch a process or add any data in 3E.\r\nIt is intended to be used with CreateNBI.\r\ne.g. call this method, then set whichever attributes need to be changed and then call CreateNBI with the modified data.",
                "operationId": "NBI_GetNewNBI",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.NBI.Models.NBITemplateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.NBI.Models.NBITemplateResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/NBI": {
            "get": {
                "tags": [
                    "NBI"
                ],
                "summary": "Gets Conflicts New Business Intake - Legacy and returns a NBIGetResponse.",
                "description": "Gets Conflicts New Business Intake - Legacy and returns a NBIGetResponse.",
                "operationId": "NBI_GetNBIs",
                "parameters": [
                    {
                        "name": "CftNewBizRequestId",
                        "in": "query",
                        "description": "Gets or sets the CftNewBizRequestIds.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "JobNumber",
                        "in": "query",
                        "description": "Gets or sets the Search ID/Job Number.",
                        "schema": {
                            "maximum": 2147483647,
                            "minimum": 0,
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "AdvancedFilter.ChildObjectsToInclude",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.AttributesToInclude",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.FilterXOQL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Predicates",
                        "in": "query",
                        "description": "Gets or Sets predicates.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicate"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Operator",
                        "in": "query",
                        "description": "Gets or Sets the logical operator between the group of E3E.API.Query.SJQL.SJPredicateGroup.Predicates and the E3E.API.Query.SJQL.SJPredicateGroup.Groups.",
                        "schema": {
                            "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJLogicalOperator"
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Groups",
                        "in": "query",
                        "description": "Gets or Sets group of predicates based on a logical operator.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicateGroup"
                            }
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.NBI.Models.NBIGetResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.NBI.Models.NBIGetResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "post": {
                "tags": [
                    "NBI"
                ],
                "summary": "Creates a Conflicts New Business Intake - Legacy.",
                "description": "Creates a Conflicts New Business Intake - Legacy.",
                "operationId": "NBI_CreateNBI",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.NBI.Models.NBICreateRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.NBI.Models.NBICreateRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.NBI.Models.NBICreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.NBI.Models.NBICreateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.NBI.Models.NBICreateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/NBIWF/template": {
            "get": {
                "tags": [
                    "NBIWF"
                ],
                "summary": "Gets a New Business Intake WF with default values.",
                "description": "This method does not launch a process or add any data in 3E.\r\nIt is intended to be used with CreateNBIWF.\r\ne.g. call this method, then set whichever attributes need to be changed and then call CreateNBIWF with the modified data.",
                "operationId": "NBIWF_GetNewNBIWF",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.NBIWF.Models.NBIWFTemplateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.NBIWF.Models.NBIWFTemplateResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/NBIWF": {
            "get": {
                "tags": [
                    "NBIWF"
                ],
                "summary": "Gets New Business Intake WF and returns a NBIWFGetResponse.",
                "description": "Gets New Business Intake WF and returns a NBIWFGetResponse.",
                "operationId": "NBIWF_GetNBIWFs",
                "parameters": [
                    {
                        "name": "CftNBISearchId",
                        "in": "query",
                        "description": "Gets or sets the CftNBISearchIds.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "SearchID",
                        "in": "query",
                        "description": "Gets or sets the SearchID (for e.g CS-0022).",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "AdvancedFilter.ChildObjectsToInclude",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.AttributesToInclude",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.FilterXOQL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Predicates",
                        "in": "query",
                        "description": "Gets or Sets predicates.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicate"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Operator",
                        "in": "query",
                        "description": "Gets or Sets the logical operator between the group of E3E.API.Query.SJQL.SJPredicateGroup.Predicates and the E3E.API.Query.SJQL.SJPredicateGroup.Groups.",
                        "schema": {
                            "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJLogicalOperator"
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Groups",
                        "in": "query",
                        "description": "Gets or Sets group of predicates based on a logical operator.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicateGroup"
                            }
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.NBIWF.Models.NBIWFGetResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.NBIWF.Models.NBIWFGetResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "post": {
                "tags": [
                    "NBIWF"
                ],
                "summary": "Creates a Conflicts New Business Intake WF.",
                "description": "Creates a Conflicts New Business Intake WF.",
                "operationId": "NBIWF_CreateNBIWF",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.NBIWF.Models.NBIWFCreateRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.NBIWF.Models.NBIWFCreateRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.NBIWF.Models.NBIWFCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.NBIWF.Models.NBIWFCreateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.NBIWF.Models.NBIWFCreateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/NBIWF/updatesearch": {
            "patch": {
                "tags": [
                    "NBIWF"
                ],
                "summary": "Updates Client and Matter info on Finalized/Completed searches",
                "description": "Updates Client and Matter info on Finalized/Completed searches",
                "operationId": "NBIWF_UpdateNBIWF",
                "parameters": [
                    {
                        "name": "CftNBISearchId",
                        "in": "query",
                        "description": "Gets or sets the CftNBISearchIds.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "SearchID",
                        "in": "query",
                        "description": "Gets or sets the SearchID (for e.g CS-0022).",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Client",
                        "in": "query",
                        "description": "Client number to be updated on the search.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Matter",
                        "in": "query",
                        "description": "Matter number to be updated on the search.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.NBIWF.Models.NBIWFUpdateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.NBIWF.Models.NBIWFUpdateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/relatedParty": {
            "get": {
                "tags": [
                    "RelatedParty"
                ],
                "summary": "Gets RelatedParties and returns a RelatedPartyGetResponse.",
                "description": "Gets RelatedParties and returns a RelatedPartyGetResponse.",
                "operationId": "RelatedParty_GetRelatedParties",
                "parameters": [
                    {
                        "name": "RelatedPartyId",
                        "in": "query",
                        "description": "Gets or sets the RelatedPartyIds.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "RelatedPartyIndex",
                        "in": "query",
                        "description": "Gets or sets the CftRelatedPartyIndex.",
                        "schema": {
                            "maximum": 2147483647,
                            "minimum": 0,
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "AdvancedFilter.ChildObjectsToInclude",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.AttributesToInclude",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.FilterXOQL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Predicates",
                        "in": "query",
                        "description": "Gets or Sets predicates.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicate"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Operator",
                        "in": "query",
                        "description": "Gets or Sets the logical operator between the group of E3E.API.Query.SJQL.SJPredicateGroup.Predicates and the E3E.API.Query.SJQL.SJPredicateGroup.Groups.",
                        "schema": {
                            "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJLogicalOperator"
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Groups",
                        "in": "query",
                        "description": "Gets or Sets group of predicates based on a logical operator.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicateGroup"
                            }
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.RelatedParty.Models.RelatedPartyGetResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.RelatedParty.Models.RelatedPartyGetResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "post": {
                "tags": [
                    "RelatedParty"
                ],
                "summary": "Creates a new RelatedParty.",
                "description": "Creates a new RelatedParty.",
                "operationId": "RelatedParty_CreateRelatedParty",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.RelatedParty.Models.RelatedPartyCreateRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.RelatedParty.Models.RelatedPartyCreateRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.RelatedParty.Models.RelatedPartyCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.RelatedParty.Models.RelatedPartyCreateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.RelatedParty.Models.RelatedPartyCreateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "patch": {
                "tags": [
                    "RelatedParty"
                ],
                "summary": "Updates a RelatedParty.",
                "description": "Updates a RelatedParty.",
                "operationId": "RelatedParty_UpdateRelatedParty",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.RelatedParty.Models.RelatedPartyUpdateRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.RelatedParty.Models.RelatedPartyUpdateRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.RelatedParty.Models.RelatedPartyUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.RelatedParty.Models.RelatedPartyUpdateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.RelatedParty.Models.RelatedPartyUpdateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/relatedParty/schema": {
            "get": {
                "tags": [
                    "RelatedParty"
                ],
                "summary": "Gets the schema for RelatedParty.",
                "description": "Gets the schema for RelatedParty.",
                "operationId": "RelatedParty_GetRelatedPartySchema",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.RelatedParty.Models.RelatedPartyGetSchemaResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.RelatedParty.Models.RelatedPartyGetSchemaResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/relatedParty/template": {
            "get": {
                "tags": [
                    "RelatedParty"
                ],
                "summary": "Gets a new RelatedParty with default values.",
                "description": "This method does not launch a process or add any data in 3E.\r\nIt is intended to be used with CreateRelatedParty.\r\ne.g. call this method, then set whichever attributes need to be changed and then call CreateRelatedParty with the modified data.",
                "operationId": "RelatedParty_GetNewRelatedParty",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.RelatedParty.Models.RelatedPartyTemplateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.RelatedParty.Models.RelatedPartyTemplateResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/relatedParty/modelfrom": {
            "get": {
                "tags": [
                    "RelatedParty"
                ],
                "summary": "Gets cloned RelatedParties and returns a RelatedPartyGetResponse.",
                "description": "Gets cloned RelatedParties and returns a RelatedPartyGetResponse.",
                "operationId": "RelatedParty_ModelFromRelatedParties",
                "parameters": [
                    {
                        "name": "ItemId",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.RelatedParty.Models.RelatedPartyGetResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.RelatedParty.Models.RelatedPartyGetResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/relatedParty/validate": {
            "post": {
                "tags": [
                    "RelatedParty"
                ],
                "summary": "Validates one or more existing RelatedParties.",
                "description": "Validates one or more existing RelatedParties.",
                "operationId": "RelatedParty_ValidateRelatedParties",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The RelatedParty.MattIndex values of the RelatedParties to be validated.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.RelatedParty.Models.RelatedPartyValidateRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.RelatedParty.Models.RelatedPartyValidateRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.RelatedParty.Models.RelatedPartyValidateRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.RelatedParty.Models.RelatedPartyValidateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.RelatedParty.Models.RelatedPartyValidateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/time/timecapture": {
            "get": {
                "tags": [
                    "Time"
                ],
                "summary": "Gets timecapture pending records for a given timekeeper and returns a TimecardGetResponse.",
                "description": "Gets timecapture pending records for a given timekeeper and returns a TimecardGetResponse.",
                "operationId": "Time_GetTimeCapturePendingCards",
                "parameters": [
                    {
                        "name": "StartDate",
                        "in": "query",
                        "description": "Gets or sets the StartDate (WorkDate).",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "EndDate",
                        "in": "query",
                        "description": "Gets or sets the EndDate (WorkDate).",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "TimeCardPendingID",
                        "in": "query",
                        "description": "Gets or sets the TimeCardPendingIDs.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "TimePendIndex",
                        "in": "query",
                        "description": "Gets or sets the TimePendIndex.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "TimekeeperIndex",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "TimekeeperNumber",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "TimekeeperID",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "AdvancedFilter.AttributesToInclude",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.FilterXOQL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Predicates",
                        "in": "query",
                        "description": "Gets or Sets predicates.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicate"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Operator",
                        "in": "query",
                        "description": "Gets or Sets the logical operator between the group of E3E.API.Query.SJQL.SJPredicateGroup.Predicates and the E3E.API.Query.SJQL.SJPredicateGroup.Groups.",
                        "schema": {
                            "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJLogicalOperator"
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Groups",
                        "in": "query",
                        "description": "Gets or Sets group of predicates based on a logical operator.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicateGroup"
                            }
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardGetResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardGetResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Time"
                ],
                "summary": "Creates a new timecapture record.",
                "description": "Creates a new timecapture record.",
                "operationId": "Time_CreateTimeCaptureCard",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCreateRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCreateRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCreateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCreateResponse"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "patch": {
                "tags": [
                    "Time"
                ],
                "summary": "Updates an existing timecapture record.",
                "description": "Updates an existing timecapture record.",
                "operationId": "Time_UpdateTimeCaptureCard",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardUpdateRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardUpdateRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardUpdateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardUpdateResponse"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/time/pending": {
            "get": {
                "tags": [
                    "Time"
                ],
                "summary": "Gets pending timecards for a given timekeeper and returns a TimecardGetResponse.",
                "description": "Gets pending timecards for a given timekeeper and returns a TimecardGetResponse.",
                "operationId": "Time_GetPendingTimecards",
                "parameters": [
                    {
                        "name": "StartDate",
                        "in": "query",
                        "description": "Gets or sets the StartDate (WorkDate).",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "EndDate",
                        "in": "query",
                        "description": "Gets or sets the EndDate (WorkDate).",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "TimeCardPendingID",
                        "in": "query",
                        "description": "Gets or sets the TimeCardPendingIDs.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "TimePendIndex",
                        "in": "query",
                        "description": "Gets or sets the TimePendIndex.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "TimekeeperIndex",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "TimekeeperNumber",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "TimekeeperID",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "AdvancedFilter.AttributesToInclude",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.FilterXOQL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Predicates",
                        "in": "query",
                        "description": "Gets or Sets predicates.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicate"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Operator",
                        "in": "query",
                        "description": "Gets or Sets the logical operator between the group of E3E.API.Query.SJQL.SJPredicateGroup.Predicates and the E3E.API.Query.SJQL.SJPredicateGroup.Groups.",
                        "schema": {
                            "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJLogicalOperator"
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Groups",
                        "in": "query",
                        "description": "Gets or Sets group of predicates based on a logical operator.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicateGroup"
                            }
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardGetResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardGetResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Time"
                ],
                "summary": "Deletes one or more existing pending timecards.",
                "description": "Deletes one or more existing pending timecards.",
                "operationId": "Time_DeletePendingTimecards",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The TimecardPending.TimePendIndex values of the timecards to be deleted.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardDeleteRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardDeleteRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardDeleteRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardDeleteResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardDeleteResponse"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Time"
                ],
                "summary": "Creates a pending timecard.",
                "description": "Creates a pending timecard.",
                "operationId": "Time_CreatePendingTimecard",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCreateRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCreateRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCreateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCreateResponse"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "patch": {
                "tags": [
                    "Time"
                ],
                "summary": "Updates a pending timecard.",
                "description": "Updates a pending timecard.",
                "operationId": "Time_UpdatePendingTimecard",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardUpdateRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardUpdateRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardUpdateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardUpdateResponse"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/time/posted": {
            "get": {
                "tags": [
                    "Time"
                ],
                "summary": "Gets posted timecards for a given timekeeper and returns a TimecardGetResponse.",
                "description": "Gets posted timecards for a given timekeeper and returns a TimecardGetResponse.",
                "operationId": "Time_GetPostedTimecards",
                "parameters": [
                    {
                        "name": "StartDate",
                        "in": "query",
                        "description": "Gets or sets the StartDate (WorkDate).",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "EndDate",
                        "in": "query",
                        "description": "Gets or sets the EndDate (WorkDate).",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "TimecardID",
                        "in": "query",
                        "description": "Gets or sets the TimecardIDs.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "TimeIndex",
                        "in": "query",
                        "description": "Gets or sets the TimeIndex.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "TimekeeperIndex",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "TimekeeperNumber",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "TimekeeperID",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "AdvancedFilter.AttributesToInclude",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.FilterXOQL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Predicates",
                        "in": "query",
                        "description": "Gets or Sets predicates.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicate"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Operator",
                        "in": "query",
                        "description": "Gets or Sets the logical operator between the group of E3E.API.Query.SJQL.SJPredicateGroup.Predicates and the E3E.API.Query.SJQL.SJPredicateGroup.Groups.",
                        "schema": {
                            "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJLogicalOperator"
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Groups",
                        "in": "query",
                        "description": "Gets or Sets group of predicates based on a logical operator.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicateGroup"
                            }
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardGetResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardGetResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Time"
                ],
                "summary": "Creates a posted timecard.",
                "description": "Creates a posted timecard.",
                "operationId": "Time_CreatePostedTimecard",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCreateRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCreateRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCreateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCreateResponse"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "patch": {
                "tags": [
                    "Time"
                ],
                "summary": "Updates a posted timecard.",
                "description": "Updates a posted timecard.",
                "operationId": "Time_UpdatePostedTimecard",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardUpdateRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardUpdateRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardUpdateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardUpdateResponse"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/time/timecapture/all": {
            "get": {
                "tags": [
                    "Time"
                ],
                "summary": "Gets timecapture records (both posted and pending) for a given timekeeper and returns a TimecardGetAllResponse.",
                "description": "Gets timecapture records (both posted and pending) for a given timekeeper and returns a TimecardGetAllResponse.",
                "operationId": "Time_GetTimeCaptureAllCards",
                "parameters": [
                    {
                        "name": "Index",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "StartDate",
                        "in": "query",
                        "description": "Gets or sets the StartDate (WorkDate).",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "EndDate",
                        "in": "query",
                        "description": "Gets or sets the EndDate (WorkDate).",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "TimekeeperIndex",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "TimekeeperNumber",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "TimekeeperID",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "ItemIds",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "AttributesToInclude",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "FilterXOQL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Filter.Predicates",
                        "in": "query",
                        "description": "Gets or Sets predicates.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicate"
                            }
                        }
                    },
                    {
                        "name": "Filter.Operator",
                        "in": "query",
                        "description": "Gets or Sets the logical operator between the group of E3E.API.Query.SJQL.SJPredicateGroup.Predicates and the E3E.API.Query.SJQL.SJPredicateGroup.Groups.",
                        "schema": {
                            "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJLogicalOperator"
                        }
                    },
                    {
                        "name": "Filter.Groups",
                        "in": "query",
                        "description": "Gets or Sets group of predicates based on a logical operator.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicateGroup"
                            }
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardGetAllResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardGetAllResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/time/timecapture/query": {
            "post": {
                "tags": [
                    "Time"
                ],
                "summary": "Queries timecapture records (pending only) filtered out according to request body conditions.",
                "description": "Queries timecapture records (pending only) filtered out according to request body conditions.",
                "operationId": "Time_QueryTimeCapturePendingCards",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardGetRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardGetRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardGetRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardGetResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardGetResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/time/timecapture/query/all": {
            "post": {
                "tags": [
                    "Time"
                ],
                "summary": "Queries timecapture records (both posted and pending) filtered out according to request body conditions.",
                "description": "Queries timecapture records (both posted and pending) filtered out according to request body conditions.",
                "operationId": "Time_QueryTimeCaptureAllCards",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardGetRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardGetRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardGetRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardGetAllResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardGetAllResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/time/all": {
            "get": {
                "tags": [
                    "Time"
                ],
                "summary": "Gets timecards (both posted and pending) for a given timekeeper and returns a TimecardGetAllResponse.",
                "description": "Gets timecards (both posted and pending) for a given timekeeper and returns a TimecardGetAllResponse.",
                "operationId": "Time_GetTimecards",
                "parameters": [
                    {
                        "name": "Index",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "StartDate",
                        "in": "query",
                        "description": "Gets or sets the StartDate (WorkDate).",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "EndDate",
                        "in": "query",
                        "description": "Gets or sets the EndDate (WorkDate).",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "TimekeeperIndex",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "TimekeeperNumber",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "TimekeeperID",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "ItemIds",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "AttributesToInclude",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "FilterXOQL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Filter.Predicates",
                        "in": "query",
                        "description": "Gets or Sets predicates.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicate"
                            }
                        }
                    },
                    {
                        "name": "Filter.Operator",
                        "in": "query",
                        "description": "Gets or Sets the logical operator between the group of E3E.API.Query.SJQL.SJPredicateGroup.Predicates and the E3E.API.Query.SJQL.SJPredicateGroup.Groups.",
                        "schema": {
                            "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJLogicalOperator"
                        }
                    },
                    {
                        "name": "Filter.Groups",
                        "in": "query",
                        "description": "Gets or Sets group of predicates based on a logical operator.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicateGroup"
                            }
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardGetAllResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardGetAllResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/time/report": {
            "get": {
                "tags": [
                    "Time"
                ],
                "summary": "Gets calendar data report for a given timekeeper and period.",
                "description": "Gets calendar data report for a given timekeeper and period.",
                "operationId": "Time_GetCalendarReport",
                "parameters": [
                    {
                        "name": "Timekeeper",
                        "in": "query",
                        "description": "Gets or sets the timekeeper index.",
                        "required": true,
                        "schema": {
                            "maximum": 2147483647,
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "StartDate",
                        "in": "query",
                        "description": "Gets or sets the start date for a reporting period.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "EndDate",
                        "in": "query",
                        "description": "Gets or sets the end date for a reporting period.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "Matter",
                        "in": "query",
                        "description": "Gets or sets the matter index.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Client",
                        "in": "query",
                        "description": "Gets or sets the client index.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "IncludeHours",
                        "in": "query",
                        "description": "Gets or sets a value indicating whether to return week hours objectives.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.CalendarReportGetResponse"
                                },
                                "example": {
                                    "days": [
                                        {
                                            "date": "string",
                                            "posted": 0,
                                            "pending": 0,
                                            "billable": 0,
                                            "nonBillable": 0,
                                            "unassigned": 0
                                        }
                                    ],
                                    "hours": [
                                        {
                                            "startDate": "string",
                                            "endDate": "string",
                                            "sun": 0,
                                            "mon": 0,
                                            "tue": 0,
                                            "wen": 0,
                                            "thu": 0,
                                            "fri": 0,
                                            "sat": 0
                                        }
                                    ],
                                    "holidays": [
                                        {
                                            "date": "string",
                                            "description": "string"
                                        }
                                    ],
                                    "success": true,
                                    "message": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.CalendarReportGetResponse"
                                },
                                "example": {
                                    "days": [
                                        {
                                            "date": "string",
                                            "posted": 0,
                                            "pending": 0,
                                            "billable": 0,
                                            "nonBillable": 0,
                                            "unassigned": 0
                                        }
                                    ],
                                    "hours": [
                                        {
                                            "startDate": "string",
                                            "endDate": "string",
                                            "sun": 0,
                                            "mon": 0,
                                            "tue": 0,
                                            "wen": 0,
                                            "thu": 0,
                                            "fri": 0,
                                            "sat": 0
                                        }
                                    ],
                                    "holidays": [
                                        {
                                            "date": "string",
                                            "description": "string"
                                        }
                                    ],
                                    "success": true,
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/time/pending/schema": {
            "get": {
                "tags": [
                    "Time"
                ],
                "summary": "Gets the schema for pending timecards.",
                "description": "Gets the schema for pending timecards.",
                "operationId": "Time_GetPendingTimecardSchema",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardGetSchemaResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardGetSchemaResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/time/posted/schema": {
            "get": {
                "tags": [
                    "Time"
                ],
                "summary": "Gets the schema for posted timecards.",
                "description": "Gets the schema for posted timecards.",
                "operationId": "Time_GetPostedTimecardSchema",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardGetSchemaResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardGetSchemaResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/time/pending/post": {
            "post": {
                "tags": [
                    "Time"
                ],
                "summary": "Posts one or more existing pending timecards.",
                "description": "Posts one or more existing pending timecards.",
                "operationId": "Time_PostPendingTimecards",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The TimecardPending.TimePendIndex values of the timecards to be posted.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardPostRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardPostRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardPostRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardPostResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardPostResponse"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/time/pending/cleanup": {
            "delete": {
                "tags": [
                    "Time"
                ],
                "summary": "Cleans up pending timecards, so that only timecards with works hours or timecards with work hours or narrative remain.",
                "description": "Cleans up pending timecards, so that only timecards with works hours or timecards with work hours or narrative remain.",
                "operationId": "Time_CleanupPendingTimecards",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCleanupRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCleanupRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCleanupRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCleanupResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCleanupResponse"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/time/timecapture/template": {
            "get": {
                "tags": [
                    "Time"
                ],
                "summary": "Gets a new timecapture timecard with default values.",
                "description": "This method does not launch a process or add any data in 3E.\r\nIt is intended to be used with CreateTimecardPending.\r\ne.g. call this method, then set whichever attributes need to be changed and then call CreateTimecardPending with the modified RootData.",
                "operationId": "Time_GetNewTimeCaptureCard",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardTemplateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardTemplateResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/time/pending/template": {
            "get": {
                "tags": [
                    "Time"
                ],
                "summary": "Gets a new pending timecard with default values.",
                "description": "This method does not launch a process or add any data in 3E.\r\nIt is intended to be used with CreateTimecardPending.\r\ne.g. call this method, then set whichever attributes need to be changed and then call CreateTimecardPending with the modified RootData.",
                "operationId": "Time_GetNewPendingTimecard",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardTemplateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardTemplateResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/time/posted/template": {
            "get": {
                "tags": [
                    "Time"
                ],
                "summary": "Gets a new posted timecard with default values.",
                "description": "This method does not launch a process or add any data in 3E.\r\nIt is intended to be used with CreatePendingTimecard.\r\ne.g. call this method, then set whichever attributes need to be changed and then call CreateTimecardPosted with the modified RootData.",
                "operationId": "Time_GetNewPostedTimecard",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardTemplateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardTemplateResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/time/pending/add": {
            "post": {
                "tags": [
                    "Time"
                ],
                "summary": "Add a new pending timecard with default values.",
                "description": "Add a new pending timecard with default values.",
                "operationId": "Time_AddPendingTimecard",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardAddResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardAddResponse"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/time/pending/spellcheck": {
            "get": {
                "tags": [
                    "Time"
                ],
                "summary": "Spellchecks one or more existing pending timecards.",
                "description": "Spellchecks one or more existing pending timecards.",
                "operationId": "Time_SpellcheckPendingTimecards",
                "parameters": [
                    {
                        "name": "ItemId",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardSpellCheckResponse"
                                },
                                "example": {
                                    "itemId": [
                                        "string"
                                    ],
                                    "success": true,
                                    "message": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardSpellCheckResponse"
                                },
                                "example": {
                                    "itemId": [
                                        "string"
                                    ],
                                    "success": true,
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/time/timecapture/spellcheck": {
            "post": {
                "tags": [
                    "Time"
                ],
                "summary": "Validates spelling for timecapture item.",
                "description": "Validates spelling for timecapture item.",
                "operationId": "Time_SpellcheckTimeCapture",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The timecapture item ID to validate.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecaptureSpellCheckRequest"
                            },
                            "example": {
                                "itemId": "string",
                                "text": "string"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecaptureSpellCheckRequest"
                            },
                            "example": {
                                "itemId": "string",
                                "text": "string"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecaptureSpellCheckRequest"
                            },
                            "example": {
                                "itemId": "string",
                                "text": "string"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecaptureSpellCheckRequest"
                            },
                            "example": "<E3E.API.Time.Models.TimecaptureSpellCheckRequest> <itemId>string</itemId> <text>string</text> </E3E.API.Time.Models.TimecaptureSpellCheckRequest>"
                        },
                        "text/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecaptureSpellCheckRequest"
                            },
                            "example": "<E3E.API.Time.Models.TimecaptureSpellCheckRequest> <itemId>string</itemId> <text>string</text> </E3E.API.Time.Models.TimecaptureSpellCheckRequest>"
                        },
                        "application/*+xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecaptureSpellCheckRequest"
                            },
                            "example": "<E3E.API.Time.Models.TimecaptureSpellCheckRequest> <itemId>string</itemId> <text>string</text> </E3E.API.Time.Models.TimecaptureSpellCheckRequest>"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecaptureSpellCheckResponse"
                                },
                                "example": {
                                    "success": true,
                                    "message": "string",
                                    "mistakes": [
                                        {
                                            "value": "string",
                                            "suggestions": [
                                                "string"
                                            ],
                                            "repeatedWord": true,
                                            "caseFailure": true,
                                            "start": 0,
                                            "length": 0,
                                            "info": "string"
                                        }
                                    ]
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecaptureSpellCheckResponse"
                                },
                                "example": {
                                    "success": true,
                                    "message": "string",
                                    "mistakes": [
                                        {
                                            "value": "string",
                                            "suggestions": [
                                                "string"
                                            ],
                                            "repeatedWord": true,
                                            "caseFailure": true,
                                            "start": 0,
                                            "length": 0,
                                            "info": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/time/timecapture/lookup": {
            "post": {
                "tags": [
                    "Time"
                ],
                "summary": "Gets a lookup rows for a timecapture item.",
                "description": "Gets a lookup rows for a timecapture item.",
                "operationId": "Time_GetTimecaptureLookupData",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecaptureLookupRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecaptureLookupRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecaptureLookupRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLookupResponse"
                                },
                                "example": {
                                    "findResult": {
                                        "rowCount": 0,
                                        "rows": [
                                            {
                                                "rowKey": "string",
                                                "alias": "string",
                                                "processItemId": "string",
                                                "attributes": {}
                                            }
                                        ],
                                        "isExactMatch": true,
                                        "fields": [
                                            {
                                                "caption": "string",
                                                "name": "string",
                                                "type": 0
                                            }
                                        ]
                                    },
                                    "success": true,
                                    "message": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLookupResponse"
                                },
                                "example": {
                                    "findResult": {
                                        "rowCount": 0,
                                        "rows": [
                                            {
                                                "rowKey": "string",
                                                "alias": "string",
                                                "processItemId": "string",
                                                "attributes": {}
                                            }
                                        ],
                                        "isExactMatch": true,
                                        "fields": [
                                            {
                                                "caption": "string",
                                                "name": "string",
                                                "type": 0
                                            }
                                        ]
                                    },
                                    "success": true,
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/time/timecapture/clone": {
            "post": {
                "tags": [
                    "Time"
                ],
                "summary": "Clones one or more existing timecapture records.",
                "description": "Clones one or more existing timecapture records.",
                "operationId": "Time_CloneTimecaptureCard",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The TimecardPending.TimePendIndex values of the timecards to be cloned.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCloneRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCloneRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCloneRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCloneResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCloneResponse"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/time/pending/clone": {
            "post": {
                "tags": [
                    "Time"
                ],
                "summary": "Clones one or more existing pending timecards.",
                "description": "Clones one or more existing pending timecards.",
                "operationId": "Time_ClonePendingTimecards",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The TimecardPending.TimePendIndex values of the timecards to be cloned.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCloneRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCloneRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCloneRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCloneResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCloneResponse"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/time/posted/clone": {
            "post": {
                "tags": [
                    "Time"
                ],
                "summary": "Clones one or more existing posted timecards.",
                "description": "Clones one or more existing posted timecards.",
                "operationId": "Time_ClonePostedTimecards",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The Timecard.TimeIndex values of the timecards to be cloned.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCloneRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCloneRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCloneRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCloneResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCloneResponse"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/time/pending/modelfrom": {
            "get": {
                "tags": [
                    "Time"
                ],
                "summary": "Gets cloned pending timecards and returns a TimecardGetResponse.",
                "description": "Gets cloned pending timecards and returns a TimecardGetResponse.",
                "operationId": "Time_ModelFromPendingTimecards",
                "parameters": [
                    {
                        "name": "ItemId",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardGetResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardGetResponse"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/time/posted/modelfrom": {
            "get": {
                "tags": [
                    "Time"
                ],
                "summary": "Gets cloned timecards and returns a TimecardGetResponse.",
                "description": "Gets cloned timecards and returns a TimecardGetResponse.",
                "operationId": "Time_ModelFromPostedTimecards",
                "parameters": [
                    {
                        "name": "ItemId",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectGetResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectGetResponse"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/time/timecapture/clonefromposted": {
            "post": {
                "tags": [
                    "Time"
                ],
                "summary": "Clones one or more existing posted timecards and creates one or more timecapture records from them.",
                "description": "Clones one or more existing posted timecards and creates one or more timecapture records from them.",
                "operationId": "Time_CreateTimecaptureCardFromPosted",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The Timecard.TimeIndex values of the timecards to be cloned.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCloneRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCloneRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCloneRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCloneResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCloneResponse"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/time/posted/cloneaspending": {
            "post": {
                "tags": [
                    "Time"
                ],
                "summary": "Clones one or more existing posted timecards and creates one or more pending timecards from them.",
                "description": "Clones one or more existing posted timecards and creates one or more pending timecards from them.",
                "operationId": "Time_ClonePostedTimecardsAsPendingTimecards",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The Timecard.TimeIndex values of the timecards to be cloned.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCloneRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCloneRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCloneRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCloneResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardCloneResponse"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/time/timecapture/clearPostExceptions": {
            "post": {
                "tags": [
                    "Time"
                ],
                "summary": "Cleaars timecapture post exceptions.",
                "description": "Cleaars timecapture post exceptions.",
                "operationId": "Time_ClearTimecapturePostExceptions",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The ItemId values of the timecards.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardClearRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardClearRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardClearRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardClearResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardClearResponse"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/time/timecapture/validate": {
            "post": {
                "tags": [
                    "Time"
                ],
                "summary": "Validates one or more existing timecapture records.",
                "description": "Validates one or more existing timecapture records.",
                "operationId": "Time_ValidateTimecaptureCard",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The ItemId values of the timecards to be validated.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardValidateRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardValidateRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardValidateRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardValidateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardValidateResponse"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/time/timecapture/validate/post": {
            "post": {
                "tags": [
                    "Time"
                ],
                "summary": "Validates one or more existing timecapture records for posting.",
                "description": "Validates one or more existing timecapture records for posting.",
                "operationId": "Time_ValidatePostTimecaptureCard",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The ItemId values of the timecards to be validated.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardValidateRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardValidateRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardValidateRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardValidateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardValidateResponse"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/time/pending/validate": {
            "post": {
                "tags": [
                    "Time"
                ],
                "summary": "Validates one or more existing pending timecards.",
                "description": "Validates one or more existing pending timecards.",
                "operationId": "Time_ValidatePendingTimecards",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The Timecardpending.TimePendIndex values of the timecards to be validated.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardValidateRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardValidateRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardValidateRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardValidateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardValidateResponse"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/time/posted/validate": {
            "post": {
                "tags": [
                    "Time"
                ],
                "summary": "Validates one or more existing timecards.",
                "description": "Validates one or more existing timecards.",
                "operationId": "Time_ValidatePostedTimecards",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The Timecard.TimeIndex values of the timecards to be validated.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardValidateRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardValidateRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardValidateRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardValidateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecardValidateResponse"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/time/timer/startstop": {
            "post": {
                "tags": [
                    "Time"
                ],
                "summary": "Starts/stops a timer for a given pending timecard.",
                "description": "Starts/stops a timer for a given pending timecard.",
                "operationId": "Time_StartStopTimer",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.StartStopTimerRequest"
                            },
                            "example": {
                                "today": "string",
                                "timecardIndex": "string"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.StartStopTimerRequest"
                            },
                            "example": {
                                "today": "string",
                                "timecardIndex": "string"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.StartStopTimerRequest"
                            },
                            "example": {
                                "today": "string",
                                "timecardIndex": "string"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.StartStopTimerRequest"
                            },
                            "example": "<E3E.API.Time.Models.StartStopTimerRequest> <today>string</today> <timecardIndex>string</timecardIndex> </E3E.API.Time.Models.StartStopTimerRequest>"
                        },
                        "text/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.StartStopTimerRequest"
                            },
                            "example": "<E3E.API.Time.Models.StartStopTimerRequest> <today>string</today> <timecardIndex>string</timecardIndex> </E3E.API.Time.Models.StartStopTimerRequest>"
                        },
                        "application/*+xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.StartStopTimerRequest"
                            },
                            "example": "<E3E.API.Time.Models.StartStopTimerRequest> <today>string</today> <timecardIndex>string</timecardIndex> </E3E.API.Time.Models.StartStopTimerRequest>"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.StartStopTimerResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.StartStopTimerResponse"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/time/timer/activetimers": {
            "get": {
                "tags": [
                    "Time"
                ],
                "summary": "Gets active timers for a given timekeeper and returns a ActiveTimersResponse.",
                "description": "Gets active timers for a given timekeeper and returns a ActiveTimersResponse.",
                "operationId": "Time_GetActiveTimers",
                "parameters": [
                    {
                        "name": "Index",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "StartDate",
                        "in": "query",
                        "description": "Gets or sets the StartDate (WorkDate).",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "EndDate",
                        "in": "query",
                        "description": "Gets or sets the EndDate (WorkDate).",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "TimekeeperIndex",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "TimekeeperNumber",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "TimekeeperID",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "ItemIds",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "AttributesToInclude",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "FilterXOQL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Filter.Predicates",
                        "in": "query",
                        "description": "Gets or Sets predicates.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicate"
                            }
                        }
                    },
                    {
                        "name": "Filter.Operator",
                        "in": "query",
                        "description": "Gets or Sets the logical operator between the group of E3E.API.Query.SJQL.SJPredicateGroup.Predicates and the E3E.API.Query.SJQL.SJPredicateGroup.Groups.",
                        "schema": {
                            "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJLogicalOperator"
                        }
                    },
                    {
                        "name": "Filter.Groups",
                        "in": "query",
                        "description": "Gets or Sets group of predicates based on a logical operator.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicateGroup"
                            }
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.ActiveTimersResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.ActiveTimersResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/time/model/timecapture": {
            "get": {
                "tags": [
                    "Time"
                ],
                "summary": "Gets TimeCapture models.",
                "description": "Gets TimeCapture models.",
                "operationId": "Time_GetTimeCaptureModels",
                "parameters": [
                    {
                        "name": "ModelId",
                        "in": "query",
                        "description": "Gets or sets the ID of a model.",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.DataObjectModel.Models.DataObjectModelGetResponse"
                                },
                                "example": {
                                    "message": "string",
                                    "success": true,
                                    "models": [
                                        {
                                            "name": "string",
                                            "modelId": "string",
                                            "isGlobal": true,
                                            "canEdit": true
                                        }
                                    ]
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.DataObjectModel.Models.DataObjectModelGetResponse"
                                },
                                "example": {
                                    "message": "string",
                                    "success": true,
                                    "models": [
                                        {
                                            "name": "string",
                                            "modelId": "string",
                                            "isGlobal": true,
                                            "canEdit": true
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Time"
                ],
                "summary": "Creates a TimeCapture model.",
                "description": "Creates a TimeCapture model.",
                "operationId": "Time_CreateTimeCaptureModel",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.DataObjectModel.Models.DataObjectModelCreateRequest"
                            },
                            "example": {
                                "name": "string",
                                "itemId": "string",
                                "isGlobal": true
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.DataObjectModel.Models.DataObjectModelCreateRequest"
                            },
                            "example": {
                                "name": "string",
                                "itemId": "string",
                                "isGlobal": true
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.DataObjectModel.Models.DataObjectModelCreateRequest"
                            },
                            "example": {
                                "name": "string",
                                "itemId": "string",
                                "isGlobal": true
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.DataObjectModel.Models.DataObjectModelCreateRequest"
                            },
                            "example": "<E3E.API.DataObjectModel.Models.DataObjectModelCreateRequest> <name>string</name> <itemId>string</itemId> <isGlobal>true</isGlobal> </E3E.API.DataObjectModel.Models.DataObjectModelCreateRequest>"
                        },
                        "text/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.DataObjectModel.Models.DataObjectModelCreateRequest"
                            },
                            "example": "<E3E.API.DataObjectModel.Models.DataObjectModelCreateRequest> <name>string</name> <itemId>string</itemId> <isGlobal>true</isGlobal> </E3E.API.DataObjectModel.Models.DataObjectModelCreateRequest>"
                        },
                        "application/*+xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.DataObjectModel.Models.DataObjectModelCreateRequest"
                            },
                            "example": "<E3E.API.DataObjectModel.Models.DataObjectModelCreateRequest> <name>string</name> <itemId>string</itemId> <isGlobal>true</isGlobal> </E3E.API.DataObjectModel.Models.DataObjectModelCreateRequest>"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.DataObjectModel.Models.DataObjectModelCreateResponse"
                                },
                                "example": {
                                    "message": "string",
                                    "success": true,
                                    "model": {
                                        "name": "string",
                                        "modelId": "string",
                                        "isGlobal": true,
                                        "canEdit": true
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.DataObjectModel.Models.DataObjectModelCreateResponse"
                                },
                                "example": {
                                    "message": "string",
                                    "success": true,
                                    "model": {
                                        "name": "string",
                                        "modelId": "string",
                                        "isGlobal": true,
                                        "canEdit": true
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "put": {
                "tags": [
                    "Time"
                ],
                "summary": "Applies a TimeCapture model.",
                "description": "Applies a TimeCapture model.",
                "operationId": "Time_ApplyTimeCaptureModel",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecaptureModelApplyRequest"
                            },
                            "example": {
                                "modelId": "string",
                                "timekeeper": 0,
                                "workDate": "string"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecaptureModelApplyRequest"
                            },
                            "example": {
                                "modelId": "string",
                                "timekeeper": 0,
                                "workDate": "string"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecaptureModelApplyRequest"
                            },
                            "example": {
                                "modelId": "string",
                                "timekeeper": 0,
                                "workDate": "string"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecaptureModelApplyRequest"
                            },
                            "example": "<E3E.API.Time.Models.TimecaptureModelApplyRequest> <modelId>string</modelId> <timekeeper>0</timekeeper> <workDate>string</workDate> </E3E.API.Time.Models.TimecaptureModelApplyRequest>"
                        },
                        "text/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecaptureModelApplyRequest"
                            },
                            "example": "<E3E.API.Time.Models.TimecaptureModelApplyRequest> <modelId>string</modelId> <timekeeper>0</timekeeper> <workDate>string</workDate> </E3E.API.Time.Models.TimecaptureModelApplyRequest>"
                        },
                        "application/*+xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecaptureModelApplyRequest"
                            },
                            "example": "<E3E.API.Time.Models.TimecaptureModelApplyRequest> <modelId>string</modelId> <timekeeper>0</timekeeper> <workDate>string</workDate> </E3E.API.Time.Models.TimecaptureModelApplyRequest>"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.DataObjectModel.Models.DataObjectModelApplyResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.DataObjectModel.Models.DataObjectModelApplyResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "patch": {
                "tags": [
                    "Time"
                ],
                "summary": "Updates a TimeCapture model.",
                "description": "Updates a TimeCapture model.",
                "operationId": "Time_UpdateTimeCaptureModel",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.DataObjectModel.Models.DataObjectModelUpdateRequest"
                            },
                            "example": {
                                "modelId": "string",
                                "name": "string",
                                "isGlobal": true
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.DataObjectModel.Models.DataObjectModelUpdateRequest"
                            },
                            "example": {
                                "modelId": "string",
                                "name": "string",
                                "isGlobal": true
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.DataObjectModel.Models.DataObjectModelUpdateRequest"
                            },
                            "example": {
                                "modelId": "string",
                                "name": "string",
                                "isGlobal": true
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.DataObjectModel.Models.DataObjectModelUpdateRequest"
                            },
                            "example": "<E3E.API.DataObjectModel.Models.DataObjectModelUpdateRequest> <modelId>string</modelId> <name>string</name> <isGlobal>true</isGlobal> </E3E.API.DataObjectModel.Models.DataObjectModelUpdateRequest>"
                        },
                        "text/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.DataObjectModel.Models.DataObjectModelUpdateRequest"
                            },
                            "example": "<E3E.API.DataObjectModel.Models.DataObjectModelUpdateRequest> <modelId>string</modelId> <name>string</name> <isGlobal>true</isGlobal> </E3E.API.DataObjectModel.Models.DataObjectModelUpdateRequest>"
                        },
                        "application/*+xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.DataObjectModel.Models.DataObjectModelUpdateRequest"
                            },
                            "example": "<E3E.API.DataObjectModel.Models.DataObjectModelUpdateRequest> <modelId>string</modelId> <name>string</name> <isGlobal>true</isGlobal> </E3E.API.DataObjectModel.Models.DataObjectModelUpdateRequest>"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.DataObjectModel.Models.DataObjectModelUpdateResponse"
                                },
                                "example": {
                                    "message": "string",
                                    "success": true,
                                    "model": {
                                        "name": "string",
                                        "modelId": "string",
                                        "isGlobal": true,
                                        "canEdit": true
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.DataObjectModel.Models.DataObjectModelUpdateResponse"
                                },
                                "example": {
                                    "message": "string",
                                    "success": true,
                                    "model": {
                                        "name": "string",
                                        "modelId": "string",
                                        "isGlobal": true,
                                        "canEdit": true
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Time"
                ],
                "summary": "Deletes a TimeCapture model.",
                "description": "Deletes a TimeCapture model.",
                "operationId": "Time_DeleteTimeCaptureModel",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.DataObjectModel.Models.DataObjectModelDeleteRequest"
                            },
                            "example": {
                                "modelId": "string"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.DataObjectModel.Models.DataObjectModelDeleteRequest"
                            },
                            "example": {
                                "modelId": "string"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.DataObjectModel.Models.DataObjectModelDeleteRequest"
                            },
                            "example": {
                                "modelId": "string"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.DataObjectModel.Models.DataObjectModelDeleteRequest"
                            },
                            "example": "<E3E.API.DataObjectModel.Models.DataObjectModelDeleteRequest> <modelId>string</modelId> </E3E.API.DataObjectModel.Models.DataObjectModelDeleteRequest>"
                        },
                        "text/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.DataObjectModel.Models.DataObjectModelDeleteRequest"
                            },
                            "example": "<E3E.API.DataObjectModel.Models.DataObjectModelDeleteRequest> <modelId>string</modelId> </E3E.API.DataObjectModel.Models.DataObjectModelDeleteRequest>"
                        },
                        "application/*+xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.DataObjectModel.Models.DataObjectModelDeleteRequest"
                            },
                            "example": "<E3E.API.DataObjectModel.Models.DataObjectModelDeleteRequest> <modelId>string</modelId> </E3E.API.DataObjectModel.Models.DataObjectModelDeleteRequest>"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.DataObjectModel.Models.DataObjectModelDeleteResponse"
                                },
                                "example": {
                                    "message": "string",
                                    "success": true
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.DataObjectModel.Models.DataObjectModelDeleteResponse"
                                },
                                "example": {
                                    "message": "string",
                                    "success": true
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/time/weeklyview": {
            "get": {
                "tags": [
                    "Time"
                ],
                "summary": "Gets pending and posted timecards grouped for display in weekly view.",
                "description": "The following attributes are always returned by default (in addition to anything specified in AttributesToInclude):\r\nWorkDate, TimePendIndex, TimeIndex, WorkHrs, IsNB, IsNoCharge, WorkType, TimeType, Office, Matter, Phase, Task, Activity, IsFlatFeeComplete, Phase2, Task2, Activity2.",
                "operationId": "Time_GetTimecardsGroupedByDay",
                "parameters": [
                    {
                        "name": "StartDate",
                        "in": "query",
                        "description": "Gets or sets the StartDate.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "EndDate",
                        "in": "query",
                        "description": "Gets or sets the EndDate.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "LastDays",
                        "in": "query",
                        "description": "Gets or sets the LastDays.",
                        "schema": {
                            "maximum": 2147483647,
                            "minimum": 0,
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "TimekeeperIndex",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "TimekeeperNumber",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "TimekeeperID",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "MattIndex",
                        "in": "query",
                        "description": "Gets or sets the MattIndex.",
                        "schema": {
                            "maximum": 2147483647,
                            "minimum": 0,
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "ClientIndex",
                        "in": "query",
                        "description": "Gets or sets the ClientIndex.",
                        "schema": {
                            "maximum": 2147483647,
                            "minimum": 0,
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "AttributesToInclude",
                        "in": "query",
                        "description": "Gets or sets a collection of attributes that should be returned with the response.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.TimeWeeklyView.Models.TimeWeeklyViewGetResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.TimeWeeklyView.Models.TimeWeeklyViewGetResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/timekeeper": {
            "get": {
                "tags": [
                    "Timekeeper"
                ],
                "summary": "Gets Timekeepers and returns a TimekeeperGetResponse.",
                "description": "Gets Timekeepers and returns a TimekeeperGetResponse.",
                "operationId": "Timekeeper_GetTimekeepers",
                "parameters": [
                    {
                        "name": "TimekeeperId",
                        "in": "query",
                        "description": "Gets or sets the TimekeeperIds.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "TimekeeperIndex",
                        "in": "query",
                        "description": "Gets or sets the TimekeeperIndex.",
                        "schema": {
                            "maximum": 2147483647,
                            "minimum": 0,
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Number",
                        "in": "query",
                        "description": "Gets or sets the Number (Timekeeper Alias).",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "AdvancedFilter.ChildObjectsToInclude",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.AttributesToInclude",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.FilterXOQL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Predicates",
                        "in": "query",
                        "description": "Gets or Sets predicates.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicate"
                            }
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Operator",
                        "in": "query",
                        "description": "Gets or Sets the logical operator between the group of E3E.API.Query.SJQL.SJPredicateGroup.Predicates and the E3E.API.Query.SJQL.SJPredicateGroup.Groups.",
                        "schema": {
                            "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJLogicalOperator"
                        }
                    },
                    {
                        "name": "AdvancedFilter.Filter.Groups",
                        "in": "query",
                        "description": "Gets or Sets group of predicates based on a logical operator.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicateGroup"
                            }
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Timekeeper.Models.TimekeeperGetResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Timekeeper.Models.TimekeeperGetResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Timekeeper"
                ],
                "summary": "Creates a new Timekeeper.",
                "description": "Creates a new Timekeeper.",
                "operationId": "Timekeeper_CreateTimekeeper",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Timekeeper.Models.TimekeeperCreateRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Timekeeper.Models.TimekeeperCreateRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Timekeeper.Models.TimekeeperCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Timekeeper.Models.TimekeeperCreateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Timekeeper.Models.TimekeeperCreateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            },
            "patch": {
                "tags": [
                    "Timekeeper"
                ],
                "summary": "Updates a Timekeeper.",
                "description": "Updates a Timekeeper.",
                "operationId": "Timekeeper_UpdateTimekeeper",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Timekeeper.Models.TimekeeperUpdateRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Timekeeper.Models.TimekeeperUpdateRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Timekeeper.Models.TimekeeperUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Timekeeper.Models.TimekeeperUpdateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Timekeeper.Models.TimekeeperUpdateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/timekeeper/schema": {
            "get": {
                "tags": [
                    "Timekeeper"
                ],
                "summary": "Gets the schema for Timekeeper.",
                "description": "Gets the schema for Timekeeper.",
                "operationId": "Timekeeper_GetTimekeeperSchema",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Timekeeper.Models.TimekeeperGetSchemaResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Timekeeper.Models.TimekeeperGetSchemaResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/timekeeper/template": {
            "get": {
                "tags": [
                    "Timekeeper"
                ],
                "summary": "Gets a new Timekeeper with default values.",
                "description": "This method does not launch a process or add any data in 3E.\r\nIt is intended to be used with CreateTimekeeper.\r\ne.g. call this method, then set whichever attributes need to be changed and then call CreateTimekeeper with the modified data.",
                "operationId": "Timekeeper_GetNewTimekeeper",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Timekeeper.Models.TimekeeperTemplateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Timekeeper.Models.TimekeeperTemplateResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/timekeeper/modelfrom": {
            "get": {
                "tags": [
                    "Timekeeper"
                ],
                "summary": "Gets cloned Timekeepers and returns a TimekeeperGetResponse.",
                "description": "Gets cloned Timekeepers and returns a TimekeeperGetResponse.",
                "operationId": "Timekeeper_ModelFromTimekeepers",
                "parameters": [
                    {
                        "name": "ItemId",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Timekeeper.Models.TimekeeperGetResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Timekeeper.Models.TimekeeperGetResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/timekeeper/validate": {
            "post": {
                "tags": [
                    "Timekeeper"
                ],
                "summary": "Validates one or more existing Timekeepers.",
                "description": "Validates one or more existing Timekeepers.",
                "operationId": "Timekeeper_ValidateTimekeepers",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The Timekeeper.MattIndex values of the Timekeepers to be validated.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Timekeeper.Models.TimekeeperValidateRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Timekeeper.Models.TimekeeperValidateRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Timekeeper.Models.TimekeeperValidateRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Timekeeper.Models.TimekeeperValidateResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Timekeeper.Models.TimekeeperValidateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/wall/{index}": {
            "get": {
                "tags": [
                    "Wall"
                ],
                "summary": "Returns a specific wall.",
                "description": "Returns a specific wall.",
                "operationId": "Wall_GetWall",
                "parameters": [
                    {
                        "name": "index",
                        "in": "path",
                        "description": "The wall index.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.DataSecurity.Models.Wall"
                                },
                                "example": {
                                    "index": 0,
                                    "name": "string",
                                    "description": "string",
                                    "wallType": 0,
                                    "primaryContact": {
                                        "isDeleted": true,
                                        "error": "string",
                                        "userId": "string",
                                        "userName": "string",
                                        "userType": "string"
                                    },
                                    "errors": [
                                        "string"
                                    ],
                                    "users": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "userId": "string",
                                            "userName": "string",
                                            "userType": "string"
                                        }
                                    ],
                                    "matters": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "mattIndex": 0,
                                            "number": "string",
                                            "displayName": "string"
                                        }
                                    ],
                                    "clients": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "clientIndex": 0,
                                            "number": "string",
                                            "displayName": "string"
                                        }
                                    ],
                                    "entities": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "entIndex": 0,
                                            "displayName": "string"
                                        }
                                    ],
                                    "vendors": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "vendorIndex": 0,
                                            "vendorNum": "string",
                                            "name": "string"
                                        }
                                    ],
                                    "payors": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "payorIndex": 0,
                                            "displayName": "string"
                                        }
                                    ],
                                    "timekeepers": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "tkprIndex": 0,
                                            "number": "string",
                                            "displayName": "string"
                                        }
                                    ],
                                    "clientPredicates": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "id": "string",
                                            "cliType": "string",
                                            "cliCategory": "string",
                                            "cliAttribute": "string",
                                            "office": "string"
                                        }
                                    ],
                                    "matterPredicates": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "id": "string",
                                            "matterType": "string",
                                            "mattCategory": "string",
                                            "mattAttribute": "string",
                                            "billingOffice": "string",
                                            "spvTkpr": 0,
                                            "department": "string",
                                            "section": "string",
                                            "practiceGroup": "string",
                                            "tkprTeam": "string"
                                        }
                                    ]
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.DataSecurity.Models.Wall"
                                },
                                "example": {
                                    "index": 0,
                                    "name": "string",
                                    "description": "string",
                                    "wallType": 0,
                                    "primaryContact": {
                                        "isDeleted": true,
                                        "error": "string",
                                        "userId": "string",
                                        "userName": "string",
                                        "userType": "string"
                                    },
                                    "errors": [
                                        "string"
                                    ],
                                    "users": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "userId": "string",
                                            "userName": "string",
                                            "userType": "string"
                                        }
                                    ],
                                    "matters": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "mattIndex": 0,
                                            "number": "string",
                                            "displayName": "string"
                                        }
                                    ],
                                    "clients": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "clientIndex": 0,
                                            "number": "string",
                                            "displayName": "string"
                                        }
                                    ],
                                    "entities": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "entIndex": 0,
                                            "displayName": "string"
                                        }
                                    ],
                                    "vendors": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "vendorIndex": 0,
                                            "vendorNum": "string",
                                            "name": "string"
                                        }
                                    ],
                                    "payors": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "payorIndex": 0,
                                            "displayName": "string"
                                        }
                                    ],
                                    "timekeepers": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "tkprIndex": 0,
                                            "number": "string",
                                            "displayName": "string"
                                        }
                                    ],
                                    "clientPredicates": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "id": "string",
                                            "cliType": "string",
                                            "cliCategory": "string",
                                            "cliAttribute": "string",
                                            "office": "string"
                                        }
                                    ],
                                    "matterPredicates": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "id": "string",
                                            "matterType": "string",
                                            "mattCategory": "string",
                                            "mattAttribute": "string",
                                            "billingOffice": "string",
                                            "spvTkpr": 0,
                                            "department": "string",
                                            "section": "string",
                                            "practiceGroup": "string",
                                            "tkprTeam": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "501": {
                        "description": "Not Implemented"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Wall"
                ],
                "summary": "Updates a specific wall.",
                "description": "Updates a specific wall.",
                "operationId": "Wall_UpdateWall",
                "parameters": [
                    {
                        "name": "index",
                        "in": "path",
                        "description": "The wall index.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The wall diff.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.DataSecurity.Models.Wall"
                            },
                            "example": {
                                "index": 0,
                                "name": "string",
                                "description": "string",
                                "wallType": 0,
                                "primaryContact": {
                                    "isDeleted": true,
                                    "error": "string",
                                    "userId": "string",
                                    "userName": "string",
                                    "userType": "string"
                                },
                                "errors": [
                                    "string"
                                ],
                                "users": [
                                    {
                                        "isDeleted": true,
                                        "error": "string",
                                        "userId": "string",
                                        "userName": "string",
                                        "userType": "string"
                                    }
                                ],
                                "matters": [
                                    {
                                        "isDeleted": true,
                                        "error": "string",
                                        "mattIndex": 0,
                                        "number": "string",
                                        "displayName": "string"
                                    }
                                ],
                                "clients": [
                                    {
                                        "isDeleted": true,
                                        "error": "string",
                                        "clientIndex": 0,
                                        "number": "string",
                                        "displayName": "string"
                                    }
                                ],
                                "entities": [
                                    {
                                        "isDeleted": true,
                                        "error": "string",
                                        "entIndex": 0,
                                        "displayName": "string"
                                    }
                                ],
                                "vendors": [
                                    {
                                        "isDeleted": true,
                                        "error": "string",
                                        "vendorIndex": 0,
                                        "vendorNum": "string",
                                        "name": "string"
                                    }
                                ],
                                "payors": [
                                    {
                                        "isDeleted": true,
                                        "error": "string",
                                        "payorIndex": 0,
                                        "displayName": "string"
                                    }
                                ],
                                "timekeepers": [
                                    {
                                        "isDeleted": true,
                                        "error": "string",
                                        "tkprIndex": 0,
                                        "number": "string",
                                        "displayName": "string"
                                    }
                                ],
                                "clientPredicates": [
                                    {
                                        "isDeleted": true,
                                        "error": "string",
                                        "id": "string",
                                        "cliType": "string",
                                        "cliCategory": "string",
                                        "cliAttribute": "string",
                                        "office": "string"
                                    }
                                ],
                                "matterPredicates": [
                                    {
                                        "isDeleted": true,
                                        "error": "string",
                                        "id": "string",
                                        "matterType": "string",
                                        "mattCategory": "string",
                                        "mattAttribute": "string",
                                        "billingOffice": "string",
                                        "spvTkpr": 0,
                                        "department": "string",
                                        "section": "string",
                                        "practiceGroup": "string",
                                        "tkprTeam": "string"
                                    }
                                ]
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.DataSecurity.Models.Wall"
                            },
                            "example": {
                                "index": 0,
                                "name": "string",
                                "description": "string",
                                "wallType": 0,
                                "primaryContact": {
                                    "isDeleted": true,
                                    "error": "string",
                                    "userId": "string",
                                    "userName": "string",
                                    "userType": "string"
                                },
                                "errors": [
                                    "string"
                                ],
                                "users": [
                                    {
                                        "isDeleted": true,
                                        "error": "string",
                                        "userId": "string",
                                        "userName": "string",
                                        "userType": "string"
                                    }
                                ],
                                "matters": [
                                    {
                                        "isDeleted": true,
                                        "error": "string",
                                        "mattIndex": 0,
                                        "number": "string",
                                        "displayName": "string"
                                    }
                                ],
                                "clients": [
                                    {
                                        "isDeleted": true,
                                        "error": "string",
                                        "clientIndex": 0,
                                        "number": "string",
                                        "displayName": "string"
                                    }
                                ],
                                "entities": [
                                    {
                                        "isDeleted": true,
                                        "error": "string",
                                        "entIndex": 0,
                                        "displayName": "string"
                                    }
                                ],
                                "vendors": [
                                    {
                                        "isDeleted": true,
                                        "error": "string",
                                        "vendorIndex": 0,
                                        "vendorNum": "string",
                                        "name": "string"
                                    }
                                ],
                                "payors": [
                                    {
                                        "isDeleted": true,
                                        "error": "string",
                                        "payorIndex": 0,
                                        "displayName": "string"
                                    }
                                ],
                                "timekeepers": [
                                    {
                                        "isDeleted": true,
                                        "error": "string",
                                        "tkprIndex": 0,
                                        "number": "string",
                                        "displayName": "string"
                                    }
                                ],
                                "clientPredicates": [
                                    {
                                        "isDeleted": true,
                                        "error": "string",
                                        "id": "string",
                                        "cliType": "string",
                                        "cliCategory": "string",
                                        "cliAttribute": "string",
                                        "office": "string"
                                    }
                                ],
                                "matterPredicates": [
                                    {
                                        "isDeleted": true,
                                        "error": "string",
                                        "id": "string",
                                        "matterType": "string",
                                        "mattCategory": "string",
                                        "mattAttribute": "string",
                                        "billingOffice": "string",
                                        "spvTkpr": 0,
                                        "department": "string",
                                        "section": "string",
                                        "practiceGroup": "string",
                                        "tkprTeam": "string"
                                    }
                                ]
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.DataSecurity.Models.Wall"
                            },
                            "example": {
                                "index": 0,
                                "name": "string",
                                "description": "string",
                                "wallType": 0,
                                "primaryContact": {
                                    "isDeleted": true,
                                    "error": "string",
                                    "userId": "string",
                                    "userName": "string",
                                    "userType": "string"
                                },
                                "errors": [
                                    "string"
                                ],
                                "users": [
                                    {
                                        "isDeleted": true,
                                        "error": "string",
                                        "userId": "string",
                                        "userName": "string",
                                        "userType": "string"
                                    }
                                ],
                                "matters": [
                                    {
                                        "isDeleted": true,
                                        "error": "string",
                                        "mattIndex": 0,
                                        "number": "string",
                                        "displayName": "string"
                                    }
                                ],
                                "clients": [
                                    {
                                        "isDeleted": true,
                                        "error": "string",
                                        "clientIndex": 0,
                                        "number": "string",
                                        "displayName": "string"
                                    }
                                ],
                                "entities": [
                                    {
                                        "isDeleted": true,
                                        "error": "string",
                                        "entIndex": 0,
                                        "displayName": "string"
                                    }
                                ],
                                "vendors": [
                                    {
                                        "isDeleted": true,
                                        "error": "string",
                                        "vendorIndex": 0,
                                        "vendorNum": "string",
                                        "name": "string"
                                    }
                                ],
                                "payors": [
                                    {
                                        "isDeleted": true,
                                        "error": "string",
                                        "payorIndex": 0,
                                        "displayName": "string"
                                    }
                                ],
                                "timekeepers": [
                                    {
                                        "isDeleted": true,
                                        "error": "string",
                                        "tkprIndex": 0,
                                        "number": "string",
                                        "displayName": "string"
                                    }
                                ],
                                "clientPredicates": [
                                    {
                                        "isDeleted": true,
                                        "error": "string",
                                        "id": "string",
                                        "cliType": "string",
                                        "cliCategory": "string",
                                        "cliAttribute": "string",
                                        "office": "string"
                                    }
                                ],
                                "matterPredicates": [
                                    {
                                        "isDeleted": true,
                                        "error": "string",
                                        "id": "string",
                                        "matterType": "string",
                                        "mattCategory": "string",
                                        "mattAttribute": "string",
                                        "billingOffice": "string",
                                        "spvTkpr": 0,
                                        "department": "string",
                                        "section": "string",
                                        "practiceGroup": "string",
                                        "tkprTeam": "string"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.DataSecurity.Models.WallResult"
                                },
                                "example": {
                                    "success": true,
                                    "message": "string",
                                    "data": [
                                        {
                                            "index": 0,
                                            "name": "string",
                                            "description": "string",
                                            "wallType": 0,
                                            "primaryContact": {
                                                "isDeleted": true,
                                                "error": "string",
                                                "userId": "string",
                                                "userName": "string",
                                                "userType": "string"
                                            },
                                            "errors": [
                                                "string"
                                            ],
                                            "users": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "userId": "string",
                                                    "userName": "string",
                                                    "userType": "string"
                                                }
                                            ],
                                            "matters": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "mattIndex": 0,
                                                    "number": "string",
                                                    "displayName": "string"
                                                }
                                            ],
                                            "clients": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "clientIndex": 0,
                                                    "number": "string",
                                                    "displayName": "string"
                                                }
                                            ],
                                            "entities": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "entIndex": 0,
                                                    "displayName": "string"
                                                }
                                            ],
                                            "vendors": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "vendorIndex": 0,
                                                    "vendorNum": "string",
                                                    "name": "string"
                                                }
                                            ],
                                            "payors": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "payorIndex": 0,
                                                    "displayName": "string"
                                                }
                                            ],
                                            "timekeepers": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "tkprIndex": 0,
                                                    "number": "string",
                                                    "displayName": "string"
                                                }
                                            ],
                                            "clientPredicates": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "id": "string",
                                                    "cliType": "string",
                                                    "cliCategory": "string",
                                                    "cliAttribute": "string",
                                                    "office": "string"
                                                }
                                            ],
                                            "matterPredicates": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "id": "string",
                                                    "matterType": "string",
                                                    "mattCategory": "string",
                                                    "mattAttribute": "string",
                                                    "billingOffice": "string",
                                                    "spvTkpr": 0,
                                                    "department": "string",
                                                    "section": "string",
                                                    "practiceGroup": "string",
                                                    "tkprTeam": "string"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.DataSecurity.Models.WallResult"
                                },
                                "example": {
                                    "success": true,
                                    "message": "string",
                                    "data": [
                                        {
                                            "index": 0,
                                            "name": "string",
                                            "description": "string",
                                            "wallType": 0,
                                            "primaryContact": {
                                                "isDeleted": true,
                                                "error": "string",
                                                "userId": "string",
                                                "userName": "string",
                                                "userType": "string"
                                            },
                                            "errors": [
                                                "string"
                                            ],
                                            "users": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "userId": "string",
                                                    "userName": "string",
                                                    "userType": "string"
                                                }
                                            ],
                                            "matters": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "mattIndex": 0,
                                                    "number": "string",
                                                    "displayName": "string"
                                                }
                                            ],
                                            "clients": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "clientIndex": 0,
                                                    "number": "string",
                                                    "displayName": "string"
                                                }
                                            ],
                                            "entities": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "entIndex": 0,
                                                    "displayName": "string"
                                                }
                                            ],
                                            "vendors": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "vendorIndex": 0,
                                                    "vendorNum": "string",
                                                    "name": "string"
                                                }
                                            ],
                                            "payors": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "payorIndex": 0,
                                                    "displayName": "string"
                                                }
                                            ],
                                            "timekeepers": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "tkprIndex": 0,
                                                    "number": "string",
                                                    "displayName": "string"
                                                }
                                            ],
                                            "clientPredicates": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "id": "string",
                                                    "cliType": "string",
                                                    "cliCategory": "string",
                                                    "cliAttribute": "string",
                                                    "office": "string"
                                                }
                                            ],
                                            "matterPredicates": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "id": "string",
                                                    "matterType": "string",
                                                    "mattCategory": "string",
                                                    "mattAttribute": "string",
                                                    "billingOffice": "string",
                                                    "spvTkpr": 0,
                                                    "department": "string",
                                                    "section": "string",
                                                    "practiceGroup": "string",
                                                    "tkprTeam": "string"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.DataSecurity.Models.WallResult"
                                },
                                "example": {
                                    "success": true,
                                    "message": "string",
                                    "data": [
                                        {
                                            "index": 0,
                                            "name": "string",
                                            "description": "string",
                                            "wallType": 0,
                                            "primaryContact": {
                                                "isDeleted": true,
                                                "error": "string",
                                                "userId": "string",
                                                "userName": "string",
                                                "userType": "string"
                                            },
                                            "errors": [
                                                "string"
                                            ],
                                            "users": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "userId": "string",
                                                    "userName": "string",
                                                    "userType": "string"
                                                }
                                            ],
                                            "matters": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "mattIndex": 0,
                                                    "number": "string",
                                                    "displayName": "string"
                                                }
                                            ],
                                            "clients": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "clientIndex": 0,
                                                    "number": "string",
                                                    "displayName": "string"
                                                }
                                            ],
                                            "entities": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "entIndex": 0,
                                                    "displayName": "string"
                                                }
                                            ],
                                            "vendors": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "vendorIndex": 0,
                                                    "vendorNum": "string",
                                                    "name": "string"
                                                }
                                            ],
                                            "payors": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "payorIndex": 0,
                                                    "displayName": "string"
                                                }
                                            ],
                                            "timekeepers": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "tkprIndex": 0,
                                                    "number": "string",
                                                    "displayName": "string"
                                                }
                                            ],
                                            "clientPredicates": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "id": "string",
                                                    "cliType": "string",
                                                    "cliCategory": "string",
                                                    "cliAttribute": "string",
                                                    "office": "string"
                                                }
                                            ],
                                            "matterPredicates": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "id": "string",
                                                    "matterType": "string",
                                                    "mattCategory": "string",
                                                    "mattAttribute": "string",
                                                    "billingOffice": "string",
                                                    "spvTkpr": 0,
                                                    "department": "string",
                                                    "section": "string",
                                                    "practiceGroup": "string",
                                                    "tkprTeam": "string"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.DataSecurity.Models.WallResult"
                                },
                                "example": {
                                    "success": true,
                                    "message": "string",
                                    "data": [
                                        {
                                            "index": 0,
                                            "name": "string",
                                            "description": "string",
                                            "wallType": 0,
                                            "primaryContact": {
                                                "isDeleted": true,
                                                "error": "string",
                                                "userId": "string",
                                                "userName": "string",
                                                "userType": "string"
                                            },
                                            "errors": [
                                                "string"
                                            ],
                                            "users": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "userId": "string",
                                                    "userName": "string",
                                                    "userType": "string"
                                                }
                                            ],
                                            "matters": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "mattIndex": 0,
                                                    "number": "string",
                                                    "displayName": "string"
                                                }
                                            ],
                                            "clients": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "clientIndex": 0,
                                                    "number": "string",
                                                    "displayName": "string"
                                                }
                                            ],
                                            "entities": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "entIndex": 0,
                                                    "displayName": "string"
                                                }
                                            ],
                                            "vendors": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "vendorIndex": 0,
                                                    "vendorNum": "string",
                                                    "name": "string"
                                                }
                                            ],
                                            "payors": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "payorIndex": 0,
                                                    "displayName": "string"
                                                }
                                            ],
                                            "timekeepers": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "tkprIndex": 0,
                                                    "number": "string",
                                                    "displayName": "string"
                                                }
                                            ],
                                            "clientPredicates": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "id": "string",
                                                    "cliType": "string",
                                                    "cliCategory": "string",
                                                    "cliAttribute": "string",
                                                    "office": "string"
                                                }
                                            ],
                                            "matterPredicates": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "id": "string",
                                                    "matterType": "string",
                                                    "mattCategory": "string",
                                                    "mattAttribute": "string",
                                                    "billingOffice": "string",
                                                    "spvTkpr": 0,
                                                    "department": "string",
                                                    "section": "string",
                                                    "practiceGroup": "string",
                                                    "tkprTeam": "string"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "501": {
                        "description": "Not Implemented"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Wall"
                ],
                "summary": "Deletes a specific wall.",
                "description": "Deletes a specific wall.",
                "operationId": "Wall_DeleteWall",
                "parameters": [
                    {
                        "name": "index",
                        "in": "path",
                        "description": "The wall index.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.DataSecurity.Models.WallResult"
                                },
                                "example": {
                                    "success": true,
                                    "message": "string",
                                    "data": [
                                        {
                                            "index": 0,
                                            "name": "string",
                                            "description": "string",
                                            "wallType": 0,
                                            "primaryContact": {
                                                "isDeleted": true,
                                                "error": "string",
                                                "userId": "string",
                                                "userName": "string",
                                                "userType": "string"
                                            },
                                            "errors": [
                                                "string"
                                            ],
                                            "users": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "userId": "string",
                                                    "userName": "string",
                                                    "userType": "string"
                                                }
                                            ],
                                            "matters": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "mattIndex": 0,
                                                    "number": "string",
                                                    "displayName": "string"
                                                }
                                            ],
                                            "clients": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "clientIndex": 0,
                                                    "number": "string",
                                                    "displayName": "string"
                                                }
                                            ],
                                            "entities": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "entIndex": 0,
                                                    "displayName": "string"
                                                }
                                            ],
                                            "vendors": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "vendorIndex": 0,
                                                    "vendorNum": "string",
                                                    "name": "string"
                                                }
                                            ],
                                            "payors": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "payorIndex": 0,
                                                    "displayName": "string"
                                                }
                                            ],
                                            "timekeepers": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "tkprIndex": 0,
                                                    "number": "string",
                                                    "displayName": "string"
                                                }
                                            ],
                                            "clientPredicates": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "id": "string",
                                                    "cliType": "string",
                                                    "cliCategory": "string",
                                                    "cliAttribute": "string",
                                                    "office": "string"
                                                }
                                            ],
                                            "matterPredicates": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "id": "string",
                                                    "matterType": "string",
                                                    "mattCategory": "string",
                                                    "mattAttribute": "string",
                                                    "billingOffice": "string",
                                                    "spvTkpr": 0,
                                                    "department": "string",
                                                    "section": "string",
                                                    "practiceGroup": "string",
                                                    "tkprTeam": "string"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.DataSecurity.Models.WallResult"
                                },
                                "example": {
                                    "success": true,
                                    "message": "string",
                                    "data": [
                                        {
                                            "index": 0,
                                            "name": "string",
                                            "description": "string",
                                            "wallType": 0,
                                            "primaryContact": {
                                                "isDeleted": true,
                                                "error": "string",
                                                "userId": "string",
                                                "userName": "string",
                                                "userType": "string"
                                            },
                                            "errors": [
                                                "string"
                                            ],
                                            "users": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "userId": "string",
                                                    "userName": "string",
                                                    "userType": "string"
                                                }
                                            ],
                                            "matters": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "mattIndex": 0,
                                                    "number": "string",
                                                    "displayName": "string"
                                                }
                                            ],
                                            "clients": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "clientIndex": 0,
                                                    "number": "string",
                                                    "displayName": "string"
                                                }
                                            ],
                                            "entities": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "entIndex": 0,
                                                    "displayName": "string"
                                                }
                                            ],
                                            "vendors": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "vendorIndex": 0,
                                                    "vendorNum": "string",
                                                    "name": "string"
                                                }
                                            ],
                                            "payors": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "payorIndex": 0,
                                                    "displayName": "string"
                                                }
                                            ],
                                            "timekeepers": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "tkprIndex": 0,
                                                    "number": "string",
                                                    "displayName": "string"
                                                }
                                            ],
                                            "clientPredicates": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "id": "string",
                                                    "cliType": "string",
                                                    "cliCategory": "string",
                                                    "cliAttribute": "string",
                                                    "office": "string"
                                                }
                                            ],
                                            "matterPredicates": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "id": "string",
                                                    "matterType": "string",
                                                    "mattCategory": "string",
                                                    "mattAttribute": "string",
                                                    "billingOffice": "string",
                                                    "spvTkpr": 0,
                                                    "department": "string",
                                                    "section": "string",
                                                    "practiceGroup": "string",
                                                    "tkprTeam": "string"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.DataSecurity.Models.WallResult"
                                },
                                "example": {
                                    "success": true,
                                    "message": "string",
                                    "data": [
                                        {
                                            "index": 0,
                                            "name": "string",
                                            "description": "string",
                                            "wallType": 0,
                                            "primaryContact": {
                                                "isDeleted": true,
                                                "error": "string",
                                                "userId": "string",
                                                "userName": "string",
                                                "userType": "string"
                                            },
                                            "errors": [
                                                "string"
                                            ],
                                            "users": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "userId": "string",
                                                    "userName": "string",
                                                    "userType": "string"
                                                }
                                            ],
                                            "matters": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "mattIndex": 0,
                                                    "number": "string",
                                                    "displayName": "string"
                                                }
                                            ],
                                            "clients": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "clientIndex": 0,
                                                    "number": "string",
                                                    "displayName": "string"
                                                }
                                            ],
                                            "entities": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "entIndex": 0,
                                                    "displayName": "string"
                                                }
                                            ],
                                            "vendors": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "vendorIndex": 0,
                                                    "vendorNum": "string",
                                                    "name": "string"
                                                }
                                            ],
                                            "payors": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "payorIndex": 0,
                                                    "displayName": "string"
                                                }
                                            ],
                                            "timekeepers": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "tkprIndex": 0,
                                                    "number": "string",
                                                    "displayName": "string"
                                                }
                                            ],
                                            "clientPredicates": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "id": "string",
                                                    "cliType": "string",
                                                    "cliCategory": "string",
                                                    "cliAttribute": "string",
                                                    "office": "string"
                                                }
                                            ],
                                            "matterPredicates": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "id": "string",
                                                    "matterType": "string",
                                                    "mattCategory": "string",
                                                    "mattAttribute": "string",
                                                    "billingOffice": "string",
                                                    "spvTkpr": 0,
                                                    "department": "string",
                                                    "section": "string",
                                                    "practiceGroup": "string",
                                                    "tkprTeam": "string"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.DataSecurity.Models.WallResult"
                                },
                                "example": {
                                    "success": true,
                                    "message": "string",
                                    "data": [
                                        {
                                            "index": 0,
                                            "name": "string",
                                            "description": "string",
                                            "wallType": 0,
                                            "primaryContact": {
                                                "isDeleted": true,
                                                "error": "string",
                                                "userId": "string",
                                                "userName": "string",
                                                "userType": "string"
                                            },
                                            "errors": [
                                                "string"
                                            ],
                                            "users": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "userId": "string",
                                                    "userName": "string",
                                                    "userType": "string"
                                                }
                                            ],
                                            "matters": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "mattIndex": 0,
                                                    "number": "string",
                                                    "displayName": "string"
                                                }
                                            ],
                                            "clients": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "clientIndex": 0,
                                                    "number": "string",
                                                    "displayName": "string"
                                                }
                                            ],
                                            "entities": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "entIndex": 0,
                                                    "displayName": "string"
                                                }
                                            ],
                                            "vendors": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "vendorIndex": 0,
                                                    "vendorNum": "string",
                                                    "name": "string"
                                                }
                                            ],
                                            "payors": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "payorIndex": 0,
                                                    "displayName": "string"
                                                }
                                            ],
                                            "timekeepers": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "tkprIndex": 0,
                                                    "number": "string",
                                                    "displayName": "string"
                                                }
                                            ],
                                            "clientPredicates": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "id": "string",
                                                    "cliType": "string",
                                                    "cliCategory": "string",
                                                    "cliAttribute": "string",
                                                    "office": "string"
                                                }
                                            ],
                                            "matterPredicates": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "id": "string",
                                                    "matterType": "string",
                                                    "mattCategory": "string",
                                                    "mattAttribute": "string",
                                                    "billingOffice": "string",
                                                    "spvTkpr": 0,
                                                    "department": "string",
                                                    "section": "string",
                                                    "practiceGroup": "string",
                                                    "tkprTeam": "string"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "501": {
                        "description": "Not Implemented"
                    }
                }
            }
        },
        "/wall": {
            "get": {
                "tags": [
                    "Wall"
                ],
                "summary": "Returns walls.",
                "description": "Returns walls.",
                "operationId": "Wall_GetWalls",
                "parameters": [
                    {
                        "name": "Top",
                        "in": "query",
                        "description": "Gets or sets the maximun number of walls to be returned.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Expand",
                        "in": "query",
                        "description": "Gets or sets a value indicating whether nested children collections should be returned with a wall.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "WallName",
                        "in": "query",
                        "description": "Gets or sets the wall name.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "WallType",
                        "in": "query",
                        "description": "Gets or sets the wall type.",
                        "schema": {
                            "$ref": "#/components/schemas/E3E.API.DataSecurity.Models.WallType"
                        }
                    },
                    {
                        "name": "PrimaryContact",
                        "in": "query",
                        "description": "Gets or sets the wall's primary concact user \\ group name.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Matter",
                        "in": "query",
                        "description": "Gets or sets the matter index.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Client",
                        "in": "query",
                        "description": "Gets or sets the client index.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Timekeeper",
                        "in": "query",
                        "description": "Gets or sets the timekeeper index.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Payor",
                        "in": "query",
                        "description": "Gets or sets the payor index.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Vendor",
                        "in": "query",
                        "description": "Gets or sets the vendor index.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Entity",
                        "in": "query",
                        "description": "Gets or sets the entity index.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "User",
                        "in": "query",
                        "description": "Gets or sets the wall user.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ModifiedAfter",
                        "in": "query",
                        "description": "Gets or sets the min date the wall was modified.",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "StartIndex",
                        "in": "query",
                        "description": "Gets or sets the min index of the wall.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/E3E.API.DataSecurity.Models.Wall"
                                    }
                                },
                                "example": [
                                    {
                                        "index": 0,
                                        "name": "string",
                                        "description": "string",
                                        "wallType": 0,
                                        "primaryContact": {
                                            "isDeleted": true,
                                            "error": "string",
                                            "userId": "string",
                                            "userName": "string",
                                            "userType": "string"
                                        },
                                        "errors": [
                                            "string"
                                        ],
                                        "users": [
                                            {
                                                "isDeleted": true,
                                                "error": "string",
                                                "userId": "string",
                                                "userName": "string",
                                                "userType": "string"
                                            }
                                        ],
                                        "matters": [
                                            {
                                                "isDeleted": true,
                                                "error": "string",
                                                "mattIndex": 0,
                                                "number": "string",
                                                "displayName": "string"
                                            }
                                        ],
                                        "clients": [
                                            {
                                                "isDeleted": true,
                                                "error": "string",
                                                "clientIndex": 0,
                                                "number": "string",
                                                "displayName": "string"
                                            }
                                        ],
                                        "entities": [
                                            {
                                                "isDeleted": true,
                                                "error": "string",
                                                "entIndex": 0,
                                                "displayName": "string"
                                            }
                                        ],
                                        "vendors": [
                                            {
                                                "isDeleted": true,
                                                "error": "string",
                                                "vendorIndex": 0,
                                                "vendorNum": "string",
                                                "name": "string"
                                            }
                                        ],
                                        "payors": [
                                            {
                                                "isDeleted": true,
                                                "error": "string",
                                                "payorIndex": 0,
                                                "displayName": "string"
                                            }
                                        ],
                                        "timekeepers": [
                                            {
                                                "isDeleted": true,
                                                "error": "string",
                                                "tkprIndex": 0,
                                                "number": "string",
                                                "displayName": "string"
                                            }
                                        ],
                                        "clientPredicates": [
                                            {
                                                "isDeleted": true,
                                                "error": "string",
                                                "id": "string",
                                                "cliType": "string",
                                                "cliCategory": "string",
                                                "cliAttribute": "string",
                                                "office": "string"
                                            }
                                        ],
                                        "matterPredicates": [
                                            {
                                                "isDeleted": true,
                                                "error": "string",
                                                "id": "string",
                                                "matterType": "string",
                                                "mattCategory": "string",
                                                "mattAttribute": "string",
                                                "billingOffice": "string",
                                                "spvTkpr": 0,
                                                "department": "string",
                                                "section": "string",
                                                "practiceGroup": "string",
                                                "tkprTeam": "string"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/E3E.API.DataSecurity.Models.Wall"
                                    }
                                },
                                "example": [
                                    {
                                        "index": 0,
                                        "name": "string",
                                        "description": "string",
                                        "wallType": 0,
                                        "primaryContact": {
                                            "isDeleted": true,
                                            "error": "string",
                                            "userId": "string",
                                            "userName": "string",
                                            "userType": "string"
                                        },
                                        "errors": [
                                            "string"
                                        ],
                                        "users": [
                                            {
                                                "isDeleted": true,
                                                "error": "string",
                                                "userId": "string",
                                                "userName": "string",
                                                "userType": "string"
                                            }
                                        ],
                                        "matters": [
                                            {
                                                "isDeleted": true,
                                                "error": "string",
                                                "mattIndex": 0,
                                                "number": "string",
                                                "displayName": "string"
                                            }
                                        ],
                                        "clients": [
                                            {
                                                "isDeleted": true,
                                                "error": "string",
                                                "clientIndex": 0,
                                                "number": "string",
                                                "displayName": "string"
                                            }
                                        ],
                                        "entities": [
                                            {
                                                "isDeleted": true,
                                                "error": "string",
                                                "entIndex": 0,
                                                "displayName": "string"
                                            }
                                        ],
                                        "vendors": [
                                            {
                                                "isDeleted": true,
                                                "error": "string",
                                                "vendorIndex": 0,
                                                "vendorNum": "string",
                                                "name": "string"
                                            }
                                        ],
                                        "payors": [
                                            {
                                                "isDeleted": true,
                                                "error": "string",
                                                "payorIndex": 0,
                                                "displayName": "string"
                                            }
                                        ],
                                        "timekeepers": [
                                            {
                                                "isDeleted": true,
                                                "error": "string",
                                                "tkprIndex": 0,
                                                "number": "string",
                                                "displayName": "string"
                                            }
                                        ],
                                        "clientPredicates": [
                                            {
                                                "isDeleted": true,
                                                "error": "string",
                                                "id": "string",
                                                "cliType": "string",
                                                "cliCategory": "string",
                                                "cliAttribute": "string",
                                                "office": "string"
                                            }
                                        ],
                                        "matterPredicates": [
                                            {
                                                "isDeleted": true,
                                                "error": "string",
                                                "id": "string",
                                                "matterType": "string",
                                                "mattCategory": "string",
                                                "mattAttribute": "string",
                                                "billingOffice": "string",
                                                "spvTkpr": 0,
                                                "department": "string",
                                                "section": "string",
                                                "practiceGroup": "string",
                                                "tkprTeam": "string"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "501": {
                        "description": "Not Implemented"
                    }
                }
            },
            "post": {
                "tags": [
                    "Wall"
                ],
                "summary": "Creates a list of walls.",
                "description": "Creates a list of walls.",
                "operationId": "Wall_CreateWalls",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "List of walls to be created.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/E3E.API.DataSecurity.Models.Wall"
                                }
                            },
                            "example": [
                                {
                                    "index": 0,
                                    "name": "string",
                                    "description": "string",
                                    "wallType": 0,
                                    "primaryContact": {
                                        "isDeleted": true,
                                        "error": "string",
                                        "userId": "string",
                                        "userName": "string",
                                        "userType": "string"
                                    },
                                    "errors": [
                                        "string"
                                    ],
                                    "users": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "userId": "string",
                                            "userName": "string",
                                            "userType": "string"
                                        }
                                    ],
                                    "matters": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "mattIndex": 0,
                                            "number": "string",
                                            "displayName": "string"
                                        }
                                    ],
                                    "clients": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "clientIndex": 0,
                                            "number": "string",
                                            "displayName": "string"
                                        }
                                    ],
                                    "entities": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "entIndex": 0,
                                            "displayName": "string"
                                        }
                                    ],
                                    "vendors": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "vendorIndex": 0,
                                            "vendorNum": "string",
                                            "name": "string"
                                        }
                                    ],
                                    "payors": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "payorIndex": 0,
                                            "displayName": "string"
                                        }
                                    ],
                                    "timekeepers": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "tkprIndex": 0,
                                            "number": "string",
                                            "displayName": "string"
                                        }
                                    ],
                                    "clientPredicates": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "id": "string",
                                            "cliType": "string",
                                            "cliCategory": "string",
                                            "cliAttribute": "string",
                                            "office": "string"
                                        }
                                    ],
                                    "matterPredicates": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "id": "string",
                                            "matterType": "string",
                                            "mattCategory": "string",
                                            "mattAttribute": "string",
                                            "billingOffice": "string",
                                            "spvTkpr": 0,
                                            "department": "string",
                                            "section": "string",
                                            "practiceGroup": "string",
                                            "tkprTeam": "string"
                                        }
                                    ]
                                }
                            ]
                        },
                        "text/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/E3E.API.DataSecurity.Models.Wall"
                                }
                            },
                            "example": [
                                {
                                    "index": 0,
                                    "name": "string",
                                    "description": "string",
                                    "wallType": 0,
                                    "primaryContact": {
                                        "isDeleted": true,
                                        "error": "string",
                                        "userId": "string",
                                        "userName": "string",
                                        "userType": "string"
                                    },
                                    "errors": [
                                        "string"
                                    ],
                                    "users": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "userId": "string",
                                            "userName": "string",
                                            "userType": "string"
                                        }
                                    ],
                                    "matters": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "mattIndex": 0,
                                            "number": "string",
                                            "displayName": "string"
                                        }
                                    ],
                                    "clients": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "clientIndex": 0,
                                            "number": "string",
                                            "displayName": "string"
                                        }
                                    ],
                                    "entities": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "entIndex": 0,
                                            "displayName": "string"
                                        }
                                    ],
                                    "vendors": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "vendorIndex": 0,
                                            "vendorNum": "string",
                                            "name": "string"
                                        }
                                    ],
                                    "payors": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "payorIndex": 0,
                                            "displayName": "string"
                                        }
                                    ],
                                    "timekeepers": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "tkprIndex": 0,
                                            "number": "string",
                                            "displayName": "string"
                                        }
                                    ],
                                    "clientPredicates": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "id": "string",
                                            "cliType": "string",
                                            "cliCategory": "string",
                                            "cliAttribute": "string",
                                            "office": "string"
                                        }
                                    ],
                                    "matterPredicates": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "id": "string",
                                            "matterType": "string",
                                            "mattCategory": "string",
                                            "mattAttribute": "string",
                                            "billingOffice": "string",
                                            "spvTkpr": 0,
                                            "department": "string",
                                            "section": "string",
                                            "practiceGroup": "string",
                                            "tkprTeam": "string"
                                        }
                                    ]
                                }
                            ]
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/E3E.API.DataSecurity.Models.Wall"
                                }
                            },
                            "example": [
                                {
                                    "index": 0,
                                    "name": "string",
                                    "description": "string",
                                    "wallType": 0,
                                    "primaryContact": {
                                        "isDeleted": true,
                                        "error": "string",
                                        "userId": "string",
                                        "userName": "string",
                                        "userType": "string"
                                    },
                                    "errors": [
                                        "string"
                                    ],
                                    "users": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "userId": "string",
                                            "userName": "string",
                                            "userType": "string"
                                        }
                                    ],
                                    "matters": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "mattIndex": 0,
                                            "number": "string",
                                            "displayName": "string"
                                        }
                                    ],
                                    "clients": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "clientIndex": 0,
                                            "number": "string",
                                            "displayName": "string"
                                        }
                                    ],
                                    "entities": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "entIndex": 0,
                                            "displayName": "string"
                                        }
                                    ],
                                    "vendors": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "vendorIndex": 0,
                                            "vendorNum": "string",
                                            "name": "string"
                                        }
                                    ],
                                    "payors": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "payorIndex": 0,
                                            "displayName": "string"
                                        }
                                    ],
                                    "timekeepers": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "tkprIndex": 0,
                                            "number": "string",
                                            "displayName": "string"
                                        }
                                    ],
                                    "clientPredicates": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "id": "string",
                                            "cliType": "string",
                                            "cliCategory": "string",
                                            "cliAttribute": "string",
                                            "office": "string"
                                        }
                                    ],
                                    "matterPredicates": [
                                        {
                                            "isDeleted": true,
                                            "error": "string",
                                            "id": "string",
                                            "matterType": "string",
                                            "mattCategory": "string",
                                            "mattAttribute": "string",
                                            "billingOffice": "string",
                                            "spvTkpr": 0,
                                            "department": "string",
                                            "section": "string",
                                            "practiceGroup": "string",
                                            "tkprTeam": "string"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.DataSecurity.Models.WallResult"
                                },
                                "example": {
                                    "success": true,
                                    "message": "string",
                                    "data": [
                                        {
                                            "index": 0,
                                            "name": "string",
                                            "description": "string",
                                            "wallType": 0,
                                            "primaryContact": {
                                                "isDeleted": true,
                                                "error": "string",
                                                "userId": "string",
                                                "userName": "string",
                                                "userType": "string"
                                            },
                                            "errors": [
                                                "string"
                                            ],
                                            "users": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "userId": "string",
                                                    "userName": "string",
                                                    "userType": "string"
                                                }
                                            ],
                                            "matters": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "mattIndex": 0,
                                                    "number": "string",
                                                    "displayName": "string"
                                                }
                                            ],
                                            "clients": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "clientIndex": 0,
                                                    "number": "string",
                                                    "displayName": "string"
                                                }
                                            ],
                                            "entities": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "entIndex": 0,
                                                    "displayName": "string"
                                                }
                                            ],
                                            "vendors": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "vendorIndex": 0,
                                                    "vendorNum": "string",
                                                    "name": "string"
                                                }
                                            ],
                                            "payors": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "payorIndex": 0,
                                                    "displayName": "string"
                                                }
                                            ],
                                            "timekeepers": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "tkprIndex": 0,
                                                    "number": "string",
                                                    "displayName": "string"
                                                }
                                            ],
                                            "clientPredicates": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "id": "string",
                                                    "cliType": "string",
                                                    "cliCategory": "string",
                                                    "cliAttribute": "string",
                                                    "office": "string"
                                                }
                                            ],
                                            "matterPredicates": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "id": "string",
                                                    "matterType": "string",
                                                    "mattCategory": "string",
                                                    "mattAttribute": "string",
                                                    "billingOffice": "string",
                                                    "spvTkpr": 0,
                                                    "department": "string",
                                                    "section": "string",
                                                    "practiceGroup": "string",
                                                    "tkprTeam": "string"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.DataSecurity.Models.WallResult"
                                },
                                "example": {
                                    "success": true,
                                    "message": "string",
                                    "data": [
                                        {
                                            "index": 0,
                                            "name": "string",
                                            "description": "string",
                                            "wallType": 0,
                                            "primaryContact": {
                                                "isDeleted": true,
                                                "error": "string",
                                                "userId": "string",
                                                "userName": "string",
                                                "userType": "string"
                                            },
                                            "errors": [
                                                "string"
                                            ],
                                            "users": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "userId": "string",
                                                    "userName": "string",
                                                    "userType": "string"
                                                }
                                            ],
                                            "matters": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "mattIndex": 0,
                                                    "number": "string",
                                                    "displayName": "string"
                                                }
                                            ],
                                            "clients": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "clientIndex": 0,
                                                    "number": "string",
                                                    "displayName": "string"
                                                }
                                            ],
                                            "entities": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "entIndex": 0,
                                                    "displayName": "string"
                                                }
                                            ],
                                            "vendors": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "vendorIndex": 0,
                                                    "vendorNum": "string",
                                                    "name": "string"
                                                }
                                            ],
                                            "payors": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "payorIndex": 0,
                                                    "displayName": "string"
                                                }
                                            ],
                                            "timekeepers": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "tkprIndex": 0,
                                                    "number": "string",
                                                    "displayName": "string"
                                                }
                                            ],
                                            "clientPredicates": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "id": "string",
                                                    "cliType": "string",
                                                    "cliCategory": "string",
                                                    "cliAttribute": "string",
                                                    "office": "string"
                                                }
                                            ],
                                            "matterPredicates": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "id": "string",
                                                    "matterType": "string",
                                                    "mattCategory": "string",
                                                    "mattAttribute": "string",
                                                    "billingOffice": "string",
                                                    "spvTkpr": 0,
                                                    "department": "string",
                                                    "section": "string",
                                                    "practiceGroup": "string",
                                                    "tkprTeam": "string"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.DataSecurity.Models.WallResult"
                                },
                                "example": {
                                    "success": true,
                                    "message": "string",
                                    "data": [
                                        {
                                            "index": 0,
                                            "name": "string",
                                            "description": "string",
                                            "wallType": 0,
                                            "primaryContact": {
                                                "isDeleted": true,
                                                "error": "string",
                                                "userId": "string",
                                                "userName": "string",
                                                "userType": "string"
                                            },
                                            "errors": [
                                                "string"
                                            ],
                                            "users": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "userId": "string",
                                                    "userName": "string",
                                                    "userType": "string"
                                                }
                                            ],
                                            "matters": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "mattIndex": 0,
                                                    "number": "string",
                                                    "displayName": "string"
                                                }
                                            ],
                                            "clients": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "clientIndex": 0,
                                                    "number": "string",
                                                    "displayName": "string"
                                                }
                                            ],
                                            "entities": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "entIndex": 0,
                                                    "displayName": "string"
                                                }
                                            ],
                                            "vendors": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "vendorIndex": 0,
                                                    "vendorNum": "string",
                                                    "name": "string"
                                                }
                                            ],
                                            "payors": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "payorIndex": 0,
                                                    "displayName": "string"
                                                }
                                            ],
                                            "timekeepers": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "tkprIndex": 0,
                                                    "number": "string",
                                                    "displayName": "string"
                                                }
                                            ],
                                            "clientPredicates": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "id": "string",
                                                    "cliType": "string",
                                                    "cliCategory": "string",
                                                    "cliAttribute": "string",
                                                    "office": "string"
                                                }
                                            ],
                                            "matterPredicates": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "id": "string",
                                                    "matterType": "string",
                                                    "mattCategory": "string",
                                                    "mattAttribute": "string",
                                                    "billingOffice": "string",
                                                    "spvTkpr": 0,
                                                    "department": "string",
                                                    "section": "string",
                                                    "practiceGroup": "string",
                                                    "tkprTeam": "string"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.DataSecurity.Models.WallResult"
                                },
                                "example": {
                                    "success": true,
                                    "message": "string",
                                    "data": [
                                        {
                                            "index": 0,
                                            "name": "string",
                                            "description": "string",
                                            "wallType": 0,
                                            "primaryContact": {
                                                "isDeleted": true,
                                                "error": "string",
                                                "userId": "string",
                                                "userName": "string",
                                                "userType": "string"
                                            },
                                            "errors": [
                                                "string"
                                            ],
                                            "users": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "userId": "string",
                                                    "userName": "string",
                                                    "userType": "string"
                                                }
                                            ],
                                            "matters": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "mattIndex": 0,
                                                    "number": "string",
                                                    "displayName": "string"
                                                }
                                            ],
                                            "clients": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "clientIndex": 0,
                                                    "number": "string",
                                                    "displayName": "string"
                                                }
                                            ],
                                            "entities": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "entIndex": 0,
                                                    "displayName": "string"
                                                }
                                            ],
                                            "vendors": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "vendorIndex": 0,
                                                    "vendorNum": "string",
                                                    "name": "string"
                                                }
                                            ],
                                            "payors": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "payorIndex": 0,
                                                    "displayName": "string"
                                                }
                                            ],
                                            "timekeepers": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "tkprIndex": 0,
                                                    "number": "string",
                                                    "displayName": "string"
                                                }
                                            ],
                                            "clientPredicates": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "id": "string",
                                                    "cliType": "string",
                                                    "cliCategory": "string",
                                                    "cliAttribute": "string",
                                                    "office": "string"
                                                }
                                            ],
                                            "matterPredicates": [
                                                {
                                                    "isDeleted": true,
                                                    "error": "string",
                                                    "id": "string",
                                                    "matterType": "string",
                                                    "mattCategory": "string",
                                                    "mattAttribute": "string",
                                                    "billingOffice": "string",
                                                    "spvTkpr": 0,
                                                    "department": "string",
                                                    "section": "string",
                                                    "practiceGroup": "string",
                                                    "tkprTeam": "string"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "501": {
                        "description": "Not Implemented"
                    }
                }
            }
        },
        "/workflow/{wfStepIndex}/actions": {
            "get": {
                "tags": [
                    "WorkflowIntegration"
                ],
                "summary": "Gets all actions avaialble from the Workflow Step provided.",
                "description": "Gets all actions avaialble from the Workflow Step provided.",
                "operationId": "WorkflowIntegration_GetWorkflowActions",
                "parameters": [
                    {
                        "name": "wfStepIndex",
                        "in": "path",
                        "description": "Workflow Step Index.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "example": [
                                    "string"
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "example": [
                                    "string"
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound - The workflow with index provided does not exists.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/workflow/{wfStepIndex}/action/{wfAction}": {
            "post": {
                "tags": [
                    "WorkflowIntegration"
                ],
                "summary": "Execute Workflow action from the Workflow Step provided.",
                "description": "Execute Workflow action from the Workflow Step provided.",
                "operationId": "WorkflowIntegration_ExecuteWorkflowAction",
                "parameters": [
                    {
                        "name": "wfStepIndex",
                        "in": "path",
                        "description": "Workflow Step Index.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "wfAction",
                        "in": "path",
                        "description": "Workflow Action.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Confirmation information.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.WorkflowIntegration.Models.ConfirmationInfo"
                            },
                            "example": {
                                "reasonType": "string",
                                "description": "string"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.WorkflowIntegration.Models.ConfirmationInfo"
                            },
                            "example": {
                                "reasonType": "string",
                                "description": "string"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.WorkflowIntegration.Models.ConfirmationInfo"
                            },
                            "example": {
                                "reasonType": "string",
                                "description": "string"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.WorkflowIntegration.Models.ConfirmationInfo"
                            },
                            "example": "<E3E.API.WorkflowIntegration.Models.ConfirmationInfo> <reasonType>string</reasonType> <description>string</description> </E3E.API.WorkflowIntegration.Models.ConfirmationInfo>"
                        },
                        "text/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.WorkflowIntegration.Models.ConfirmationInfo"
                            },
                            "example": "<E3E.API.WorkflowIntegration.Models.ConfirmationInfo> <reasonType>string</reasonType> <description>string</description> </E3E.API.WorkflowIntegration.Models.ConfirmationInfo>"
                        },
                        "application/*+xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.WorkflowIntegration.Models.ConfirmationInfo"
                            },
                            "example": "<E3E.API.WorkflowIntegration.Models.ConfirmationInfo> <reasonType>string</reasonType> <description>string</description> </E3E.API.WorkflowIntegration.Models.ConfirmationInfo>"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.WorkflowIntegration.Models.WorkflowActionResponse"
                                },
                                "example": {
                                    "responseType": 0,
                                    "processItemId": "string",
                                    "processId": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.WorkflowIntegration.Models.WorkflowActionResponse"
                                },
                                "example": {
                                    "responseType": 0,
                                    "processItemId": "string",
                                    "processId": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is not valid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound - The workflow with index provided does not exists.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/notifications/hub/negotiate": {
            "post": {
                "tags": [
                    "Notification Hub"
                ],
                "summary": "Entry point for notification negotiation.",
                "description": "The entry point is used for establishing communication with the SignalR Hub.",
                "operationId": "post-notifications-hub-negotiate",
                "parameters": [
                    {
                        "name": "X-3E-SessionId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "negotiateVersion",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Negotiate POST response."
                    }
                }
            }
        },
        "/notifications/hub": {
            "get": {
                "tags": [
                    "Notification Hub"
                ],
                "summary": "Hub endpoint for Get requests.",
                "description": "Hub endpoint for Get requests.",
                "operationId": "get-notifications-hub",
                "parameters": [
                    {
                        "name": "X-3E-SessionId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hub GET response."
                    }
                }
            },
            "post": {
                "tags": [
                    "Notification Hub"
                ],
                "summary": "Hub endpoint for Post requests.",
                "description": "Hub endpoint for Post requests.",
                "operationId": "post-notifications-hub",
                "parameters": [
                    {
                        "name": "X-3E-SessionId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "text/plain;charset=UTF-8": {
                            "schema": {
                                "type": "string"
                            },
                            "examples": {
                                "default": {
                                    "value": null
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Hub POST response."
                    }
                }
            }
        },
        "/time/timecapture/spellcheck/batch": {
            "post": {
                "tags": [
                    "Time"
                ],
                "summary": "Validates spelling for multiple timecapture items.",
                "description": "Validates spelling for multiple timecapture items.",
                "operationId": "Time_SpellcheckTimeCaptures",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The timecapture item IDs to validate.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecaptureSpellCheckBatchRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ],
                                "updateData": true
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecaptureSpellCheckBatchRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ],
                                "updateData": true
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Time.Models.TimecaptureSpellCheckBatchRequest"
                            },
                            "example": {
                                "itemId": [
                                    "string"
                                ],
                                "updateData": true
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecaptureSpellCheckBatchResponse"
                                },
                                "example": {
                                    "success": true,
                                    "message": "string",
                                    "timecards": [
                                        {
                                            "itemId": "string",
                                            "mistakes": [
                                                {
                                                    "value": "string",
                                                    "suggestions": [
                                                        "string"
                                                    ],
                                                    "repeatedWord": true,
                                                    "caseFailure": true,
                                                    "start": 0,
                                                    "length": 0,
                                                    "info": "string"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Time.Models.TimecaptureSpellCheckBatchResponse"
                                },
                                "example": {
                                    "success": true,
                                    "message": "string",
                                    "timecards": [
                                        {
                                            "itemId": "string",
                                            "mistakes": [
                                                {
                                                    "value": "string",
                                                    "suggestions": [
                                                        "string"
                                                    ],
                                                    "repeatedWord": true,
                                                    "caseFailure": true,
                                                    "start": 0,
                                                    "length": 0,
                                                    "info": "string"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        },
        "/attachment/note": {
            "post": {
                "tags": [
                    "Attachment"
                ],
                "summary": "Creates Note Attachment.",
                "description": "Creates Note Attachment.",
                "operationId": "Attachment_CreateNoteAttachment",
                "parameters": [
                    {
                        "name": "3eInstanceId",
                        "in": "query",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-3E-SessionId",
                        "in": "header",
                        "description": "The user's session identifier",
                        "schema": {
                            "type": "string",
                            "default": "ad5efeef-4512-46ea-ad24-ec1cf5f1ebd5"
                        }
                    },
                    {
                        "name": "X-3E-UserId",
                        "in": "header",
                        "description": "The unique user identifier - this is only allowed in conjunction with the Integration scope for applications like EIF.  A forbidden response will be returned if this scope is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language code of the request (en-GB, en-US, fr-FR). Defaults to the user's 3E language assignment which can be retrieved by the session endpoint",
                        "schema": {
                            "type": "string",
                            "default": "DEFAULT"
                        }
                    },
                    {
                        "name": "X-3E-InstanceId",
                        "in": "header",
                        "description": "Specifies the target 3E instance ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Attachment.Models.NoteAttachmentCreateRequest"
                            },
                            "example": {
                                "parentItemId": "string",
                                "archetype": "string",
                                "fileName": "string",
                                "description": "string"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Attachment.Models.NoteAttachmentCreateRequest"
                            },
                            "example": {
                                "parentItemId": "string",
                                "archetype": "string",
                                "fileName": "string",
                                "description": "string"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Attachment.Models.NoteAttachmentCreateRequest"
                            },
                            "example": {
                                "parentItemId": "string",
                                "archetype": "string",
                                "fileName": "string",
                                "description": "string"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Attachment.Models.NoteAttachmentCreateRequest"
                            },
                            "example": "<E3E.API.Attachment.Models.NoteAttachmentCreateRequest> <parentItemId>string</parentItemId> <archetype>string</archetype> <fileName>string</fileName> <description>string</description> </E3E.API.Attachment.Models.NoteAttachmentCreateRequest>"
                        },
                        "text/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Attachment.Models.NoteAttachmentCreateRequest"
                            },
                            "example": "<E3E.API.Attachment.Models.NoteAttachmentCreateRequest> <parentItemId>string</parentItemId> <archetype>string</archetype> <fileName>string</fileName> <description>string</description> </E3E.API.Attachment.Models.NoteAttachmentCreateRequest>"
                        },
                        "application/*+xml": {
                            "schema": {
                                "$ref": "#/components/schemas/E3E.API.Attachment.Models.NoteAttachmentCreateRequest"
                            },
                            "example": "<E3E.API.Attachment.Models.NoteAttachmentCreateRequest> <parentItemId>string</parentItemId> <archetype>string</archetype> <fileName>string</fileName> <description>string</description> </E3E.API.Attachment.Models.NoteAttachmentCreateRequest>"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Attachment.Models.AttachmentCreateResponse"
                                },
                                "example": {
                                    "attachment": {
                                        "attachmentID": "string",
                                        "attachmentType": "string",
                                        "dmsDocumentID": "string",
                                        "dmsDraft": "string",
                                        "fileName": "string",
                                        "description": "string",
                                        "syncID": "string",
                                        "reportPrint": true,
                                        "extendedAttributes": "string",
                                        "subFolder": "string"
                                    },
                                    "success": true,
                                    "message": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/E3E.API.Attachment.Models.AttachmentCreateResponse"
                                },
                                "example": {
                                    "attachment": {
                                        "attachmentID": "string",
                                        "attachmentType": "string",
                                        "dmsDocumentID": "string",
                                        "dmsDraft": "string",
                                        "fileName": "string",
                                        "description": "string",
                                        "syncID": "string",
                                        "reportPrint": true,
                                        "extendedAttributes": "string",
                                        "subFolder": "string"
                                    },
                                    "success": true,
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "NoContent - The request has not produced any outputs, see messages in response header for details."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Has not been authorized by Windows or Azure Active directory.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - The authenticated user or application is not allowed perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unhandled error occurred, check server logs for the exact error."
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "E3E.API.AppObjectType": {
                "enum": [
                    0,
                    1,
                    2,
                    4,
                    5,
                    6,
                    7,
                    9,
                    11,
                    13,
                    14,
                    16,
                    20,
                    23,
                    27,
                    29,
                    30,
                    37,
                    40
                ],
                "type": "integer",
                "description": "Represents the types of appobjects that can be run from a dashboard.",
                "format": "int32"
            },
            "E3E.API.Attachment.Models.Attachment": {
                "type": "object",
                "properties": {
                    "attachmentID": {
                        "type": "string",
                        "description": "Gets or sets the AttachmentID.",
                        "format": "uuid"
                    },
                    "attachmentType": {
                        "type": "string",
                        "description": "Gets or sets the AttachmentType.",
                        "nullable": true
                    },
                    "dmsDocumentID": {
                        "type": "string",
                        "description": "Gets or sets the DMSDocumentID.",
                        "nullable": true
                    },
                    "dmsDraft": {
                        "type": "string",
                        "description": "Gets or sets the DMSDraft.",
                        "nullable": true
                    },
                    "fileName": {
                        "type": "string",
                        "description": "Gets or sets the FileName.",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Gets or sets the Description.",
                        "nullable": true
                    },
                    "syncID": {
                        "type": "string",
                        "description": "Gets or sets the SyncID.",
                        "nullable": true
                    },
                    "reportPrint": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether this attachment should be printed in reports."
                    },
                    "extendedAttributes": {
                        "type": "string",
                        "description": "Gets or sets the ExtendedAtts.",
                        "nullable": true
                    },
                    "subFolder": {
                        "type": "string",
                        "description": "Gets or sets the SubFolder.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a data object attachment."
            },
            "E3E.API.Attachment.Models.AttachmentCreateResponse": {
                "type": "object",
                "properties": {
                    "attachment": {
                        "$ref": "#/components/schemas/E3E.API.Attachment.Models.Attachment"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "POST attachment response."
            },
            "E3E.API.Attachment.Models.AttachmentDeleteRequest": {
                "required": [
                    "attachmentIds"
                ],
                "type": "object",
                "properties": {
                    "attachmentIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Gets or sets the AttachmentIds."
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to delete the attachments."
            },
            "E3E.API.Attachment.Models.AttachmentDeleteResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response on deleting attachment request."
            },
            "E3E.API.Attachment.Models.AttachmentDownloadRequest": {
                "required": [
                    "attachmentId"
                ],
                "type": "object",
                "properties": {
                    "attachmentId": {
                        "type": "string",
                        "description": "Gets or sets the attachment Id.",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to download an attachment."
            },
            "E3E.API.Attachment.Models.AttachmentGetResponse": {
                "type": "object",
                "properties": {
                    "attachments": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/E3E.API.Attachment.Models.Attachment"
                            },
                            "nullable": true
                        },
                        "description": "Gets or sets a collection of data objects Ids and their attachments.",
                        "nullable": true
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a collection of data objects Ids and their attachments."
            },
            "E3E.API.Attachment.Models.DMSParameters": {
                "type": "object",
                "properties": {
                    "defaultLibrary": {
                        "type": "string",
                        "description": "Gets or sets DMS libraries.",
                        "nullable": true
                    },
                    "libraries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or sets DMS libraries.",
                        "nullable": true
                    },
                    "documentClasses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or sets DMS document classes.",
                        "nullable": true
                    },
                    "documentTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or sets DMS document types.",
                        "nullable": true
                    },
                    "folders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NextGen.Framework.Managers.DMSMgr.IDMSFolder"
                        },
                        "description": "Gets or sets DMS folders.",
                        "nullable": true
                    },
                    "defaultWorkspace": {
                        "$ref": "#/components/schemas/NextGen.Framework.Managers.DMSMgr.IDMSWorkspace"
                    },
                    "defaultFolder": {
                        "$ref": "#/components/schemas/NextGen.Framework.Managers.DMSMgr.IDMSFolder"
                    },
                    "syncMapID": {
                        "type": "string",
                        "description": "Gets or sets DMS SyncMapID.",
                        "format": "uuid"
                    },
                    "dmsConfigList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.AttachmentHelper.Models.IMultiDmsAttachmentMapping"
                        },
                        "description": "Only for Multi DMS. List of configured DMS Attachment Mappings",
                        "nullable": true
                    },
                    "dmsConfigDefault": {
                        "$ref": "#/components/schemas/E3E.API.AttachmentHelper.Models.IMultiDmsAttachmentMapping"
                    }
                },
                "additionalProperties": false,
                "description": "Contains DMS parameters (libraries, document classes, document types, folders)."
            },
            "E3E.API.Attachment.Models.DMSParametersGetResponse": {
                "type": "object",
                "properties": {
                    "dmsParameters": {
                        "$ref": "#/components/schemas/E3E.API.Attachment.Models.DMSParameters"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to get DMS parameters request."
            },
            "E3E.API.Attachment.Models.ICAttachmentDownloadRequest": {
                "required": [
                    "archetype",
                    "parentItemId",
                    "syncId"
                ],
                "type": "object",
                "properties": {
                    "syncId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Gets or sets IC SyncId."
                    },
                    "archetype": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Gets or sets an archetype."
                    },
                    "parentItemId": {
                        "type": "string",
                        "description": "Gets or sets the Id of a parent data object.",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to download an IC attachment."
            },
            "E3E.API.Attachment.Models.NoteAttachmentCreateRequest": {
                "required": [
                    "archetype",
                    "fileName",
                    "parentItemId"
                ],
                "type": "object",
                "properties": {
                    "parentItemId": {
                        "type": "string",
                        "description": "Gets or sets a parent item id.",
                        "format": "uuid"
                    },
                    "archetype": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Gets or sets an archetype."
                    },
                    "fileName": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Gets or sets file name."
                    },
                    "description": {
                        "type": "string",
                        "description": "Gets or sets a description.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "POST note attachment request."
            },
            "E3E.API.Attachment.Models.PatchAttachmentRequest": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or set id of Attachment.",
                        "format": "uuid"
                    },
                    "description": {
                        "type": "string",
                        "description": "Gets or sets the Description.",
                        "nullable": true
                    },
                    "reportPrint": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether this attachment should be printed in reports.",
                        "nullable": true
                    },
                    "fileName": {
                        "type": "string",
                        "description": "Gets or sets the FileName.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a patch attachment request."
            },
            "E3E.API.Attachment.Models.PatchAttachmentsRequest": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Attachment.Models.PatchAttachmentRequest"
                        },
                        "description": "Gets or sets list of Attachment Request Items",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a batch of patch attachment requests."
            },
            "E3E.API.AttachmentHelper.Models.IMultiDmsAttachmentMapping": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "User friendly name of the configuration",
                        "nullable": true,
                        "readOnly": true
                    },
                    "library": {
                        "type": "string",
                        "description": "Library.",
                        "nullable": true,
                        "readOnly": true
                    },
                    "workspace": {
                        "type": "string",
                        "description": "Workspace ID.",
                        "nullable": true,
                        "readOnly": true
                    },
                    "folder": {
                        "type": "string",
                        "description": "Folder ID.",
                        "nullable": true,
                        "readOnly": true
                    },
                    "syncMapID": {
                        "type": "string",
                        "description": "SyncMapID.",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "server": {
                        "type": "string",
                        "description": "DMS Server ID.",
                        "nullable": true,
                        "readOnly": true
                    }
                },
                "additionalProperties": false,
                "description": "Provides the information about DMS attachment mapping for Multi DMS environment."
            },
            "E3E.API.Audit.AuditAttributeInfo": {
                "type": "object",
                "properties": {
                    "timeStamp": {
                        "type": "string",
                        "description": "Represents the timestamp of the change.",
                        "format": "date-time"
                    },
                    "userName": {
                        "type": "string",
                        "description": "Gets or sets UserName.",
                        "nullable": true
                    },
                    "authenticatedUserName": {
                        "type": "string",
                        "description": "Gets or sets AuthenticatedUserName.",
                        "nullable": true
                    },
                    "newVal": {
                        "description": "The value of the attribute after the change.",
                        "nullable": true
                    },
                    "previousVal": {
                        "description": "The value of the attribute before the change.",
                        "nullable": true
                    },
                    "isMostRecent": {
                        "type": "boolean",
                        "description": "Is the most recent when true and no longer needs to be updated."
                    },
                    "id": {
                        "type": "string",
                        "description": "Id.",
                        "nullable": true
                    },
                    "keyOrAlias": {
                        "description": "Alias or a key in case alias does not exist.",
                        "nullable": true
                    },
                    "previousKeyOrAlias": {
                        "description": "Alias of the previous value or a key in case alias does not exist.",
                        "nullable": true
                    },
                    "caption": {
                        "type": "string",
                        "description": "Caption of the attribute.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a tracked attributes information."
            },
            "E3E.API.Client.Models.Client": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets unique id associated with the object.",
                        "nullable": true
                    },
                    "accessType": {
                        "$ref": "#/components/schemas/E3E.API.Data.AccessType"
                    },
                    "dataState": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteState"
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/E3E.API.Data.Models.Attribute"
                        },
                        "description": "Gets or sets the attributes.",
                        "nullable": true
                    },
                    "childObjects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                        },
                        "description": "Gets or sets the child objects for this data object. This is a collection of collections.",
                        "nullable": true
                    },
                    "error": {
                        "$ref": "#/components/schemas/E3E.API.Data.DataError"
                    },
                    "index": {
                        "type": "integer",
                        "description": "Gets or sets the index of the row.",
                        "format": "int32",
                        "default": -1
                    },
                    "isLocked": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether the row is checked out by another process."
                    },
                    "lockedMessage": {
                        "type": "string",
                        "description": "Gets or sets the message indicating whether the row is locked.",
                        "nullable": true
                    },
                    "rowState": {
                        "$ref": "#/components/schemas/E3E.API.Data.Models.DataRowStates"
                    },
                    "subclassId": {
                        "type": "string",
                        "description": "Gets or sets the subclass id of this row.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a client object."
            },
            "E3E.API.Client.Models.ClientCreateRequest": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to create a new Client."
            },
            "E3E.API.Client.Models.ClientCreateResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a create request."
            },
            "E3E.API.Client.Models.ClientGetResponse": {
                "type": "object",
                "properties": {
                    "clients": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Client.Models.Client"
                        },
                        "description": "Gets or sets a collection of client objects.",
                        "nullable": true
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a client get request."
            },
            "E3E.API.Client.Models.ClientGetSchemaResponse": {
                "type": "object",
                "properties": {
                    "schema": {
                        "$ref": "#/components/schemas/NextGen.Framework.Managers.ObjectMgr.Schema.IDataObjectSchema"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a request for a Client schema."
            },
            "E3E.API.Client.Models.ClientTemplateResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to get a client template request."
            },
            "E3E.API.Client.Models.ClientUpdateRequest": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to update a Client."
            },
            "E3E.API.Client.Models.ClientUpdateResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to an update request."
            },
            "E3E.API.Client.Models.ClientValidateRequest": {
                "type": "object",
                "properties": {
                    "itemId": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to validate a Client."
            },
            "E3E.API.Client.Models.ClientValidateResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a validate request."
            },
            "E3E.API.Cost.Models.CostCard": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets unique id associated with the object.",
                        "nullable": true
                    },
                    "accessType": {
                        "$ref": "#/components/schemas/E3E.API.Data.AccessType"
                    },
                    "dataState": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteState"
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/E3E.API.Data.Models.Attribute"
                        },
                        "description": "Gets or sets the attributes.",
                        "nullable": true
                    },
                    "childObjects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                        },
                        "description": "Gets or sets the child objects for this data object. This is a collection of collections.",
                        "nullable": true
                    },
                    "error": {
                        "$ref": "#/components/schemas/E3E.API.Data.DataError"
                    },
                    "index": {
                        "type": "integer",
                        "description": "Gets or sets the index of the row.",
                        "format": "int32",
                        "default": -1
                    },
                    "isLocked": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether the row is checked out by another process."
                    },
                    "lockedMessage": {
                        "type": "string",
                        "description": "Gets or sets the message indicating whether the row is locked.",
                        "nullable": true
                    },
                    "rowState": {
                        "$ref": "#/components/schemas/E3E.API.Data.Models.DataRowStates"
                    },
                    "subclassId": {
                        "type": "string",
                        "description": "Gets or sets the subclass id of this row.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a single matter object."
            },
            "E3E.API.Cost.Models.CostCardCreateRequest": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to create a new Cost Card."
            },
            "E3E.API.Cost.Models.CostCardCreateResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a create request."
            },
            "E3E.API.Cost.Models.CostCardGetResponse": {
                "type": "object",
                "properties": {
                    "costCards": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCard"
                        },
                        "description": "Gets or sets a collection of matter objects.",
                        "nullable": true
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a get request."
            },
            "E3E.API.Cost.Models.CostCardGetSchemaResponse": {
                "type": "object",
                "properties": {
                    "schema": {
                        "$ref": "#/components/schemas/NextGen.Framework.Managers.ObjectMgr.Schema.IDataObjectSchema"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a request for a Matter schema."
            },
            "E3E.API.Cost.Models.CostCardPostRequest": {
                "type": "object",
                "properties": {
                    "itemId": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to post pending costcards."
            },
            "E3E.API.Cost.Models.CostCardPostResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    },
                    "failedCards": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Cost.Models.CostCard"
                        },
                        "description": "Gets or sets the costcards which failed to post.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a CostCardPostRequest."
            },
            "E3E.API.Cost.Models.CostCardTemplateResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to get a matter template."
            },
            "E3E.API.Cost.Models.CostCardUpdateRequest": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to create a new Cost Card."
            },
            "E3E.API.Cost.Models.CostCardUpdateResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a create request."
            },
            "E3E.API.Cost.Models.CostCardValidateRequest": {
                "type": "object",
                "properties": {
                    "itemId": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to validate a Cost Card."
            },
            "E3E.API.Cost.Models.CostCardValidateResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a validate request."
            },
            "E3E.API.Data.AccessType": {
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                "type": "integer",
                "description": "Access type enumeration.",
                "format": "int32"
            },
            "E3E.API.Data.DataError": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Gets or sets the error message.",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Gets or sets the exception type.",
                        "nullable": true
                    },
                    "severity": {
                        "$ref": "#/components/schemas/E3E.API.Data.DataErrorSeverity"
                    }
                },
                "additionalProperties": false,
                "description": "The model for errors and warnings in the object and attribute level."
            },
            "E3E.API.Data.DataErrorSeverity": {
                "enum": [
                    0,
                    1,
                    2
                ],
                "type": "integer",
                "description": "Enumeration for error severity.",
                "format": "int32"
            },
            "E3E.API.Data.DataType": {
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21
                ],
                "type": "integer",
                "description": "Enumeration for data type values for an attribute.",
                "format": "int32"
            },
            "E3E.API.Data.Models.Action": {
                "type": "object",
                "properties": {
                    "accessType": {
                        "$ref": "#/components/schemas/E3E.API.Data.AccessType"
                    }
                },
                "additionalProperties": false,
                "description": "Represents a data action."
            },
            "E3E.API.Data.Models.Attribute": {
                "type": "object",
                "properties": {
                    "accessType": {
                        "$ref": "#/components/schemas/E3E.API.Data.AccessType"
                    },
                    "aliasValue": {
                        "type": "string",
                        "description": "Gets or sets the alias value for the attribute. Applies to relationship attributes and it comes from the related archetype.",
                        "nullable": true
                    },
                    "dataType": {
                        "$ref": "#/components/schemas/E3E.API.Data.DataType"
                    },
                    "displayValue": {
                        "type": "string",
                        "description": "Gets or sets the display value of the attribute.",
                        "nullable": true
                    },
                    "error": {
                        "$ref": "#/components/schemas/E3E.API.Data.DataError"
                    },
                    "tooltip": {
                        "type": "string",
                        "description": "Gets or sets the tooltip for the attribute.",
                        "nullable": true
                    },
                    "value": {
                        "type": "string",
                        "description": "Gets or sets the value of the attribute.",
                        "nullable": true
                    },
                    "audit": {
                        "$ref": "#/components/schemas/E3E.API.Audit.AuditAttributeInfo"
                    }
                },
                "additionalProperties": false,
                "description": "Represents a data attribute."
            },
            "E3E.API.Data.Models.DataLoadState": {
                "enum": [
                    0,
                    1,
                    2
                ],
                "type": "integer",
                "description": "Enumeration for data load state.",
                "format": "int32"
            },
            "E3E.API.Data.Models.DataObject": {
                "type": "object",
                "properties": {
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/E3E.API.Data.Models.Action"
                        },
                        "description": "Gets or sets the collection level actions for this object.",
                        "nullable": true
                    },
                    "actualRowCount": {
                        "type": "integer",
                        "description": "Gets or sets the actual row count.",
                        "format": "int32",
                        "default": 0
                    },
                    "dataLoadState": {
                        "$ref": "#/components/schemas/E3E.API.Data.Models.DataLoadState"
                    },
                    "error": {
                        "$ref": "#/components/schemas/E3E.API.Data.DataError"
                    },
                    "groupCount": {
                        "type": "integer",
                        "description": "Gets or sets the number of groups in the first level.",
                        "format": "int32"
                    },
                    "groups": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/E3E.API.Data.Models.Group"
                        },
                        "description": "Gets or sets the groups in the data object.",
                        "nullable": true
                    },
                    "header": {
                        "$ref": "#/components/schemas/E3E.API.Data.Models.Group"
                    },
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the Id of the data object.",
                        "nullable": true
                    },
                    "objectId": {
                        "type": "string",
                        "description": "Gets or sets the Id of the object.",
                        "nullable": true
                    },
                    "rowCount": {
                        "type": "integer",
                        "description": "Gets or sets the row count.",
                        "format": "int32"
                    },
                    "rows": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/E3E.API.Data.Models.DataRow"
                        },
                        "description": "Gets or sets the rows in this data object.",
                        "nullable": true
                    },
                    "totals": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Gets or sets the totals in this collection.",
                        "nullable": true
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Data.Models.ErrorInfo"
                        },
                        "description": "Gets or sets list of errors. Contains all errors, even for not loaded rows.",
                        "nullable": true
                    },
                    "editedGroup": {
                        "$ref": "#/components/schemas/E3E.API.Data.Models.Group"
                    },
                    "containsAudit": {
                        "type": "boolean",
                        "description": "Gets or sets contains audit.",
                        "default": false
                    },
                    "isProformaCommentsEnabled": {
                        "type": "boolean",
                        "description": "Gets or sets IsProformaCommentsEnabled.",
                        "default": false
                    }
                },
                "additionalProperties": false,
                "description": "Represents a data object."
            },
            "E3E.API.Data.Models.DataRow": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the Id of the row.",
                        "nullable": true
                    },
                    "accessType": {
                        "$ref": "#/components/schemas/E3E.API.Data.AccessType"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/E3E.API.Data.Models.Action"
                        },
                        "description": "Gets or sets the actions in this row that are not enabled (either disabled or hidden).",
                        "nullable": true
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/E3E.API.Data.Models.Attribute"
                        },
                        "description": "Gets or sets the attributes in this row.",
                        "nullable": true
                    },
                    "childObjects": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/E3E.API.Data.Models.DataObject"
                        },
                        "description": "Gets or sets the child objects for this row.",
                        "nullable": true
                    },
                    "error": {
                        "$ref": "#/components/schemas/E3E.API.Data.DataError"
                    },
                    "attachmentCount": {
                        "type": "integer",
                        "description": "Gets or sets the attachment count for the row.",
                        "format": "int32"
                    },
                    "hasComment": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether the row has a comment for collaboration."
                    },
                    "index": {
                        "type": "integer",
                        "description": "Gets or sets the index of the row.",
                        "format": "int32",
                        "default": -1
                    },
                    "isConfidential": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether the row is confidential."
                    },
                    "isLocked": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether the row is checked out by another process."
                    },
                    "lockedMessage": {
                        "type": "string",
                        "description": "Gets or sets the message indicating whether the row is locked.",
                        "nullable": true
                    },
                    "rowState": {
                        "$ref": "#/components/schemas/E3E.API.Data.Models.DataRowStates"
                    },
                    "subclassId": {
                        "type": "string",
                        "description": "Gets or sets the subclass id of this row.",
                        "nullable": true
                    },
                    "containsAudit": {
                        "type": "boolean",
                        "description": "Gets or sets the containsAudit.",
                        "default": false
                    }
                },
                "additionalProperties": false,
                "description": "Represents a row in the data object."
            },
            "E3E.API.Data.Models.DataRowStates": {
                "enum": [
                    1,
                    2,
                    4
                ],
                "type": "integer",
                "description": "Enumeration for data row state.",
                "format": "int32"
            },
            "E3E.API.Data.Models.ErrorInfo": {
                "type": "object",
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/E3E.API.Data.DataError"
                    },
                    "rowId": {
                        "type": "string",
                        "description": "Gets or sets optional Id of the row where error has occured.",
                        "nullable": true
                    },
                    "index": {
                        "type": "integer",
                        "description": "Gets or sets row index where error has occured.",
                        "format": "int32",
                        "nullable": true
                    },
                    "attributeId": {
                        "type": "string",
                        "description": "Gets or sets id of the attribute (if any) where error has occured.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents error information"
            },
            "E3E.API.Data.Models.Group": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id of the Group.",
                        "nullable": true
                    },
                    "groupCount": {
                        "type": "integer",
                        "description": "Gets or sets the number of groups in the next level.",
                        "format": "int32"
                    },
                    "groups": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/E3E.API.Data.Models.Group"
                        },
                        "description": "Gets or sets the groups within this group.",
                        "nullable": true
                    },
                    "rowCount": {
                        "type": "integer",
                        "description": "Gets or sets the row count.",
                        "format": "int32"
                    },
                    "rowOffset": {
                        "type": "integer",
                        "description": "Gets or sets the row offset.",
                        "format": "int32"
                    },
                    "rows": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/E3E.API.Data.Models.DataRow"
                        },
                        "description": "Gets or sets the data rows under this group.",
                        "nullable": true
                    },
                    "totals": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Gets or sets the totals for this group.",
                        "nullable": true
                    },
                    "editedGroup": {
                        "$ref": "#/components/schemas/E3E.API.Data.Models.Group"
                    }
                },
                "additionalProperties": false,
                "description": "Represents a group in data."
            },
            "E3E.API.Data.Models.RootData": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the Id of the interface data.",
                        "nullable": true
                    },
                    "objects": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/E3E.API.Data.Models.DataObject"
                        },
                        "description": "Gets the objects in this interface data.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents data returned from server."
            },
            "E3E.API.DataObject.Models.AttributesFilterModelWithChildren": {
                "type": "object",
                "properties": {
                    "attributesToInclude": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "filterXOQL": {
                        "type": "string",
                        "nullable": true
                    },
                    "filter": {
                        "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicateGroup"
                    },
                    "childObjectsToInclude": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters that allow filtering E3E.API.DataObject.Models.DataObjectModelBase by attributes and children."
            },
            "E3E.API.DataObject.Models.DataObjectGetResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Standard response to a get request."
            },
            "E3E.API.DataObject.Models.DataObjectLite": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets unique id associated with the object.",
                        "nullable": true
                    },
                    "accessType": {
                        "$ref": "#/components/schemas/E3E.API.Data.AccessType"
                    },
                    "dataState": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteState"
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/E3E.API.Data.Models.Attribute"
                        },
                        "description": "Gets or sets the attributes.",
                        "nullable": true
                    },
                    "childObjects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                        },
                        "description": "Gets or sets the child objects for this data object. This is a collection of collections.",
                        "nullable": true
                    },
                    "error": {
                        "$ref": "#/components/schemas/E3E.API.Data.DataError"
                    },
                    "index": {
                        "type": "integer",
                        "description": "Gets or sets the index of the row.",
                        "format": "int32",
                        "default": -1
                    },
                    "isLocked": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether the row is checked out by another process."
                    },
                    "lockedMessage": {
                        "type": "string",
                        "description": "Gets or sets the message indicating whether the row is locked.",
                        "nullable": true
                    },
                    "rowState": {
                        "$ref": "#/components/schemas/E3E.API.Data.Models.DataRowStates"
                    },
                    "subclassId": {
                        "type": "string",
                        "description": "Gets or sets the subclass id of this row.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents 3E data object and is serializable to JSON. Roughly equivalent to the E3E.API.Data.Models.DataRow class."
            },
            "E3E.API.DataObject.Models.DataObjectLiteCollection": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the Id of the data object.",
                        "nullable": true
                    },
                    "objectId": {
                        "type": "string",
                        "description": "Gets or sets the Id of the object.",
                        "nullable": true
                    },
                    "actualRowCount": {
                        "type": "integer",
                        "description": "Gets or sets the actual row count.",
                        "format": "int32",
                        "default": 0
                    },
                    "error": {
                        "$ref": "#/components/schemas/E3E.API.Data.DataError"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Data.Models.ErrorInfo"
                        },
                        "description": "Gets or sets list of errors. Contains all errors, even for not loaded rows.",
                        "nullable": true
                    },
                    "rows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLite"
                        },
                        "description": "Gets the collection of DataObjectLite.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a 3E data object collection and is serializable to JSON. Roughly equivalent to the E3E.API.Data.Models.DataObject class (i.e. RootData.Objects[0].DataObject)."
            },
            "E3E.API.DataObject.Models.DataObjectLiteState": {
                "enum": [
                    0,
                    1,
                    2
                ],
                "type": "integer",
                "description": "Data Object Lite state.",
                "format": "int32"
            },
            "E3E.API.DataObject.Models.DataObjectLookupResponse": {
                "type": "object",
                "properties": {
                    "findResult": {
                        "$ref": "#/components/schemas/E3E.API.Find.FindResult"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Lookup response."
            },
            "E3E.API.DataObjectModel.Models.DataObjectModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Gets or sets a model name.",
                        "nullable": true
                    },
                    "modelId": {
                        "type": "string",
                        "description": "Gets or sets the ID of a model.",
                        "format": "uuid"
                    },
                    "isGlobal": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether a model is user or global."
                    },
                    "canEdit": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether a model can be edited by a user."
                    }
                },
                "additionalProperties": false,
                "description": "Represents 3E data object model information."
            },
            "E3E.API.DataObjectModel.Models.DataObjectModelApplyResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Gets or sets an error message.",
                        "nullable": true
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "dataObject": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLite"
                    }
                },
                "additionalProperties": false,
                "description": "Standard response to an apply request."
            },
            "E3E.API.DataObjectModel.Models.DataObjectModelCreateRequest": {
                "required": [
                    "itemId",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Gets or sets a model name."
                    },
                    "itemId": {
                        "type": "string",
                        "description": "Gets or sets the ID of a data object that is going to be used to create a model.",
                        "format": "uuid"
                    },
                    "isGlobal": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether an user or a global model should be created."
                    }
                },
                "additionalProperties": false,
                "description": "Standard request to create a data object model."
            },
            "E3E.API.DataObjectModel.Models.DataObjectModelCreateResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Gets or sets an error message.",
                        "nullable": true
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "model": {
                        "$ref": "#/components/schemas/E3E.API.DataObjectModel.Models.DataObjectModel"
                    }
                },
                "additionalProperties": false,
                "description": "Standard response to a create request."
            },
            "E3E.API.DataObjectModel.Models.DataObjectModelDeleteRequest": {
                "required": [
                    "modelId"
                ],
                "type": "object",
                "properties": {
                    "modelId": {
                        "type": "string",
                        "description": "Gets or sets the ID of a model that is going to be deleted.",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false,
                "description": "The standard request to delete a data object model."
            },
            "E3E.API.DataObjectModel.Models.DataObjectModelDeleteResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Gets or sets an error message.",
                        "nullable": true
                    },
                    "success": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false,
                "description": "The standard response to a delete request."
            },
            "E3E.API.DataObjectModel.Models.DataObjectModelGetResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Gets or sets an error message.",
                        "nullable": true
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "models": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.DataObjectModel.Models.DataObjectModel"
                        },
                        "description": "Gets or sets a collection of models.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a get request."
            },
            "E3E.API.DataObjectModel.Models.DataObjectModelUpdateRequest": {
                "required": [
                    "modelId"
                ],
                "type": "object",
                "properties": {
                    "modelId": {
                        "type": "string",
                        "description": "Gets or sets the ID of a model that is going to be updated.",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets a model name.",
                        "nullable": true
                    },
                    "isGlobal": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether an user or a global model should be updated.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Standard request to update a data object model."
            },
            "E3E.API.DataObjectModel.Models.DataObjectModelUpdateResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Gets or sets an error message.",
                        "nullable": true
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "model": {
                        "$ref": "#/components/schemas/E3E.API.DataObjectModel.Models.DataObjectModel"
                    }
                },
                "additionalProperties": false,
                "description": "Standard response to an update request."
            },
            "E3E.API.DataSecurity.Models.Wall": {
                "type": "object",
                "properties": {
                    "index": {
                        "type": "integer",
                        "description": "Gets or sets the wall index.",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the wall name.",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Gets or sets the wall description.",
                        "nullable": true
                    },
                    "wallType": {
                        "$ref": "#/components/schemas/E3E.API.DataSecurity.Models.WallType"
                    },
                    "primaryContact": {
                        "$ref": "#/components/schemas/E3E.API.DataSecurity.Models.WallUser"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or set the list of errors associated with the wall.",
                        "nullable": true
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.DataSecurity.Models.WallUser"
                        },
                        "description": "Gets or sets the wall users.",
                        "nullable": true
                    },
                    "matters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.DataSecurity.Models.WallMatter"
                        },
                        "description": "Gets or sets the wall matters.",
                        "nullable": true
                    },
                    "clients": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.DataSecurity.Models.WallClient"
                        },
                        "description": "Gets or sets the wall clients.",
                        "nullable": true
                    },
                    "entities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.DataSecurity.Models.WallEntity"
                        },
                        "description": "Gets or sets the wall entities.",
                        "nullable": true
                    },
                    "vendors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.DataSecurity.Models.WallVendor"
                        },
                        "description": "Gets or sets the wall vendors.",
                        "nullable": true
                    },
                    "payors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.DataSecurity.Models.WallPayor"
                        },
                        "description": "Gets or sets the wall payors.",
                        "nullable": true
                    },
                    "timekeepers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.DataSecurity.Models.WallTimekeeper"
                        },
                        "description": "Gets or sets the wall timekeepers.",
                        "nullable": true
                    },
                    "clientPredicates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.DataSecurity.Models.WallClientPredicate"
                        },
                        "description": "Gets or sets the wall client predicates.",
                        "nullable": true
                    },
                    "matterPredicates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.DataSecurity.Models.WallMatterPredicate"
                        },
                        "description": "Gets or sets the wall matter predicates.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a data security wall."
            },
            "E3E.API.DataSecurity.Models.WallClient": {
                "type": "object",
                "properties": {
                    "isDeleted": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether the child is going to be deleted."
                    },
                    "error": {
                        "type": "string",
                        "description": "Gets or set the error related to the child.",
                        "nullable": true
                    },
                    "clientIndex": {
                        "type": "integer",
                        "description": "Gets or sets the client index.",
                        "format": "int32"
                    },
                    "number": {
                        "type": "string",
                        "description": "Gets or sets the client number.",
                        "nullable": true
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Gets or sets the client display name.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a LxWallClient record."
            },
            "E3E.API.DataSecurity.Models.WallClientPredicate": {
                "type": "object",
                "properties": {
                    "isDeleted": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether the child is going to be deleted."
                    },
                    "error": {
                        "type": "string",
                        "description": "Gets or set the error related to the child.",
                        "nullable": true
                    },
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the client predicate ID.",
                        "format": "uuid"
                    },
                    "cliType": {
                        "type": "string",
                        "description": "Gets or sets the client type.",
                        "nullable": true
                    },
                    "cliCategory": {
                        "type": "string",
                        "description": "Gets or sets the client category.",
                        "nullable": true
                    },
                    "cliAttribute": {
                        "type": "string",
                        "description": "Gets or sets the client attribute.",
                        "nullable": true
                    },
                    "office": {
                        "type": "string",
                        "description": "Gets or sets the office.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a LxWallClient record."
            },
            "E3E.API.DataSecurity.Models.WallEntity": {
                "type": "object",
                "properties": {
                    "isDeleted": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether the child is going to be deleted."
                    },
                    "error": {
                        "type": "string",
                        "description": "Gets or set the error related to the child.",
                        "nullable": true
                    },
                    "entIndex": {
                        "type": "integer",
                        "description": "Gets or sets the entity index.",
                        "format": "int32"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Gets or sets the entity display name.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a LxWallEntity record."
            },
            "E3E.API.DataSecurity.Models.WallMatter": {
                "type": "object",
                "properties": {
                    "isDeleted": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether the child is going to be deleted."
                    },
                    "error": {
                        "type": "string",
                        "description": "Gets or set the error related to the child.",
                        "nullable": true
                    },
                    "mattIndex": {
                        "type": "integer",
                        "description": "Gets or sets the matter index.",
                        "format": "int32"
                    },
                    "number": {
                        "type": "string",
                        "description": "Gets or sets the matter number.",
                        "nullable": true
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Gets or sets the matter display name.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a LxWallMatter record."
            },
            "E3E.API.DataSecurity.Models.WallMatterPredicate": {
                "type": "object",
                "properties": {
                    "isDeleted": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether the child is going to be deleted."
                    },
                    "error": {
                        "type": "string",
                        "description": "Gets or set the error related to the child.",
                        "nullable": true
                    },
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the matter predicate ID.",
                        "format": "uuid"
                    },
                    "matterType": {
                        "type": "string",
                        "description": "Gets or sets the matter type.",
                        "nullable": true
                    },
                    "mattCategory": {
                        "type": "string",
                        "description": "Gets or sets the matter category.",
                        "nullable": true
                    },
                    "mattAttribute": {
                        "type": "string",
                        "description": "Gets or sets the matter attribute.",
                        "nullable": true
                    },
                    "billingOffice": {
                        "type": "string",
                        "description": "Gets or sets the billing office.",
                        "nullable": true
                    },
                    "spvTkpr": {
                        "type": "integer",
                        "description": "Gets or sets the spv timekeeper.",
                        "format": "int32",
                        "nullable": true
                    },
                    "department": {
                        "type": "string",
                        "description": "Gets or sets the department.",
                        "nullable": true
                    },
                    "section": {
                        "type": "string",
                        "description": "Gets or sets the section.",
                        "nullable": true
                    },
                    "practiceGroup": {
                        "type": "string",
                        "description": "Gets or sets the practice group.",
                        "nullable": true
                    },
                    "tkprTeam": {
                        "type": "string",
                        "description": "Gets or sets the timekeeper team.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a LxWallMatterPredicate record."
            },
            "E3E.API.DataSecurity.Models.WallPayor": {
                "type": "object",
                "properties": {
                    "isDeleted": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether the child is going to be deleted."
                    },
                    "error": {
                        "type": "string",
                        "description": "Gets or set the error related to the child.",
                        "nullable": true
                    },
                    "payorIndex": {
                        "type": "integer",
                        "description": "Gets or sets the payor index.",
                        "format": "int32"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Gets or sets the payor display name.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a LxWallPayor record."
            },
            "E3E.API.DataSecurity.Models.WallResult": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether the operation has succeed."
                    },
                    "message": {
                        "type": "string",
                        "description": "Gets or sets a message from the underlying process.",
                        "nullable": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.DataSecurity.Models.Wall"
                        },
                        "description": "A list of the walls have been processed.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a result of a security wall operation."
            },
            "E3E.API.DataSecurity.Models.WallTimekeeper": {
                "type": "object",
                "properties": {
                    "isDeleted": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether the child is going to be deleted."
                    },
                    "error": {
                        "type": "string",
                        "description": "Gets or set the error related to the child.",
                        "nullable": true
                    },
                    "tkprIndex": {
                        "type": "integer",
                        "description": "Gets or sets the timekeeper index.",
                        "format": "int32"
                    },
                    "number": {
                        "type": "string",
                        "description": "Gets or sets the timekeeper number.",
                        "nullable": true
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Gets or sets the timekeeper display name.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a LxWallTimekeeper record."
            },
            "E3E.API.DataSecurity.Models.WallType": {
                "enum": [
                    0,
                    1,
                    2,
                    3
                ],
                "type": "integer",
                "description": "Represents a data security wall type.",
                "format": "int32"
            },
            "E3E.API.DataSecurity.Models.WallUser": {
                "type": "object",
                "properties": {
                    "isDeleted": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether the child is going to be deleted."
                    },
                    "error": {
                        "type": "string",
                        "description": "Gets or set the error related to the child.",
                        "nullable": true
                    },
                    "userId": {
                        "type": "string",
                        "description": "Gets or sets the user ID.",
                        "format": "uuid"
                    },
                    "userName": {
                        "type": "string",
                        "description": "Gets or sets the user name.",
                        "nullable": true
                    },
                    "userType": {
                        "type": "string",
                        "description": "Gets or sets the user type.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a LxWallUser record."
            },
            "E3E.API.DataSecurity.Models.WallVendor": {
                "type": "object",
                "properties": {
                    "isDeleted": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether the child is going to be deleted."
                    },
                    "error": {
                        "type": "string",
                        "description": "Gets or set the error related to the child.",
                        "nullable": true
                    },
                    "vendorIndex": {
                        "type": "integer",
                        "description": "Gets or sets the vendor index.",
                        "format": "int32"
                    },
                    "vendorNum": {
                        "type": "string",
                        "description": "Gets or sets the vendor number.",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the vendor display name.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a LxWallVendor record."
            },
            "E3E.API.Entity.Models.Entity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets unique id associated with the object.",
                        "nullable": true
                    },
                    "accessType": {
                        "$ref": "#/components/schemas/E3E.API.Data.AccessType"
                    },
                    "dataState": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteState"
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/E3E.API.Data.Models.Attribute"
                        },
                        "description": "Gets or sets the attributes.",
                        "nullable": true
                    },
                    "childObjects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                        },
                        "description": "Gets or sets the child objects for this data object. This is a collection of collections.",
                        "nullable": true
                    },
                    "error": {
                        "$ref": "#/components/schemas/E3E.API.Data.DataError"
                    },
                    "index": {
                        "type": "integer",
                        "description": "Gets or sets the index of the row.",
                        "format": "int32",
                        "default": -1
                    },
                    "isLocked": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether the row is checked out by another process."
                    },
                    "lockedMessage": {
                        "type": "string",
                        "description": "Gets or sets the message indicating whether the row is locked.",
                        "nullable": true
                    },
                    "rowState": {
                        "$ref": "#/components/schemas/E3E.API.Data.Models.DataRowStates"
                    },
                    "subclassId": {
                        "type": "string",
                        "description": "Gets or sets the subclass id of this row.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a single Entity object."
            },
            "E3E.API.Entity.Models.EntityCloneRequest": {
                "type": "object",
                "properties": {
                    "itemId": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to clone a matter."
            },
            "E3E.API.Entity.Models.EntityCloneResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    },
                    "itemId": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a clone request."
            },
            "E3E.API.Entity.Models.EntityCreateRequest": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to create a new Entity."
            },
            "E3E.API.Entity.Models.EntityCreateResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a create request."
            },
            "E3E.API.Entity.Models.EntityDeleteRequest": {
                "type": "object",
                "properties": {
                    "itemId": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to delete an Entity."
            },
            "E3E.API.Entity.Models.EntityDeleteResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to an Entity delete request."
            },
            "E3E.API.Entity.Models.EntityGetRequest": {
                "type": "object",
                "properties": {
                    "entityId": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Gets or sets the EntityIds.",
                        "nullable": true
                    },
                    "entityIndex": {
                        "maximum": 2147483647,
                        "minimum": 0,
                        "type": "integer",
                        "description": "Gets or sets the EntityIndex.",
                        "format": "int32"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Gets or sets the DisplayName (Entity Alias).",
                        "nullable": true
                    },
                    "advancedFilter": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.AttributesFilterModelWithChildren"
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a get request for matters."
            },
            "E3E.API.Entity.Models.EntityGetResponse": {
                "type": "object",
                "properties": {
                    "persons": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Entity.Models.Entity"
                        },
                        "description": "Gets or sets a collection of EntityPerson objects.",
                        "nullable": true
                    },
                    "organizations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Entity.Models.Entity"
                        },
                        "description": "Gets or sets a collection of EntityOrg objects.",
                        "nullable": true
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a get request."
            },
            "E3E.API.Entity.Models.EntityGetSchemaResponse": {
                "type": "object",
                "properties": {
                    "schema": {
                        "$ref": "#/components/schemas/NextGen.Framework.Managers.ObjectMgr.Schema.IDataObjectSchema"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a request for an Entity schema."
            },
            "E3E.API.Entity.Models.EntityTemplateResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to get an Entity template."
            },
            "E3E.API.Entity.Models.EntityUpdateRequest": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to update an Entity."
            },
            "E3E.API.Entity.Models.EntityUpdateResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to an update request."
            },
            "E3E.API.Find.FindResult": {
                "type": "object",
                "properties": {
                    "rowCount": {
                        "type": "integer",
                        "description": "Gets or Sets the RowCount result.",
                        "format": "int32"
                    },
                    "rows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Find.FindResultRow"
                        },
                        "description": "Gets or Sets the Rows dictionary. The dictionary key will be the item id in worklist mode and the key value in lookup mode.",
                        "nullable": true
                    },
                    "isExactMatch": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether if resultset is ExactMatch."
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Find.ResultField"
                        },
                        "description": "Gets or Sets the Fields dictionary.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Defines a search result"
            },
            "E3E.API.Find.FindResultRow": {
                "type": "object",
                "properties": {
                    "rowKey": {
                        "type": "string",
                        "description": "Gets or Sets the row's Key value.",
                        "nullable": true
                    },
                    "alias": {
                        "type": "string",
                        "description": "Gets or Sets the Alias value. This is used in lookup mode only",
                        "nullable": true
                    },
                    "processItemId": {
                        "type": "string",
                        "description": "Gets or sets the process item id to identify whether the record is Locked. This is used in Worklist mode only",
                        "format": "uuid"
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Gets or Sets the result attributes. The dictionary key will be the attribute id",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Define a Result value"
            },
            "E3E.API.Find.ResultField": {
                "type": "object",
                "properties": {
                    "caption": {
                        "type": "string",
                        "description": "Gets or sets the Caption.",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the Name/Id.",
                        "nullable": true
                    },
                    "type": {
                        "$ref": "#/components/schemas/E3E.API.Data.DataType"
                    }
                },
                "additionalProperties": false,
                "description": "Model for a result field."
            },
            "E3E.API.Matter.Models.Matter": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets unique id associated with the object.",
                        "nullable": true
                    },
                    "accessType": {
                        "$ref": "#/components/schemas/E3E.API.Data.AccessType"
                    },
                    "dataState": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteState"
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/E3E.API.Data.Models.Attribute"
                        },
                        "description": "Gets or sets the attributes.",
                        "nullable": true
                    },
                    "childObjects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                        },
                        "description": "Gets or sets the child objects for this data object. This is a collection of collections.",
                        "nullable": true
                    },
                    "error": {
                        "$ref": "#/components/schemas/E3E.API.Data.DataError"
                    },
                    "index": {
                        "type": "integer",
                        "description": "Gets or sets the index of the row.",
                        "format": "int32",
                        "default": -1
                    },
                    "isLocked": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether the row is checked out by another process."
                    },
                    "lockedMessage": {
                        "type": "string",
                        "description": "Gets or sets the message indicating whether the row is locked.",
                        "nullable": true
                    },
                    "rowState": {
                        "$ref": "#/components/schemas/E3E.API.Data.Models.DataRowStates"
                    },
                    "subclassId": {
                        "type": "string",
                        "description": "Gets or sets the subclass id of this row.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a single matter object."
            },
            "E3E.API.Matter.Models.MatterCreateRequest": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to create a new Matter."
            },
            "E3E.API.Matter.Models.MatterCreateResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a create request."
            },
            "E3E.API.Matter.Models.MatterGetResponse": {
                "type": "object",
                "properties": {
                    "matters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Matter.Models.Matter"
                        },
                        "description": "Gets or sets a collection of matter objects.",
                        "nullable": true
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a get request."
            },
            "E3E.API.Matter.Models.MatterGetSchemaResponse": {
                "type": "object",
                "properties": {
                    "schema": {
                        "$ref": "#/components/schemas/NextGen.Framework.Managers.ObjectMgr.Schema.IDataObjectSchema"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a request for a Matter schema."
            },
            "E3E.API.Matter.Models.MatterNicknameGetResponse": {
                "type": "object",
                "properties": {
                    "matterNicknames": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.MatterNickname.Models.MatterNickname"
                        },
                        "description": "Gets or sets a collection of matter objects.",
                        "nullable": true
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a get request."
            },
            "E3E.API.Matter.Models.MatterTemplateResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to get a matter template."
            },
            "E3E.API.Matter.Models.MatterUpdateRequest": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to update a Matter."
            },
            "E3E.API.Matter.Models.MatterUpdateResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to an update request."
            },
            "E3E.API.Matter.Models.MatterValidateRequest": {
                "type": "object",
                "properties": {
                    "itemId": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to validate a Matter."
            },
            "E3E.API.Matter.Models.MatterValidateResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a validate request."
            },
            "E3E.API.Matter.Models.TempMatterGetResponse": {
                "type": "object",
                "properties": {
                    "tempMatters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.TempMatter.Models.TempMatter"
                        },
                        "description": "Gets or sets a collection of temporary matter objects.",
                        "nullable": true
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a get request."
            },
            "E3E.API.MatterNickname.Models.MatterNickname": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets unique id associated with the object.",
                        "nullable": true
                    },
                    "accessType": {
                        "$ref": "#/components/schemas/E3E.API.Data.AccessType"
                    },
                    "dataState": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteState"
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/E3E.API.Data.Models.Attribute"
                        },
                        "description": "Gets or sets the attributes.",
                        "nullable": true
                    },
                    "childObjects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                        },
                        "description": "Gets or sets the child objects for this data object. This is a collection of collections.",
                        "nullable": true
                    },
                    "error": {
                        "$ref": "#/components/schemas/E3E.API.Data.DataError"
                    },
                    "index": {
                        "type": "integer",
                        "description": "Gets or sets the index of the row.",
                        "format": "int32",
                        "default": -1
                    },
                    "isLocked": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether the row is checked out by another process."
                    },
                    "lockedMessage": {
                        "type": "string",
                        "description": "Gets or sets the message indicating whether the row is locked.",
                        "nullable": true
                    },
                    "rowState": {
                        "$ref": "#/components/schemas/E3E.API.Data.Models.DataRowStates"
                    },
                    "subclassId": {
                        "type": "string",
                        "description": "Gets or sets the subclass id of this row.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a single matter nickname object."
            },
            "E3E.API.MatterNickname.Models.MatterNicknameCreateRequest": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to create a new Matter Nickname."
            },
            "E3E.API.MatterNickname.Models.MatterNicknameCreateResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a create request."
            },
            "E3E.API.MatterNickname.Models.MatterNicknameDeleteRequest": {
                "type": "object",
                "properties": {
                    "itemId": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to delete a nickname matter."
            },
            "E3E.API.MatterNickname.Models.MatterNicknameDeleteResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a matter nickname delete request."
            },
            "E3E.API.MatterNickname.Models.MatterNicknameUpdateRequest": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to update a Matter Nickname."
            },
            "E3E.API.MatterNickname.Models.MatterNicknameUpdateResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to an update request."
            },
            "E3E.API.NBI.Models.NBI": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets unique id associated with the object.",
                        "nullable": true
                    },
                    "accessType": {
                        "$ref": "#/components/schemas/E3E.API.Data.AccessType"
                    },
                    "dataState": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteState"
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/E3E.API.Data.Models.Attribute"
                        },
                        "description": "Gets or sets the attributes.",
                        "nullable": true
                    },
                    "childObjects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                        },
                        "description": "Gets or sets the child objects for this data object. This is a collection of collections.",
                        "nullable": true
                    },
                    "error": {
                        "$ref": "#/components/schemas/E3E.API.Data.DataError"
                    },
                    "index": {
                        "type": "integer",
                        "description": "Gets or sets the index of the row.",
                        "format": "int32",
                        "default": -1
                    },
                    "isLocked": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether the row is checked out by another process."
                    },
                    "lockedMessage": {
                        "type": "string",
                        "description": "Gets or sets the message indicating whether the row is locked.",
                        "nullable": true
                    },
                    "rowState": {
                        "$ref": "#/components/schemas/E3E.API.Data.Models.DataRowStates"
                    },
                    "subclassId": {
                        "type": "string",
                        "description": "Gets or sets the subclass id of this row.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a Conflicts Search object."
            },
            "E3E.API.NBI.Models.NBICreateRequest": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to create a Conflicts New Business Intake - Legacy."
            },
            "E3E.API.NBI.Models.NBICreateResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a Conflicts New Business Request create request."
            },
            "E3E.API.NBI.Models.NBIGetResponse": {
                "type": "object",
                "properties": {
                    "nbIs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.NBI.Models.NBI"
                        },
                        "description": "Gets or sets a collection of Conflicts NBI objects.",
                        "nullable": true
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a Conflicts New Business Intake Get request."
            },
            "E3E.API.NBI.Models.NBITemplateResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to get a Conflicts NBI template."
            },
            "E3E.API.NBIWF.Models.NBIWF": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets unique id associated with the object.",
                        "nullable": true
                    },
                    "accessType": {
                        "$ref": "#/components/schemas/E3E.API.Data.AccessType"
                    },
                    "dataState": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteState"
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/E3E.API.Data.Models.Attribute"
                        },
                        "description": "Gets or sets the attributes.",
                        "nullable": true
                    },
                    "childObjects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                        },
                        "description": "Gets or sets the child objects for this data object. This is a collection of collections.",
                        "nullable": true
                    },
                    "error": {
                        "$ref": "#/components/schemas/E3E.API.Data.DataError"
                    },
                    "index": {
                        "type": "integer",
                        "description": "Gets or sets the index of the row.",
                        "format": "int32",
                        "default": -1
                    },
                    "isLocked": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether the row is checked out by another process."
                    },
                    "lockedMessage": {
                        "type": "string",
                        "description": "Gets or sets the message indicating whether the row is locked.",
                        "nullable": true
                    },
                    "rowState": {
                        "$ref": "#/components/schemas/E3E.API.Data.Models.DataRowStates"
                    },
                    "subclassId": {
                        "type": "string",
                        "description": "Gets or sets the subclass id of this row.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a Conflicts WF Search object."
            },
            "E3E.API.NBIWF.Models.NBIWFCreateRequest": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to create a New Business Intake WF."
            },
            "E3E.API.NBIWF.Models.NBIWFCreateResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a create request."
            },
            "E3E.API.NBIWF.Models.NBIWFGetResponse": {
                "type": "object",
                "properties": {
                    "nbiwFs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.NBIWF.Models.NBIWF"
                        },
                        "description": "Gets or sets a collection of NBI WF objects.",
                        "nullable": true
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a New Business Intake WF Get request."
            },
            "E3E.API.NBIWF.Models.NBIWFTemplateResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to get a NBI WF template."
            },
            "E3E.API.NBIWF.Models.NBIWFUpdateResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to an update request."
            },
            "E3E.API.Process.ProcessOutputResponseType": {
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                "type": "integer",
                "description": "Output response types.",
                "format": "int32"
            },
            "E3E.API.Query.SJQL.SJAttribute": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id of the attribute.",
                        "nullable": true
                    },
                    "aggregateFunction": {
                        "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJExpression_AggregateFunctions"
                    }
                },
                "additionalProperties": false,
                "description": "SJQL attribute."
            },
            "E3E.API.Query.SJQL.SJConditionalOperator": {
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21
                ],
                "type": "integer",
                "description": "Condition Operator enumeration",
                "format": "int32"
            },
            "E3E.API.Query.SJQL.SJConditionalOperatorUnit": {
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11
                ],
                "type": "integer",
                "description": "Units for Conditional Operator, currently only used for Dates.",
                "format": "int32"
            },
            "E3E.API.Query.SJQL.SJExpression_AggregateFunctions": {
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                "type": "integer",
                "description": "Aggregate functions.",
                "format": "int32"
            },
            "E3E.API.Query.SJQL.SJHint": {
                "type": "object",
                "properties": {
                    "hintType": {
                        "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJHint_SJHintType"
                    },
                    "value": {
                        "type": "integer",
                        "description": "Hint Value",
                        "format": "int32"
                    }
                },
                "additionalProperties": false,
                "description": "SJQL Hints"
            },
            "E3E.API.Query.SJQL.SJHint_SJHintType": {
                "enum": [
                    0,
                    1,
                    2
                ],
                "type": "integer",
                "description": "SJQL HintTypes",
                "format": "int32"
            },
            "E3E.API.Query.SJQL.SJJoin": {
                "type": "object",
                "properties": {
                    "from": {
                        "type": "string",
                        "description": "Gets or Sets the \"From\" Attribute for the Join. It can be \".\" notated and can start with an ArchetypeId. Archetype Id for the root archetype can be omitted. e.g. Client1.Number",
                        "nullable": true
                    },
                    "to": {
                        "type": "string",
                        "description": "Gets or Sets the \"To\" AttributeId for the Join. It needs to be \".\" notated and should start with the ArchtypeId e.g. TkprDate.StartDate",
                        "nullable": true
                    },
                    "isOuterJoin": {
                        "type": "boolean",
                        "description": "Gets or sets if this Join is an Outer Join.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a join"
            },
            "E3E.API.Query.SJQL.SJLogicalOperator": {
                "enum": [
                    0,
                    1,
                    2
                ],
                "type": "integer",
                "description": "Logical operator enumeration",
                "format": "int32"
            },
            "E3E.API.Query.SJQL.SJPredicate": {
                "type": "object",
                "properties": {
                    "attribute": {
                        "type": "string",
                        "description": "Gets or Sets the attribute Id. Can be \".\" notated. For attributes from the joined archetypes, it should start with the ArchetypeId. Root archetype id can be omitted. e.g. MattDate.Client1.Number.",
                        "nullable": true
                    },
                    "operator": {
                        "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJConditionalOperator"
                    },
                    "operatorUnit": {
                        "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJConditionalOperatorUnit"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or Sets the value.",
                        "nullable": true
                    },
                    "select": {
                        "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJSelect"
                    }
                },
                "additionalProperties": false,
                "description": "Defines a predicate"
            },
            "E3E.API.Query.SJQL.SJPredicateGroup": {
                "type": "object",
                "properties": {
                    "predicates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicate"
                        },
                        "description": "Gets or Sets predicates.",
                        "nullable": true
                    },
                    "operator": {
                        "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJLogicalOperator"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicateGroup"
                        },
                        "description": "Gets or Sets group of predicates based on a logical operator.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a group of predicates."
            },
            "E3E.API.Query.SJQL.SJSelect": {
                "type": "object",
                "properties": {
                    "archetype": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Gets or Sets the archetype id for the query",
                        "nullable": true
                    },
                    "archetypeType": {
                        "$ref": "#/components/schemas/E3E.API.AppObjectType"
                    },
                    "top": {
                        "type": "integer",
                        "description": "Gets or Sets the maximum number of rows to return",
                        "format": "int32",
                        "nullable": true
                    },
                    "attributes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or Sets the attributes for the select values. Can be \".\" notated. For attributes from the joined archetypes, it should start with the ArchetypeId. Root archetype id can be omitted. e.g. MattDate.Client1.Number.",
                        "nullable": true
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJAttribute"
                        },
                        "description": "Gets or Sets the attributes for the select values. Can be \".\" notated. For attributes from the joined archetypes, it should start with the ArchetypeId. Root archetype id can be omitted. e.g. MattDate.Client1.Number.",
                        "nullable": true
                    },
                    "where": {
                        "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicateGroup"
                    },
                    "joins": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJJoin"
                        },
                        "description": "Gets or Sets the Joins for the select statement",
                        "nullable": true
                    },
                    "sortBy": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJSortAttribute"
                        },
                        "description": "Gets or Sets the sort attributes for the select query. Can be \".\" notated. For attributes from the joined archetypes, it should start with the ArchetypeId. Root archetype id can be omitted. e.g. MattDate.Client1.Number.",
                        "nullable": true
                    },
                    "groupBy": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJAttribute"
                        },
                        "description": "GroupBy.",
                        "nullable": true
                    },
                    "isDistinct": {
                        "type": "boolean",
                        "description": "Select use Distinct."
                    },
                    "unionSelect": {
                        "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJSelect"
                    },
                    "hints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJHint"
                        },
                        "description": "Hints.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Select Query"
            },
            "E3E.API.Query.SJQL.SJSortAttribute": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id of the attribute.",
                        "nullable": true
                    },
                    "aggregateFunction": {
                        "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJExpression_AggregateFunctions"
                    },
                    "sortDirection": {
                        "$ref": "#/components/schemas/E3E.API.Query.SortDirection"
                    }
                },
                "additionalProperties": false,
                "description": "SJQL sort attribute."
            },
            "E3E.API.Query.SortAttribute": {
                "type": "object",
                "properties": {
                    "captionId": {
                        "type": "string",
                        "description": "Gets or sets the captionId of the attribute.",
                        "nullable": true
                    },
                    "caption": {
                        "type": "string",
                        "description": "Gets or sets the caption of the attribute.",
                        "nullable": true
                    },
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the id of the attribute.",
                        "nullable": true
                    },
                    "order": {
                        "type": "integer",
                        "description": "Gets or sets the order of the attribute.",
                        "format": "int32"
                    },
                    "sortDirection": {
                        "$ref": "#/components/schemas/E3E.API.Query.SortDirection"
                    },
                    "isHidden": {
                        "type": "boolean",
                        "description": "Gets or sets the deletion status of the attribute."
                    }
                },
                "additionalProperties": false,
                "description": "Represents sort attributes returned in query."
            },
            "E3E.API.Query.SortDirection": {
                "enum": [
                    0,
                    1,
                    -1
                ],
                "type": "integer",
                "description": "Sort direction enumeration for sort attributes.",
                "format": "int32"
            },
            "E3E.API.RelatedParty.Models.RelatedParty": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets unique id associated with the object.",
                        "nullable": true
                    },
                    "accessType": {
                        "$ref": "#/components/schemas/E3E.API.Data.AccessType"
                    },
                    "dataState": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteState"
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/E3E.API.Data.Models.Attribute"
                        },
                        "description": "Gets or sets the attributes.",
                        "nullable": true
                    },
                    "childObjects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                        },
                        "description": "Gets or sets the child objects for this data object. This is a collection of collections.",
                        "nullable": true
                    },
                    "error": {
                        "$ref": "#/components/schemas/E3E.API.Data.DataError"
                    },
                    "index": {
                        "type": "integer",
                        "description": "Gets or sets the index of the row.",
                        "format": "int32",
                        "default": -1
                    },
                    "isLocked": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether the row is checked out by another process."
                    },
                    "lockedMessage": {
                        "type": "string",
                        "description": "Gets or sets the message indicating whether the row is locked.",
                        "nullable": true
                    },
                    "rowState": {
                        "$ref": "#/components/schemas/E3E.API.Data.Models.DataRowStates"
                    },
                    "subclassId": {
                        "type": "string",
                        "description": "Gets or sets the subclass id of this row.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a single RelatedParty object."
            },
            "E3E.API.RelatedParty.Models.RelatedPartyCreateRequest": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to create a new RelatedParty."
            },
            "E3E.API.RelatedParty.Models.RelatedPartyCreateResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a create request."
            },
            "E3E.API.RelatedParty.Models.RelatedPartyGetResponse": {
                "type": "object",
                "properties": {
                    "relatedParties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.RelatedParty.Models.RelatedParty"
                        },
                        "description": "Gets or sets a collection of RelatedParty objects.",
                        "nullable": true
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a get request."
            },
            "E3E.API.RelatedParty.Models.RelatedPartyGetSchemaResponse": {
                "type": "object",
                "properties": {
                    "schema": {
                        "$ref": "#/components/schemas/NextGen.Framework.Managers.ObjectMgr.Schema.IDataObjectSchema"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a request for a RelatedParty schema."
            },
            "E3E.API.RelatedParty.Models.RelatedPartyTemplateResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to get a RelatedParty template."
            },
            "E3E.API.RelatedParty.Models.RelatedPartyUpdateRequest": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to update a RelatedParty."
            },
            "E3E.API.RelatedParty.Models.RelatedPartyUpdateResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to an update request."
            },
            "E3E.API.RelatedParty.Models.RelatedPartyValidateRequest": {
                "type": "object",
                "properties": {
                    "itemId": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to validate a RelatedParty."
            },
            "E3E.API.RelatedParty.Models.RelatedPartyValidateResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a validate request."
            },
            "E3E.API.SpellCheck.Mistake": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "description": "Gets or sets value",
                        "nullable": true
                    },
                    "suggestions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or sets value suggestion.",
                        "nullable": true
                    },
                    "repeatedWord": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether  mistake is repeatedword error."
                    },
                    "caseFailure": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether mistake is CaseFailure error."
                    },
                    "start": {
                        "type": "integer",
                        "description": "Gets or sets start index.",
                        "format": "int32"
                    },
                    "length": {
                        "type": "integer",
                        "description": "Gets or sets value legth.",
                        "format": "int32"
                    },
                    "info": {
                        "type": "string",
                        "description": "Gets or sets value attribute info.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Mistake class"
            },
            "E3E.API.TempMatter.Models.TempMatter": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets unique id associated with the object.",
                        "nullable": true
                    },
                    "accessType": {
                        "$ref": "#/components/schemas/E3E.API.Data.AccessType"
                    },
                    "dataState": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteState"
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/E3E.API.Data.Models.Attribute"
                        },
                        "description": "Gets or sets the attributes.",
                        "nullable": true
                    },
                    "childObjects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                        },
                        "description": "Gets or sets the child objects for this data object. This is a collection of collections.",
                        "nullable": true
                    },
                    "error": {
                        "$ref": "#/components/schemas/E3E.API.Data.DataError"
                    },
                    "index": {
                        "type": "integer",
                        "description": "Gets or sets the index of the row.",
                        "format": "int32",
                        "default": -1
                    },
                    "isLocked": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether the row is checked out by another process."
                    },
                    "lockedMessage": {
                        "type": "string",
                        "description": "Gets or sets the message indicating whether the row is locked.",
                        "nullable": true
                    },
                    "rowState": {
                        "$ref": "#/components/schemas/E3E.API.Data.Models.DataRowStates"
                    },
                    "subclassId": {
                        "type": "string",
                        "description": "Gets or sets the subclass id of this row.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a single TempMatter object."
            },
            "E3E.API.TempMatter.Models.TempMatterCreateRequest": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to create a new Temp Matter."
            },
            "E3E.API.TempMatter.Models.TempMatterCreateResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a create request."
            },
            "E3E.API.TempMatter.Models.TempMatterDeleteResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a TempMatterDeleteRequest."
            },
            "E3E.API.TempMatter.Models.TempMatterReplaceRequest": {
                "required": [
                    "tempMatterId"
                ],
                "type": "object",
                "properties": {
                    "tempMatterId": {
                        "type": "string",
                        "description": "Gets or sets the Id of a temp matter.",
                        "format": "uuid"
                    },
                    "matterId": {
                        "type": "string",
                        "description": "Gets or sets the Id of an actual matter.",
                        "format": "uuid"
                    },
                    "matterIndex": {
                        "type": "integer",
                        "description": "Gets or sets the index of an actual matter.",
                        "format": "int32"
                    },
                    "timecardIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Gets or sets a collection of timecard Id for which a temp matter should be replaced with an actual matter.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to create a Temp Matter with an actual Matter."
            },
            "E3E.API.TempMatter.Models.TempMatterReplaceResponse": {
                "type": "object",
                "properties": {
                    "replacedTimecards": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Gets or sets a collection of timecards where a temp matter was replaced with an actual matter.",
                        "nullable": true
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a replace request."
            },
            "E3E.API.Time.Models.ActiveTimersResponse": {
                "type": "object",
                "properties": {
                    "activeTimersObjects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Data.Models.RootData"
                        },
                        "description": "Gets or sets the active timers.",
                        "nullable": true
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to ActiveTimersRequest."
            },
            "E3E.API.Time.Models.CalendarHours": {
                "type": "object",
                "properties": {
                    "startDate": {
                        "type": "string",
                        "description": "Gets or sets inclusive low boundary of the time period when actual.",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "Gets or sets exclusive high boundary of the time period when actual.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "sun": {
                        "type": "number",
                        "description": "Gets or sets the number of hours to be posted on Sunday.",
                        "format": "double"
                    },
                    "mon": {
                        "type": "number",
                        "description": "Gets or sets the number of hours to be posted on Monday.",
                        "format": "double"
                    },
                    "tue": {
                        "type": "number",
                        "description": "Gets or sets the number of hours to be posted on Tuesday.",
                        "format": "double"
                    },
                    "wen": {
                        "type": "number",
                        "description": "Gets or sets the number of hours to be posted on Wednesday.",
                        "format": "double"
                    },
                    "thu": {
                        "type": "number",
                        "description": "Gets or sets the number of hours to be posted on Thursday.",
                        "format": "double"
                    },
                    "fri": {
                        "type": "number",
                        "description": "Gets or sets the number of hours to be posted on Friday.",
                        "format": "double"
                    },
                    "sat": {
                        "type": "number",
                        "description": "Gets or sets the number of hours to be posted on Saturday.",
                        "format": "double"
                    }
                },
                "additionalProperties": false,
                "description": "Represents the number of hours expected to be posted during the weak."
            },
            "E3E.API.Time.Models.CalendarItem": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "description": "Gets or sets the date time has been reported.",
                        "format": "date-time"
                    },
                    "posted": {
                        "type": "number",
                        "description": "Gets or sets the number of posted hours.",
                        "format": "double"
                    },
                    "pending": {
                        "type": "number",
                        "description": "Gets or sets the number of pending hours.",
                        "format": "double"
                    },
                    "billable": {
                        "type": "number",
                        "description": "Gets or sets the number of billable hours.",
                        "format": "double"
                    },
                    "nonBillable": {
                        "type": "number",
                        "description": "Gets or sets the number of non-billable hours.",
                        "format": "double"
                    },
                    "unassigned": {
                        "type": "number",
                        "description": "Gets or sets the number of unassigned hours.",
                        "format": "double"
                    }
                },
                "additionalProperties": false,
                "description": "Represents the time has been reported for a specific date."
            },
            "E3E.API.Time.Models.CalendarReportGetResponse": {
                "type": "object",
                "properties": {
                    "days": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Time.Models.CalendarItem"
                        },
                        "description": "Gets or sets the time submitted per day.",
                        "nullable": true
                    },
                    "hours": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Time.Models.CalendarHours"
                        },
                        "description": "Gets or sets the Timekeeper calendar.",
                        "nullable": true
                    },
                    "holidays": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Time.Models.OfficeHoliday"
                        },
                        "description": "Gets or sets the office holidays.",
                        "nullable": true
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents calendar report response."
            },
            "E3E.API.Time.Models.OfficeHoliday": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "description": "Gets or sets the holiday date.",
                        "format": "date-time"
                    },
                    "description": {
                        "type": "string",
                        "description": "Gets or sets the holiday description.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the date marked as a Holiday for the office."
            },
            "E3E.API.Time.Models.PostedTimecard": {
                "type": "object",
                "properties": {
                    "timeCardPendingId": {
                        "type": "string",
                        "description": "Gets or sets the ID of pending timecard posted.",
                        "format": "uuid"
                    },
                    "timeCardId": {
                        "type": "string",
                        "description": "Gets or sets the ID of posted timecard posted.",
                        "format": "uuid"
                    },
                    "timeIndex": {
                        "type": "integer",
                        "description": "Gets or sets the Index of timecard created.",
                        "format": "int32"
                    },
                    "timeCard": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLite"
                    }
                },
                "additionalProperties": false,
                "description": "Represent identifier of time card has been posted."
            },
            "E3E.API.Time.Models.StartStopTimerRequest": {
                "required": [
                    "timecardIndex",
                    "today"
                ],
                "type": "object",
                "properties": {
                    "today": {
                        "type": "string",
                        "description": "Gets or sets the client's current date/time.",
                        "format": "date-time"
                    },
                    "timecardIndex": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Gets or sets the timecard index."
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to start a timer."
            },
            "E3E.API.Time.Models.StartStopTimerResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    },
                    "fwkMessage": {
                        "type": "string",
                        "description": "Gets or sets a message generated by FWK code.",
                        "nullable": true
                    },
                    "timerPeriodObjects": {
                        "$ref": "#/components/schemas/E3E.API.Data.Models.RootData"
                    }
                },
                "additionalProperties": false,
                "description": "Response to E3E.API.Time.Models.TimecardCreateRequest."
            },
            "E3E.API.Time.Models.TimecaptureLookupRequest": {
                "required": [
                    "attribute",
                    "itemId"
                ],
                "type": "object",
                "properties": {
                    "itemId": {
                        "type": "string",
                        "description": "Gets or sets a timecapture item ID.",
                        "format": "uuid"
                    },
                    "attribute": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Gets or sets an attribute ID to search against."
                    },
                    "text": {
                        "type": "string",
                        "description": "Gets or sets a quick find text.",
                        "nullable": true
                    },
                    "topRows": {
                        "type": "integer",
                        "description": "Gets or sets the TopRows (the maximum value of returned record).",
                        "format": "int32"
                    },
                    "sortAttributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Query.SortAttribute"
                        },
                        "description": "Gets or sets the SortAttributes.",
                        "nullable": true
                    },
                    "quickFindFilter": {
                        "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicateGroup"
                    },
                    "filter": {
                        "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicateGroup"
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to lookup against a timecapture item."
            },
            "E3E.API.Time.Models.TimecaptureMistakes": {
                "type": "object",
                "properties": {
                    "itemId": {
                        "type": "string",
                        "description": "Gets or sets a timecard item ID.",
                        "format": "uuid"
                    },
                    "mistakes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.SpellCheck.Mistake"
                        },
                        "description": "Gets or sets a collections of timecard spelling errors.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a timecard spelling errors."
            },
            "E3E.API.Time.Models.TimecaptureModelApplyRequest": {
                "required": [
                    "modelId"
                ],
                "type": "object",
                "properties": {
                    "modelId": {
                        "type": "string",
                        "description": "Gets or sets the ID of a model that is going to be applied.",
                        "format": "uuid"
                    },
                    "timekeeper": {
                        "type": "integer",
                        "description": "Gets or sets a Timekeeper index to apply for newly created timecard.",
                        "format": "int32"
                    },
                    "workDate": {
                        "type": "string",
                        "description": "Gets or sets a WorkDate to apply for newly created timecard.",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false,
                "description": "Timecapture request to apply a data object model."
            },
            "E3E.API.Time.Models.TimecaptureSpellCheckBatchRequest": {
                "type": "object",
                "properties": {
                    "itemId": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "updateData": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether spelling errors should be saved on the collection."
                    }
                },
                "additionalProperties": false,
                "description": "Represents a timecapture spellcheck batch request."
            },
            "E3E.API.Time.Models.TimecaptureSpellCheckBatchResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    },
                    "timecards": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Time.Models.TimecaptureMistakes"
                        },
                        "description": "Gets or sets a collections of spelling errors.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a timecapture spellcheck batch response."
            },
            "E3E.API.Time.Models.TimecaptureSpellCheckRequest": {
                "required": [
                    "itemId"
                ],
                "type": "object",
                "properties": {
                    "itemId": {
                        "type": "string",
                        "description": "Gets or sets a timecapture item ID.",
                        "format": "uuid"
                    },
                    "text": {
                        "type": "string",
                        "description": "Gets or sets a text to validate. If not specified, then a card's narrative attribute is processed instead.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to spell check timecapture item."
            },
            "E3E.API.Time.Models.TimecaptureSpellCheckResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    },
                    "mistakes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.SpellCheck.Mistake"
                        },
                        "description": "Gets or sets a collections of spelling errors.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to spell check timecapture item."
            },
            "E3E.API.Time.Models.Timecard": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets unique id associated with the object.",
                        "nullable": true
                    },
                    "accessType": {
                        "$ref": "#/components/schemas/E3E.API.Data.AccessType"
                    },
                    "dataState": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteState"
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/E3E.API.Data.Models.Attribute"
                        },
                        "description": "Gets or sets the attributes.",
                        "nullable": true
                    },
                    "childObjects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                        },
                        "description": "Gets or sets the child objects for this data object. This is a collection of collections.",
                        "nullable": true
                    },
                    "error": {
                        "$ref": "#/components/schemas/E3E.API.Data.DataError"
                    },
                    "index": {
                        "type": "integer",
                        "description": "Gets or sets the index of the row.",
                        "format": "int32",
                        "default": -1
                    },
                    "isLocked": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether the row is checked out by another process."
                    },
                    "lockedMessage": {
                        "type": "string",
                        "description": "Gets or sets the message indicating whether the row is locked.",
                        "nullable": true
                    },
                    "rowState": {
                        "$ref": "#/components/schemas/E3E.API.Data.Models.DataRowStates"
                    },
                    "subclassId": {
                        "type": "string",
                        "description": "Gets or sets the subclass id of this row.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a single Timecard or TimecardPending object."
            },
            "E3E.API.Time.Models.TimecardAddResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to Add request."
            },
            "E3E.API.Time.Models.TimecardCleanupRequest": {
                "type": "object",
                "properties": {
                    "attributesToInclude": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "filterXOQL": {
                        "type": "string",
                        "nullable": true
                    },
                    "filter": {
                        "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicateGroup"
                    },
                    "itemIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "nullable": true
                    },
                    "timekeeperIndex": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "timekeeperNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "timekeeperID": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Gets or sets the StartDate (WorkDate).",
                        "format": "date-time",
                        "nullable": true
                    },
                    "endDate": {
                        "type": "string",
                        "description": "Gets or sets the EndDate (WorkDate).",
                        "format": "date-time",
                        "nullable": true
                    },
                    "keepTimecardsWithNarrative": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether timecards with Narrative populated (in addition to Work Hours) should be kept during cleanup.\r\nIf not supplied, then the behaviour will depend on Billing system option 'time_entry_cleanup'.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request for pending timecards cleanup."
            },
            "E3E.API.Time.Models.TimecardCleanupResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a TimecardCleanupRequest."
            },
            "E3E.API.Time.Models.TimecardClearRequest": {
                "type": "object",
                "properties": {
                    "itemId": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to clear timecapture post errors."
            },
            "E3E.API.Time.Models.TimecardClearResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to TimecardClearRequest."
            },
            "E3E.API.Time.Models.TimecardCloneRequest": {
                "type": "object",
                "properties": {
                    "itemId": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to clone a timecard."
            },
            "E3E.API.Time.Models.TimecardCloneResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    },
                    "itemId": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a TimecardCloneRequest."
            },
            "E3E.API.Time.Models.TimecardCreateRequest": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to create a pending timecard."
            },
            "E3E.API.Time.Models.TimecardCreateResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to TimecardPendingCreateRequest."
            },
            "E3E.API.Time.Models.TimecardDeleteRequest": {
                "type": "object",
                "properties": {
                    "itemId": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to delete a pending timecard."
            },
            "E3E.API.Time.Models.TimecardDeleteResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a TimecardDeleteRequest."
            },
            "E3E.API.Time.Models.TimecardGetAllResponse": {
                "type": "object",
                "properties": {
                    "timecardPendingObjects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Time.Models.Timecard"
                        },
                        "description": "Gets or sets the pending timecards.",
                        "nullable": true
                    },
                    "timecardPostedObjects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Time.Models.Timecard"
                        },
                        "description": "Gets or sets the posted timecards.",
                        "nullable": true
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to TimecardAllResponse."
            },
            "E3E.API.Time.Models.TimecardGetRequest": {
                "type": "object",
                "properties": {
                    "attributesToInclude": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "filterXOQL": {
                        "type": "string",
                        "nullable": true
                    },
                    "filter": {
                        "$ref": "#/components/schemas/E3E.API.Query.SJQL.SJPredicateGroup"
                    },
                    "itemIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "nullable": true
                    },
                    "timekeeperIndex": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "timekeeperNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "timekeeperID": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Gets or sets the StartDate (WorkDate).",
                        "format": "date-time",
                        "nullable": true
                    },
                    "endDate": {
                        "type": "string",
                        "description": "Gets or sets the EndDate (WorkDate).",
                        "format": "date-time",
                        "nullable": true
                    },
                    "index": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request for both posted and pendning timecards."
            },
            "E3E.API.Time.Models.TimecardGetResponse": {
                "type": "object",
                "properties": {
                    "timecards": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Time.Models.Timecard"
                        },
                        "description": "Gets or sets a collection of matter objects.",
                        "nullable": true
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to TimecardGetRequest."
            },
            "E3E.API.Time.Models.TimecardGetSchemaResponse": {
                "type": "object",
                "properties": {
                    "schema": {
                        "$ref": "#/components/schemas/NextGen.Framework.Managers.ObjectMgr.Schema.IDataObjectSchema"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a request for a timecard schema."
            },
            "E3E.API.Time.Models.TimecardPostRequest": {
                "type": "object",
                "properties": {
                    "itemId": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to post pending timecards."
            },
            "E3E.API.Time.Models.TimecardPostResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    },
                    "applicationMessages": {
                        "type": "string",
                        "description": "Gets or sets a message sent by the application code.",
                        "nullable": true
                    },
                    "failedTimecards": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Time.Models.Timecard"
                        },
                        "description": "Gets or sets the timecards which failed to post. Any validations errors will be specified within this.",
                        "nullable": true
                    },
                    "postedTimecards": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Time.Models.PostedTimecard"
                        },
                        "description": "Gets or sets the list of posted timecards.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a TimecardPostRequest."
            },
            "E3E.API.Time.Models.TimecardSpellCheckResponse": {
                "type": "object",
                "properties": {
                    "itemId": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a TimecardSpellCheckRequest. Contains the indexes for each pending timecard that has spelling errors."
            },
            "E3E.API.Time.Models.TimecardTemplateResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to GetDefaultNewPendingTimecard."
            },
            "E3E.API.Time.Models.TimecardUpdateRequest": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to update a timecard."
            },
            "E3E.API.Time.Models.TimecardUpdateResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to TimecardPendingUpdateRequest."
            },
            "E3E.API.Time.Models.TimecardValidateRequest": {
                "type": "object",
                "properties": {
                    "itemId": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to validate a timecard."
            },
            "E3E.API.Time.Models.TimecardValidateResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to TimecardValidateRequest."
            },
            "E3E.API.TimeWeeklyView.Models.TimeWeeklyViewGetResponse": {
                "type": "object",
                "properties": {
                    "groupedTimecardPendings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLite"
                        },
                        "description": "Gets or sets a collection of pending timecards that have been grouped for weekly view.",
                        "nullable": true
                    },
                    "groupedTimecards": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLite"
                        },
                        "description": "Gets or sets a collection of posted timecards that have been grouped for weekly view.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to TimeWeeklyViewGetRequest."
            },
            "E3E.API.Timekeeper.Models.Timekeeper": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets unique id associated with the object.",
                        "nullable": true
                    },
                    "accessType": {
                        "$ref": "#/components/schemas/E3E.API.Data.AccessType"
                    },
                    "dataState": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteState"
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/E3E.API.Data.Models.Attribute"
                        },
                        "description": "Gets or sets the attributes.",
                        "nullable": true
                    },
                    "childObjects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                        },
                        "description": "Gets or sets the child objects for this data object. This is a collection of collections.",
                        "nullable": true
                    },
                    "error": {
                        "$ref": "#/components/schemas/E3E.API.Data.DataError"
                    },
                    "index": {
                        "type": "integer",
                        "description": "Gets or sets the index of the row.",
                        "format": "int32",
                        "default": -1
                    },
                    "isLocked": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether the row is checked out by another process."
                    },
                    "lockedMessage": {
                        "type": "string",
                        "description": "Gets or sets the message indicating whether the row is locked.",
                        "nullable": true
                    },
                    "rowState": {
                        "$ref": "#/components/schemas/E3E.API.Data.Models.DataRowStates"
                    },
                    "subclassId": {
                        "type": "string",
                        "description": "Gets or sets the subclass id of this row.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a single Timekeeper object."
            },
            "E3E.API.Timekeeper.Models.TimekeeperCreateRequest": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to create a new Timekeeper."
            },
            "E3E.API.Timekeeper.Models.TimekeeperCreateResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a create request."
            },
            "E3E.API.Timekeeper.Models.TimekeeperGetResponse": {
                "type": "object",
                "properties": {
                    "timekeepers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/E3E.API.Timekeeper.Models.Timekeeper"
                        },
                        "description": "Gets or sets a collection of Timekeeper objects.",
                        "nullable": true
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a get request."
            },
            "E3E.API.Timekeeper.Models.TimekeeperGetSchemaResponse": {
                "type": "object",
                "properties": {
                    "schema": {
                        "$ref": "#/components/schemas/NextGen.Framework.Managers.ObjectMgr.Schema.IDataObjectSchema"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a request for a Timekeeper schema."
            },
            "E3E.API.Timekeeper.Models.TimekeeperTemplateResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to get a Timekeeper template."
            },
            "E3E.API.Timekeeper.Models.TimekeeperUpdateRequest": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to update a Timekeeper."
            },
            "E3E.API.Timekeeper.Models.TimekeeperUpdateResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to an update request."
            },
            "E3E.API.Timekeeper.Models.TimekeeperValidateRequest": {
                "type": "object",
                "properties": {
                    "itemId": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Contains parameters to make a request to validate a Timekeeper."
            },
            "E3E.API.Timekeeper.Models.TimekeeperValidateResponse": {
                "type": "object",
                "properties": {
                    "dataCollection": {
                        "$ref": "#/components/schemas/E3E.API.DataObject.Models.DataObjectLiteCollection"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a validate request."
            },
            "E3E.API.WorkflowIntegration.Models.ConfirmationInfo": {
                "type": "object",
                "properties": {
                    "reasonType": {
                        "type": "string",
                        "description": "Gets or sets the Reason Type.",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Gets or sets the Description.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents information used on workflow step confirmation page."
            },
            "E3E.API.WorkflowIntegration.Models.WorkflowActionResponse": {
                "type": "object",
                "properties": {
                    "responseType": {
                        "$ref": "#/components/schemas/E3E.API.Process.ProcessOutputResponseType"
                    },
                    "processItemId": {
                        "type": "string",
                        "description": "Gets or sets the created process item Id in case of RedirectProcess response.",
                        "format": "uuid"
                    },
                    "processId": {
                        "type": "string",
                        "description": "Gets or sets the created process code in case of RedirectProcess response.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Execute Workflow Step Action Response."
            },
            "Microsoft.AspNetCore.Mvc.ProblemDetails": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "detail": {
                        "type": "string",
                        "nullable": true
                    },
                    "instance": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": {}
            },
            "NextGen.Framework.Managers.DMSMgr.IDMSFolder": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "type": {
                        "$ref": "#/components/schemas/NextGen.Framework.Managers.DMSMgr.imObjectType"
                    },
                    "isHidden": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "docCount": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "subFolders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NextGen.Framework.Managers.DMSMgr.IDMSFolder"
                        },
                        "nullable": true,
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "NextGen.Framework.Managers.DMSMgr.IDMSWorkspace": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "folderCount": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "NextGen.Framework.Managers.DMSMgr.imObjectType": {
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49,
                    50,
                    51,
                    52,
                    53,
                    54,
                    55,
                    56,
                    57,
                    58,
                    59,
                    60,
                    61,
                    62,
                    63,
                    64,
                    65,
                    66,
                    67,
                    68,
                    69,
                    70,
                    71,
                    72,
                    73,
                    74,
                    75,
                    76,
                    77,
                    78,
                    79,
                    80,
                    81,
                    82,
                    83,
                    84,
                    85,
                    86,
                    87,
                    88,
                    89,
                    90,
                    91,
                    92,
                    93,
                    94,
                    95,
                    96,
                    97,
                    98,
                    99,
                    100,
                    101,
                    102,
                    103,
                    104,
                    105,
                    106,
                    107,
                    108,
                    109,
                    110,
                    111,
                    112,
                    113,
                    114,
                    115,
                    116,
                    117,
                    118,
                    119,
                    120,
                    121,
                    122,
                    123,
                    124,
                    125,
                    126,
                    127,
                    128,
                    129,
                    130,
                    131,
                    132,
                    133,
                    134,
                    135,
                    136,
                    137,
                    138,
                    139,
                    140,
                    141,
                    142,
                    143,
                    144,
                    145,
                    146,
                    147,
                    148,
                    149,
                    150,
                    151,
                    152,
                    153,
                    154,
                    155,
                    156,
                    157,
                    158,
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165
                ],
                "type": "integer",
                "format": "int32"
            },
            "NextGen.Framework.Managers.ObjectMgr.NxActionAccess": {
                "enum": [
                    1,
                    2,
                    3
                ],
                "type": "integer",
                "format": "int32"
            },
            "NextGen.Framework.Managers.ObjectMgr.NxAttributeAccess": {
                "enum": [
                    0,
                    1,
                    2,
                    3
                ],
                "type": "integer",
                "format": "int32"
            },
            "NextGen.Framework.Managers.ObjectMgr.Query.IDraftQuery": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "oqlDescription": {
                        "type": "string",
                        "nullable": true
                    },
                    "parent": {
                        "$ref": "#/components/schemas/NextGen.Framework.OQL.INode"
                    },
                    "getArchetype": {
                        "$ref": "#/components/schemas/NextGen.Framework.OQL.IBaseArchetype"
                    },
                    "leafList": {
                        "type": "array",
                        "items": {},
                        "nullable": true,
                        "readOnly": true
                    },
                    "database": {
                        "$ref": "#/components/schemas/NextGen.Framework.OQL.IDatabase"
                    },
                    "isAliased": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "isShared": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "draftID": {
                        "$ref": "#/components/schemas/NextGen.Framework.OQL.ILeaf"
                    },
                    "draftVersion": {
                        "$ref": "#/components/schemas/NextGen.Framework.OQL.ILeaf"
                    },
                    "draftState": {
                        "$ref": "#/components/schemas/NextGen.Framework.OQL.ILeaf"
                    },
                    "draftAccess": {
                        "$ref": "#/components/schemas/NextGen.Framework.OQL.ILeaf"
                    },
                    "draftExceptions": {
                        "$ref": "#/components/schemas/NextGen.Framework.OQL.ILeaf"
                    },
                    "draftMessages": {
                        "$ref": "#/components/schemas/NextGen.Framework.OQL.ILeaf"
                    },
                    "draftAudit": {
                        "$ref": "#/components/schemas/NextGen.Framework.OQL.ILeaf"
                    }
                },
                "additionalProperties": false
            },
            "NextGen.Framework.Managers.ObjectMgr.Query.ITemplateQuery": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "oqlDescription": {
                        "type": "string",
                        "nullable": true
                    },
                    "parent": {
                        "$ref": "#/components/schemas/NextGen.Framework.OQL.INode"
                    },
                    "getArchetype": {
                        "$ref": "#/components/schemas/NextGen.Framework.OQL.IBaseArchetype"
                    },
                    "leafList": {
                        "type": "array",
                        "items": {},
                        "nullable": true,
                        "readOnly": true
                    },
                    "database": {
                        "$ref": "#/components/schemas/NextGen.Framework.OQL.IDatabase"
                    },
                    "isAliased": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "isShared": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "templateID": {
                        "$ref": "#/components/schemas/NextGen.Framework.OQL.ILeaf"
                    }
                },
                "additionalProperties": false
            },
            "NextGen.Framework.Managers.ObjectMgr.Schema.IAttribute": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "captionID": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "dataType": {
                        "$ref": "#/components/schemas/NextGen.Framework.OQL.IType"
                    },
                    "ordinal": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "owner": {
                        "$ref": "#/components/schemas/NextGen.Framework.Managers.ObjectMgr.Schema.IBaseSchema"
                    },
                    "isReadonly": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "access": {
                        "$ref": "#/components/schemas/NextGen.Framework.Managers.ObjectMgr.Schema.NxAccessType"
                    },
                    "isChangeTracked": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "defaultValue": {
                        "nullable": true,
                        "readOnly": true
                    },
                    "draftOrdinal": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "templateOrdinal": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "linkedAttributes": {
                        "type": "array",
                        "items": {},
                        "nullable": true,
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "NextGen.Framework.Managers.ObjectMgr.Schema.IBaseSchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "captionID": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "keyAttribute": {
                        "$ref": "#/components/schemas/NextGen.Framework.Managers.ObjectMgr.Schema.IReadAttribute"
                    },
                    "allAttributes": {
                        "type": "array",
                        "items": {},
                        "nullable": true,
                        "readOnly": true
                    },
                    "lookups": {
                        "type": "array",
                        "items": {},
                        "nullable": true,
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "NextGen.Framework.Managers.ObjectMgr.Schema.IDataObjectSchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "captionID": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "keyAttribute": {
                        "$ref": "#/components/schemas/NextGen.Framework.Managers.ObjectMgr.Schema.IReadAttribute"
                    },
                    "allAttributes": {
                        "type": "array",
                        "items": {},
                        "nullable": true,
                        "readOnly": true
                    },
                    "lookups": {
                        "type": "array",
                        "items": {},
                        "nullable": true,
                        "readOnly": true
                    },
                    "idAttribute": {
                        "$ref": "#/components/schemas/NextGen.Framework.Managers.ObjectMgr.Schema.IAttribute"
                    },
                    "children": {
                        "type": "array",
                        "items": {},
                        "nullable": true,
                        "readOnly": true
                    },
                    "myChildren": {
                        "type": "array",
                        "items": {},
                        "nullable": true,
                        "readOnly": true
                    },
                    "baseSchema": {
                        "$ref": "#/components/schemas/NextGen.Framework.Managers.ObjectMgr.Schema.IDataObjectSchema"
                    },
                    "actions": {
                        "type": "array",
                        "items": {},
                        "nullable": true,
                        "readOnly": true
                    },
                    "actionsAccess": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NextGen.Framework.Managers.ObjectMgr.NxActionAccess"
                        },
                        "nullable": true,
                        "readOnly": true
                    },
                    "allAttributesAccess": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NextGen.Framework.Managers.ObjectMgr.NxAttributeAccess"
                        },
                        "nullable": true,
                        "readOnly": true
                    },
                    "isDeleteAutoPostBack": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "isRestoreAutoPostBack": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "isRemoveAutoPostBack": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "isChangeTracked": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "collectionActions": {
                        "type": "array",
                        "items": {},
                        "nullable": true,
                        "readOnly": true
                    },
                    "draftQueryInterface": {
                        "$ref": "#/components/schemas/NextGen.Framework.Managers.ObjectMgr.Query.IDraftQuery"
                    },
                    "templateQueryInterface": {
                        "$ref": "#/components/schemas/NextGen.Framework.Managers.ObjectMgr.Query.ITemplateQuery"
                    },
                    "draftQueryExpressions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NextGen.Framework.OQL.ILeaf"
                        },
                        "nullable": true,
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "NextGen.Framework.Managers.ObjectMgr.Schema.IObjectSchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "captionID": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "keyAttribute": {
                        "$ref": "#/components/schemas/NextGen.Framework.Managers.ObjectMgr.Schema.IReadAttribute"
                    },
                    "allAttributes": {
                        "type": "array",
                        "items": {},
                        "nullable": true,
                        "readOnly": true
                    },
                    "lookups": {
                        "type": "array",
                        "items": {},
                        "nullable": true,
                        "readOnly": true
                    },
                    "idAttribute": {
                        "$ref": "#/components/schemas/NextGen.Framework.Managers.ObjectMgr.Schema.IReadAttribute"
                    },
                    "children": {
                        "type": "array",
                        "items": {},
                        "nullable": true,
                        "readOnly": true
                    },
                    "myChildren": {
                        "type": "array",
                        "items": {},
                        "nullable": true,
                        "readOnly": true
                    },
                    "baseSchema": {
                        "$ref": "#/components/schemas/NextGen.Framework.Managers.ObjectMgr.Schema.IObjectSchema"
                    },
                    "actions": {
                        "type": "array",
                        "items": {},
                        "nullable": true,
                        "readOnly": true
                    },
                    "actionsAccess": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NextGen.Framework.Managers.ObjectMgr.NxActionAccess"
                        },
                        "nullable": true,
                        "readOnly": true
                    },
                    "allAttributesAccess": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NextGen.Framework.Managers.ObjectMgr.NxAttributeAccess"
                        },
                        "nullable": true,
                        "readOnly": true
                    },
                    "isDeleteAutoPostBack": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "isRestoreAutoPostBack": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "isRemoveAutoPostBack": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "isChangeTracked": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "collectionActions": {
                        "type": "array",
                        "items": {},
                        "nullable": true,
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "NextGen.Framework.Managers.ObjectMgr.Schema.IReadAttribute": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "captionID": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "dataType": {
                        "$ref": "#/components/schemas/NextGen.Framework.OQL.IType"
                    },
                    "ordinal": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "owner": {
                        "$ref": "#/components/schemas/NextGen.Framework.Managers.ObjectMgr.Schema.IBaseSchema"
                    },
                    "isReadonly": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "access": {
                        "$ref": "#/components/schemas/NextGen.Framework.Managers.ObjectMgr.Schema.NxAccessType"
                    },
                    "isChangeTracked": {
                        "type": "boolean",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "NextGen.Framework.Managers.ObjectMgr.Schema.ISchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "captionID": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "keyAttribute": {
                        "$ref": "#/components/schemas/NextGen.Framework.Managers.ObjectMgr.Schema.IReadAttribute"
                    },
                    "allAttributes": {
                        "type": "array",
                        "items": {},
                        "nullable": true,
                        "readOnly": true
                    },
                    "lookups": {
                        "type": "array",
                        "items": {},
                        "nullable": true,
                        "readOnly": true
                    },
                    "idAttribute": {
                        "$ref": "#/components/schemas/NextGen.Framework.Managers.ObjectMgr.Schema.IReadAttribute"
                    },
                    "children": {
                        "type": "array",
                        "items": {},
                        "nullable": true,
                        "readOnly": true
                    },
                    "myChildren": {
                        "type": "array",
                        "items": {},
                        "nullable": true,
                        "readOnly": true
                    },
                    "baseSchema": {
                        "$ref": "#/components/schemas/NextGen.Framework.Managers.ObjectMgr.Schema.ISchema"
                    },
                    "actions": {
                        "type": "array",
                        "items": {},
                        "nullable": true,
                        "readOnly": true
                    },
                    "actionsAccess": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NextGen.Framework.Managers.ObjectMgr.NxActionAccess"
                        },
                        "nullable": true,
                        "readOnly": true
                    },
                    "allAttributesAccess": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NextGen.Framework.Managers.ObjectMgr.NxAttributeAccess"
                        },
                        "nullable": true,
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "NextGen.Framework.Managers.ObjectMgr.Schema.NxAccessType": {
                "enum": [
                    0,
                    1,
                    2,
                    3
                ],
                "type": "integer",
                "format": "int32"
            },
            "NextGen.Framework.OQL.IBaseArchetype": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "baseArchetypeID": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "sourceObjectCode": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "idAttribute": {
                        "$ref": "#/components/schemas/NextGen.Framework.OQL.IBaseAttribute"
                    },
                    "keyAttribute": {
                        "$ref": "#/components/schemas/NextGen.Framework.OQL.IBaseAttribute"
                    },
                    "rowLevelAccessEnabled": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "attachmentsEnabled": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/NextGen.Framework.OQL.IBaseAttributeCollection"
                    }
                },
                "additionalProperties": false
            },
            "NextGen.Framework.OQL.IBaseAttribute": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "owner": {
                        "$ref": "#/components/schemas/NextGen.Framework.OQL.IBaseArchetype"
                    },
                    "isRequired": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "dataType": {
                        "$ref": "#/components/schemas/NextGen.Framework.OQL.IType"
                    },
                    "defaultValue": {
                        "nullable": true,
                        "readOnly": true
                    },
                    "sourceAttributeCode": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "isConfidential": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "isAlwaysEncrypted": {
                        "type": "boolean",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "NextGen.Framework.OQL.IBaseAttributeCollection": {
                "type": "object",
                "additionalProperties": false
            },
            "NextGen.Framework.OQL.IDatabase": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "schemata": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "NextGen.Framework.OQL.ILeaf": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "oqlDescription": {
                        "type": "string",
                        "nullable": true
                    },
                    "parent": {
                        "$ref": "#/components/schemas/NextGen.Framework.OQL.INode"
                    },
                    "getArchetype": {
                        "$ref": "#/components/schemas/NextGen.Framework.OQL.IBaseArchetype"
                    },
                    "o": {
                        "$ref": "#/components/schemas/NextGen.Framework.OQL.OExpression"
                    },
                    "getAttribute": {
                        "$ref": "#/components/schemas/NextGen.Framework.OQL.IBaseAttribute"
                    },
                    "getDBType": {
                        "$ref": "#/components/schemas/NextGen.Framework.OQL.IType"
                    }
                },
                "additionalProperties": false
            },
            "NextGen.Framework.OQL.INode": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "oqlDescription": {
                        "type": "string",
                        "nullable": true
                    },
                    "parent": {
                        "$ref": "#/components/schemas/NextGen.Framework.OQL.INode"
                    },
                    "getArchetype": {
                        "$ref": "#/components/schemas/NextGen.Framework.OQL.IBaseArchetype"
                    },
                    "leafList": {
                        "type": "array",
                        "items": {},
                        "nullable": true,
                        "readOnly": true
                    },
                    "database": {
                        "$ref": "#/components/schemas/NextGen.Framework.OQL.IDatabase"
                    },
                    "isAliased": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "isShared": {
                        "type": "boolean",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "NextGen.Framework.OQL.IType": {
                "type": "object",
                "properties": {
                    "oqlDescription": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "precision": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "scale": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "NextGen.Framework.OQL.OExpression": {
                "type": "object",
                "properties": {
                    "oqlDescription": {
                        "type": "string",
                        "nullable": true
                    },
                    "o": {
                        "$ref": "#/components/schemas/NextGen.Framework.OQL.OExpression"
                    }
                },
                "additionalProperties": false
            }
        }
    }
}